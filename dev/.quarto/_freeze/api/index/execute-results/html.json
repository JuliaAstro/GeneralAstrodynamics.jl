{
  "hash": "256836477c1dc04a95717665f5b11932",
  "result": {
    "engine": "jupyter",
    "markdown": "---\nnumber-depth: 2\n---\n\n\n\n\n# Reference\n\n_Docstrings for GeneralAstrodynamics._\n\n\n\n## `AstrodynamicalCalculations`\n\n:::{.callout appearance=\"minimal\"}\n\nCommon calculations within orbital mechanics and astrodynamics.\n\n### Extended Help {.unnumbered}\n\n#### Imports {.unnumbered}\n\n  * `AstrodynamicalCalculations.CR3BPCalculations`\n  * `AstrodynamicalCalculations.R2BPCalculations`\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n  * `Reexport`\n\n#### Exports {.unnumbered}\n\n  * [`CR3BPCalculations`](#CR3BPCalculations)\n  * [`R2BPCalculations`](#R2BPCalculations)\n  * [`apoapsis_radius`](#apoapsis_radius)\n  * [`argument_of_periapsis`](#argument_of_periapsis)\n  * [`c3`](#c3)\n  * [`cartesian_to_keplerian`](#cartesian_to_keplerian)\n  * [`cartesian_to_perifocal`](#cartesian_to_perifocal)\n  * [`conic`](#conic)\n  * [`converge`](#converge)\n  * [`converge!`](#converge!)\n  * [`convergent_direction`](#convergent_direction)\n  * [`distance_scaling`](#distance_scaling)\n  * [`distance_to_primary`](#distance_to_primary)\n  * [`distance_to_secondary`](#distance_to_secondary)\n  * [`diverge`](#diverge)\n  * [`diverge!`](#diverge!)\n  * [`divergent_direction`](#divergent_direction)\n  * [`eccentricity`](#eccentricity)\n  * [`eccentricity_vector`](#eccentricity_vector)\n  * [`hohmann`](#hohmann)\n  * [`inclination`](#inclination)\n  * [`jacobi_constant`](#jacobi_constant)\n  * [`kepler`](#kepler)\n  * [`keplerian_to_cartesian`](#keplerian_to_cartesian)\n  * [`keplerian_to_perifocal`](#keplerian_to_perifocal)\n  * [`lagrange_point`](#lagrange_point)\n  * [`lambert`](#lambert)\n  * [`mean_motion`](#mean_motion)\n  * [`nondimensional`](#nondimensional)\n  * [`nondimensional_radii`](#nondimensional_radii)\n  * [`orbital_period`](#orbital_period)\n  * [`orbital_radius`](#orbital_radius)\n  * [`orbital_speed`](#orbital_speed)\n  * [`periapsis_radius`](#periapsis_radius)\n  * [`perifocal_to_cartesian`](#perifocal_to_cartesian)\n  * [`perturb`](#perturb)\n  * [`perturb!`](#perturb!)\n  * [`perturbation`](#perturbation)\n  * [`potential_energy`](#potential_energy)\n  * [`primary_synodic_position`](#primary_synodic_position)\n  * [`redimensioned`](#redimensioned)\n  * [`reduced_mass`](#reduced_mass)\n  * [`richardson_halo`](#richardson_halo)\n  * [`richardson_ic`](#richardson_ic)\n  * [`right_ascension_ascending_node`](#right_ascension_ascending_node)\n  * [`secondary_synodic_position`](#secondary_synodic_position)\n  * [`semi_parameter`](#semi_parameter)\n  * [`semimajor_axis`](#semimajor_axis)\n  * [`specific_angular_momentum`](#specific_angular_momentum)\n  * [`specific_angular_momentum_vector`](#specific_angular_momentum_vector)\n  * [`specific_energy`](#specific_energy)\n  * [`specific_potential_energy`](#specific_potential_energy)\n  * [`sphere_of_activity`](#sphere_of_activity)\n  * [`sphere_of_influence`](#sphere_of_influence)\n  * [`time_scaling`](#time_scaling)\n  * [`time_since_periapsis`](#time_since_periapsis)\n  * [`true_anomaly`](#true_anomaly)\n  * [`v_infinity`](#v_infinity)\n  * [`velocity_scaling`](#velocity_scaling)\n  * [`zero_velocity_curves`](#zero_velocity_curves)\n\n:::\n\n{{< pagebreak >}}\n\n## `AstrodynamicalModels`\n\n:::{.callout appearance=\"minimal\"}\n\nProvides astrodynamical models as `AstrodynamicalModels.ODESystems`. Check out the `ModelingToolkit` docs to learn how to use these systems for orbit propagation with `DifferentialEquations`, or see `GeneralAstrodynamics` for some convenient orbit propagation wrappers.\n\n### Extended help {.unnumbered}\n\n#### License {.unnumbered}\n\nMIT License\n\nCopyright (c) 2023 Joseph D Carpinelli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#### Exports {.unnumbered}\n\n  * [`AttitudeFunction`](#AttitudeFunction)\n  * [`AttitudeParameters`](#AttitudeParameters)\n  * [`AttitudeState`](#AttitudeState)\n  * [`AttitudeSystem`](#AttitudeSystem)\n  * [`CR3BFunction`](#CR3BFunction)\n  * [`CR3BOrbit`](#CR3BOrbit)\n  * [`CR3BParameters`](#CR3BParameters)\n  * [`CR3BState`](#CR3BState)\n  * [`CR3BSystem`](#CR3BSystem)\n  * [`CartesianOrbit`](#CartesianOrbit)\n  * [`CartesianSTM`](#CartesianSTM)\n  * [`CartesianState`](#CartesianState)\n  * [`KeplerianOrbit`](#KeplerianOrbit)\n  * [`KeplerianParameters`](#KeplerianParameters)\n  * [`KeplerianState`](#KeplerianState)\n  * [`NBFunction`](#NBFunction)\n  * [`NBSystem`](#NBSystem)\n  * [`Orbit`](#Orbit)\n  * [`OrbitalElements`](#OrbitalElements)\n  * [`PlanarEntryFunction`](#PlanarEntryFunction)\n  * [`PlanarEntryParameters`](#PlanarEntryParameters)\n  * [`PlanarEntryState`](#PlanarEntryState)\n  * [`PlanarEntrySystem`](#PlanarEntrySystem)\n  * [`R2BFunction`](#R2BFunction)\n  * [`R2BOrbit`](#R2BOrbit)\n  * [`R2BParameters`](#R2BParameters)\n  * [`R2BState`](#R2BState)\n  * [`R2BSystem`](#R2BSystem)\n  * [`dynamics`](#dynamics)\n  * [`parameters`](#parameters)\n  * [`state`](#state)\n  * [`system`](#system)\n\n#### Imports {.unnumbered}\n\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n  * `LinearAlgebra`\n  * `Memoize`\n  * `ModelingToolkit`\n  * `SciMLBase`\n  * `StaticArrays`\n  * `Symbolics`\n\n:::\n\n{{< pagebreak >}}\n\n## `AstrodynamicalSolvers`\n\n:::{.callout appearance=\"minimal\"}\n\nProvides astrodynamical solvers, including Lyapunov and halo orbit correctors.\n\n### Extended help {.unnumbered}\n\n#### License {.unnumbered}\n\nMIT License\n\nCopyright (c) 2023 Joseph D Carpinelli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#### Exports {.unnumbered}\n\n  * [`CR3BSolvers`](#CR3BSolvers)\n  * [`Propagation`](#Propagation)\n  * [`halo`](#halo)\n  * [`lyapunov`](#lyapunov)\n  * [`monodromy`](#monodromy)\n  * [`propagate`](#propagate)\n  * [`propagate!`](#propagate!)\n\n#### Imports {.unnumbered}\n\n  * `AstrodynamicalSolvers.CR3BSolvers`\n  * `AstrodynamicalSolvers.Propagation`\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n  * `Reexport`\n\n:::\n\n{{< pagebreak >}}\n\n## `AttitudeFunction`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nAttitudeFunction(; stm, name, kwargs...)\n\n```\n\nReturns an `ODEFunction` for spacecraft attitude dynamics.\n\n### Extended Help {.unnumbered}\n\n##### Usage {.unnumbered}\n\nThe `stm` and `name` keyword arguments are passed to `Attitude`. All other keyword arguments are passed directly to `SciMLBase.ODEFunction`.\n\n```julia\nf = AttitudeFunction()\nlet u = randn(7), p = randn(15), t = NaN # time invariant\n    f(u, p, t)\nend\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `AttitudeParameters`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct AttitudeParameters{F} <: AstrodynamicalModels.AstrodynamicalParameters{F, 15}\n```\n\nA parameter vector for attitude dynamics.\n\n:::\n\n{{< pagebreak >}}\n\n## `AttitudeState`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmutable struct AttitudeState{F} <: AstrodynamicalModels.AstrodynamicalState{F, 7}\n```\n\nA mutable state vector for attitude dynamics.\n\n:::\n\n{{< pagebreak >}}\n\n## `AttitudeSystem`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nAttitudeSystem(; stm, name, defaults, kwargs...)\n\n```\n\nA `ModelingToolkit.ODESystem` for atmospheric entry. Currently, only exponential atmosphere models are provided! The output model is cached with `Memoize.jl`. Planet-specific parameters default to Earth values.\n\nThe order of the states follows: `[q₁, q₂, q₃, q₄, ω₁, ω₂, ω₃]`.\n\nThe order of the parameters follows: `[]`\n\n### Extended Help {.unnumbered}\n\nThis model describes how an object moves through an exponential atmosphere, above a spherical planet.\n\n#### States {.unnumbered}\n\n1. `q`: scalar-last attitude quaternion\n2. `ω`: body rates (radians per second)\n\n#### Parameters {.unnumbered}\n\n1. `J`: inertial matrix\n2. `L`: lever arm where input torque is applied\n3. `f`: torques on the vehicle body (Newton-meters)\n\n##### Usage {.unnumbered}\n\n```julia\nmodel = Attitude()\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `CR3BFunction`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nCR3BFunction(; stm, name, kwargs...)\n\n```\n\nReturns an `ODEFunction` for CR3B dynamics.\n\nThe order of the states follows: `[μ]`.\n\nThe order of the parameters follows: `[μ]`.\n\n### Extended Help {.unnumbered}\n\n##### Usage {.unnumbered}\n\nThe `stm`, and `name` keyword arguments are passed to `CR3B`. All other keyword arguments are passed directly to `SciMLBase.ODEFunction`.\n\n```julia\nf = CR3BFunction(; stm=false, jac=true)\nlet u = randn(6), p = randn(1), t = 0\n    f(u, p, t)\nend\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `CR3BOrbit`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct Orbit{var\"#s80\"<:CartesianState, var\"#s79\"<:CR3BParameters} <: AstrodynamicalModels.AstrodynamicalOrbit{var\"#s80\"<:CartesianState, var\"#s79\"<:CR3BParameters}\n```\n\nAn `Orbit` which exists within CR3BP dynamics.\n\nReturn a CR3BP orbit with parameters associated with the provided body in nondimensional units.\n\n:::\n\n{{< pagebreak >}}\n\n## `CR3BPCalculations`\n\n:::{.callout appearance=\"minimal\"}\n\nCommon calculations within Circular Restricted Three Body Problem dynamics.\n\n### Extended Help {.unnumbered}\n\n#### Imports {.unnumbered}\n\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n  * `LinearAlgebra`\n  * `Roots`\n  * `StaticArrays`\n\n#### Exports {.unnumbered}\n\n  * [`converge`](#converge)\n  * [`converge!`](#converge!)\n  * [`convergent_direction`](#convergent_direction)\n  * [`distance_scaling`](#distance_scaling)\n  * [`distance_to_primary`](#distance_to_primary)\n  * [`distance_to_secondary`](#distance_to_secondary)\n  * [`diverge`](#diverge)\n  * [`diverge!`](#diverge!)\n  * [`divergent_direction`](#divergent_direction)\n  * [`jacobi_constant`](#jacobi_constant)\n  * [`lagrange_point`](#lagrange_point)\n  * [`nondimensional`](#nondimensional)\n  * [`nondimensional_radii`](#nondimensional_radii)\n  * [`perturb`](#perturb)\n  * [`perturb!`](#perturb!)\n  * [`perturbation`](#perturbation)\n  * [`potential_energy`](#potential_energy)\n  * [`primary_synodic_position`](#primary_synodic_position)\n  * [`redimensioned`](#redimensioned)\n  * [`reduced_mass`](#reduced_mass)\n  * [`richardson_halo`](#richardson_halo)\n  * [`richardson_ic`](#richardson_ic)\n  * [`secondary_synodic_position`](#secondary_synodic_position)\n  * [`time_scaling`](#time_scaling)\n  * [`velocity_scaling`](#velocity_scaling)\n  * [`zero_velocity_curves`](#zero_velocity_curves)\n\n:::\n\n{{< pagebreak >}}\n\n## `CR3BParameters`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct CR3BParameters{F} <: AstrodynamicalModels.AstrodynamicalParameters{F, 1}\n```\n\nA paremeter vector for CR3BP dynamics.\n\nReturn the CR3BP parameters associated with the provided body in nondimensional units.\n\n:::\n\n{{< pagebreak >}}\n\n## `CR3BSolvers`\n\n:::{.callout appearance=\"minimal\"}\n\nSolvers specific to the Circular Restricted Three Body Problem.\n\n### Extended Help {.unnumbered}\n\n#### Exports {.unnumbered}\n\n  * [`halo`](#halo)\n  * [`lyapunov`](#lyapunov)\n\n#### Imports {.unnumbered}\n\n  * `AstrodynamicalCalculations`\n  * `AstrodynamicalModels`\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n  * `LinearAlgebra`\n  * `ModelingToolkit`\n  * `OrdinaryDiffEq`\n  * `StaticArrays`\n\n:::\n\n{{< pagebreak >}}\n\n## `CR3BState`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmutable struct CartesianState{F} <: AstrodynamicalModels.AstrodynamicalState{F, 6}\n```\n\nCartesianState\n\n:::\n\n{{< pagebreak >}}\n\n## `CR3BSystem`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nCR3BSystem(; stm, name, defaults, kwargs...)\n\n```\n\nA `ModelingToolkit.ODESystem` for the Circular Restricted Three-body Problem.\n\nThe order of the states follows: `[x, y, z, ẋ, ẏ, ż]`.\n\nThe order of the parameters follows: `[μ]`.\n\n### Extended Help {.unnumbered}\n\nThe Circular Restricted Three-body Problem is a simplified dynamical model describing one small body (spacecraft, etc.) and two celestial bodies moving in a circle about their common center of mass. This may seem like an arbitrary simplification, but this assumption holds reasonably well for the Earth-Moon, Sun-Earth, and many other systems in our solar system.\n\n##### Usage {.unnumbered}\n\n```julia\nmodel = CR3BSystem(; stm=true)\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `C_G_1000012_2012_2017`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 143.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/comets/C*G*1000012*2012_2017.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: C_G_1000012_2012_2017.bsp\n \nBody: CHURYUMOV-GERASIMENKO (1000012)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      2012 JAN 01 00:00:00.000            2017 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `CartesianOrbit`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct Orbit{var\"#s80\"<:CartesianState, P<:(AbstractVector)} <: AstrodynamicalModels.AstrodynamicalOrbit{var\"#s80\"<:CartesianState, P<:(AbstractVector)}\n```\n\nAn `Orbit` which exists within R2BP dynamics.\n\n:::\n\n{{< pagebreak >}}\n\n## `CartesianSTM`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmutable struct CartesianSTM{F} <: StaticArraysCore.FieldMatrix{6, 6, F}\n```\n\nA mutable matrix, with labels, for a 6DOF Cartesian state transition matrix.\n\n:::\n\n{{< pagebreak >}}\n\n## `CartesianState`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmutable struct CartesianState{F} <: AstrodynamicalModels.AstrodynamicalState{F, 6}\n```\n\nA mutable vector, with labels, for 6DOF Cartesian states.\n\n:::\n\n{{< pagebreak >}}\n\n## `DSK`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct DSK <: SPICEKernels.DigitalShapeKernel\n```\n\nA digital shape kernel.\n\n:::\n\n{{< pagebreak >}}\n\n## `EphemerisSources`\n\n:::{.callout appearance=\"minimal\"}\n\nA super-package for `HorizonsAPI`, `SPICEKernels`, `HorizonsEphemeris`, and  `SPICEBodies`. \n\n:::\n\n{{< pagebreak >}}\n\n## `FK`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct FK <: SPICEKernels.FramesKernel\n```\n\nA coordinate frames kernel.\n\n:::\n\n{{< pagebreak >}}\n\n## `GeneralAstrodynamics`\n\n:::{.callout appearance=\"minimal\"}\n\nA superpackage for handling common astrodynamics problems.  See the **Extended Help** section for more information!\n\n### Extended Help {.unnumbered}\n\n#### License {.unnumbered}\n\nMIT License\n\nCopyright (c) 2023 Joe Carpinelli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#### Exports {.unnumbered}\n\n  * [`AstrodynamicalCalculations`](#AstrodynamicalCalculations)\n  * [`AstrodynamicalModels`](#AstrodynamicalModels)\n  * [`AstrodynamicalSolvers`](#AstrodynamicalSolvers)\n  * [`AttitudeFunction`](#AttitudeFunction)\n  * [`AttitudeParameters`](#AttitudeParameters)\n  * [`AttitudeState`](#AttitudeState)\n  * [`AttitudeSystem`](#AttitudeSystem)\n  * [`CR3BFunction`](#CR3BFunction)\n  * [`CR3BOrbit`](#CR3BOrbit)\n  * [`CR3BPCalculations`](#CR3BPCalculations)\n  * [`CR3BParameters`](#CR3BParameters)\n  * [`CR3BSolvers`](#CR3BSolvers)\n  * [`CR3BState`](#CR3BState)\n  * [`CR3BSystem`](#CR3BSystem)\n  * [`C_G_1000012_2012_2017`](#C_G_1000012_2012_2017)\n  * [`CartesianOrbit`](#CartesianOrbit)\n  * [`CartesianSTM`](#CartesianSTM)\n  * [`CartesianState`](#CartesianState)\n  * [`DSK`](#DSK)\n  * [`EphemerisSources`](#EphemerisSources)\n  * [`FK`](#FK)\n  * [`Gravity`](#Gravity)\n  * [`HorizonsAPI`](#HorizonsAPI)\n  * [`HorizonsEphemeris`](#HorizonsEphemeris)\n  * [`KeplerianOrbit`](#KeplerianOrbit)\n  * [`KeplerianParameters`](#KeplerianParameters)\n  * [`KeplerianState`](#KeplerianState)\n  * [`KernelBody`](#KernelBody)\n  * [`L1_de431`](#L1_de431)\n  * [`L2_de431`](#L2_de431)\n  * [`L4_de431`](#L4_de431)\n  * [`L5_de431`](#L5_de431)\n  * [`LSK`](#LSK)\n  * [`NAIF`](#NAIF)\n  * [`NBFunction`](#NBFunction)\n  * [`NBSystem`](#NBSystem)\n  * [`Orbit`](#Orbit)\n  * [`OrbitalElements`](#OrbitalElements)\n  * [`PCK`](#PCK)\n  * [`PlanarEntryFunction`](#PlanarEntryFunction)\n  * [`PlanarEntryParameters`](#PlanarEntryParameters)\n  * [`PlanarEntryState`](#PlanarEntryState)\n  * [`PlanarEntrySystem`](#PlanarEntrySystem)\n  * [`Propagation`](#Propagation)\n  * [`R2BFunction`](#R2BFunction)\n  * [`R2BOrbit`](#R2BOrbit)\n  * [`R2BPCalculations`](#R2BPCalculations)\n  * [`R2BParameters`](#R2BParameters)\n  * [`R2BState`](#R2BState)\n  * [`R2BSystem`](#R2BSystem)\n  * [`SPICEBodies`](#SPICEBodies)\n  * [`SPICEKernels`](#SPICEKernels)\n  * [`SPK`](#SPK)\n  * [`apoapsis_radius`](#apoapsis_radius)\n  * [`argument_of_periapsis`](#argument_of_periapsis)\n  * [`c2013a1_s105_merged`](#c2013a1_s105_merged)\n  * [`c3`](#c3)\n  * [`cartesian_to_keplerian`](#cartesian_to_keplerian)\n  * [`cartesian_to_perifocal`](#cartesian_to_perifocal)\n  * [`codes_300ast_20100725_bsp`](#codes_300ast_20100725_bsp)\n  * [`codes_300ast_20100725_tf`](#codes_300ast_20100725_tf)\n  * [`conic`](#conic)\n  * [`converge`](#converge)\n  * [`converge!`](#converge!)\n  * [`convergent_direction`](#convergent_direction)\n  * [`de430`](#de430)\n  * [`de431_part_1`](#de431_part_1)\n  * [`de431_part_2`](#de431_part_2)\n  * [`de432s`](#de432s)\n  * [`de435`](#de435)\n  * [`de438`](#de438)\n  * [`de440`](#de440)\n  * [`de440s`](#de440s)\n  * [`de441_part_1`](#de441_part_1)\n  * [`de441_part_2`](#de441_part_2)\n  * [`de_403_masses`](#de_403_masses)\n  * [`distance_scaling`](#distance_scaling)\n  * [`distance_to_primary`](#distance_to_primary)\n  * [`distance_to_secondary`](#distance_to_secondary)\n  * [`diverge`](#diverge)\n  * [`diverge!`](#diverge!)\n  * [`divergent_direction`](#divergent_direction)\n  * [`dss_17_prelim_itrf93_161110`](#dss_17_prelim_itrf93_161110)\n  * [`dss_17_prelim_itrf93_190814_bsp`](#dss_17_prelim_itrf93_190814_bsp)\n  * [`dss_17_prelim_itrf93_190814_tf`](#dss_17_prelim_itrf93_190814_tf)\n  * [`dss_23_placeholder_itrf93_201017_bsp`](#dss_23_placeholder_itrf93_201017_bsp)\n  * [`dss_23_placeholder_itrf93_201017_tf`](#dss_23_placeholder_itrf93_201017_tf)\n  * [`dss_30_itrf93_210201_bsp`](#dss_30_itrf93_210201_bsp)\n  * [`dss_30_itrf93_210201_tf`](#dss_30_itrf93_210201_tf)\n  * [`dss_59_prelim_itrf93_220921_bsp`](#dss_59_prelim_itrf93_220921_bsp)\n  * [`dss_59_prelim_itrf93_220921_tf`](#dss_59_prelim_itrf93_220921_tf)\n  * [`dss_69_prelim_itrf93_201215_bsp`](#dss_69_prelim_itrf93_201215_bsp)\n  * [`dss_69_prelim_itrf93_201215_tf`](#dss_69_prelim_itrf93_201215_tf)\n  * [`dynamics`](#dynamics)\n  * [`earth_1962_240827_2124_combined`](#earth_1962_240827_2124_combined)\n  * [`earth_200101_990827_predict`](#earth_200101_990827_predict)\n  * [`earth_620120_240827`](#earth_620120_240827)\n  * [`earth_assoc_itrf93`](#earth_assoc_itrf93)\n  * [`earth_fixed`](#earth_fixed)\n  * [`earth_latest_high_prec`](#earth_latest_high_prec)\n  * [`earth_topo_201023`](#earth_topo_201023)\n  * [`earthstns_fx_201023`](#earthstns_fx_201023)\n  * [`earthstns_itrf93_201023`](#earthstns_itrf93_201023)\n  * [`eccentricity`](#eccentricity)\n  * [`eccentricity_vector`](#eccentricity_vector)\n  * [`ephemeris`](#ephemeris)\n  * [`fetch_approach`](#fetch_approach)\n  * [`fetch_elements`](#fetch_elements)\n  * [`fetch_observer`](#fetch_observer)\n  * [`fetch_properties`](#fetch_properties)\n  * [`fetch_spk`](#fetch_spk)\n  * [`fetch_vectors`](#fetch_vectors)\n  * [`fetchkernel`](#fetchkernel)\n  * [`furnsh`](#furnsh)\n  * [`gm`](#gm)\n  * [`gm_de431`](#gm_de431)\n  * [`gm_de440`](#gm_de440)\n  * [`halo`](#halo)\n  * [`hay_a_amica_5_itokawashape_v1_0_512q`](#hay_a_amica_5_itokawashape_v1_0_512q)\n  * [`hay_a_amica_5_itokawashape_v1_0_64q`](#hay_a_amica_5_itokawashape_v1_0_64q)\n  * [`hohmann`](#hohmann)\n  * [`inclination`](#inclination)\n  * [`ison`](#ison)\n  * [`jacobi_constant`](#jacobi_constant)\n  * [`jup344`](#jup344)\n  * [`jup344_nameid`](#jup344_nameid)\n  * [`jup344_s2003_j24`](#jup344_s2003_j24)\n  * [`jup344_s2003_j24_nameid`](#jup344_s2003_j24_nameid)\n  * [`jup346`](#jup346)\n  * [`jup346_nameid`](#jup346_nameid)\n  * [`jup365`](#jup365)\n  * [`kepler`](#kepler)\n  * [`keplerian_to_cartesian`](#keplerian_to_cartesian)\n  * [`keplerian_to_perifocal`](#keplerian_to_perifocal)\n  * [`kernel`](#kernel)\n  * [`lagrange_point`](#lagrange_point)\n  * [`lambert`](#lambert)\n  * [`latest_leapseconds_tls`](#latest_leapseconds_tls)\n  * [`lyapunov`](#lyapunov)\n  * [`mar097`](#mar097)\n  * [`mars_iau2000_v1`](#mars_iau2000_v1)\n  * [`mean_motion`](#mean_motion)\n  * [`monodromy`](#monodromy)\n  * [`moon_080317`](#moon_080317)\n  * [`moon_assoc_me`](#moon_assoc_me)\n  * [`moon_assoc_pa`](#moon_assoc_pa)\n  * [`moon_de440_220930`](#moon_de440_220930)\n  * [`moon_pa_de403_1950_2198`](#moon_pa_de403_1950_2198)\n  * [`moon_pa_de418_1950_2050`](#moon_pa_de418_1950_2050)\n  * [`moon_pa_de421_1900_2050`](#moon_pa_de421_1900_2050)\n  * [`moon_pa_de440_200625`](#moon_pa_de440_200625)\n  * [`naif0011`](#naif0011)\n  * [`naif0012_tls`](#naif0012_tls)\n  * [`ndosl_140530_v01_bsp`](#ndosl_140530_v01_bsp)\n  * [`ndosl_140530_v01_tf`](#ndosl_140530_v01_tf)\n  * [`ndosl_190716_v01_bsp`](#ndosl_190716_v01_bsp)\n  * [`ndosl_190716_v01_tf`](#ndosl_190716_v01_tf)\n  * [`ndosl_190716_v02_bsp`](#ndosl_190716_v02_bsp)\n  * [`ndosl_190716_v02_tf`](#ndosl_190716_v02_tf)\n  * [`near_a_msi_5_erosshape_v1_0_512q`](#near_a_msi_5_erosshape_v1_0_512q)\n  * [`near_a_msi_5_erosshape_v1_0_64q`](#near_a_msi_5_erosshape_v1_0_64q)\n  * [`nep095`](#nep095)\n  * [`nep095_nameid`](#nep095_nameid)\n  * [`nep097`](#nep097)\n  * [`nep097xl_801`](#nep097xl_801)\n  * [`nep097xl_899`](#nep097xl_899)\n  * [`nep101xl`](#nep101xl)\n  * [`nep101xl_802`](#nep101xl_802)\n  * [`nep104`](#nep104)\n  * [`nep104_nameid`](#nep104_nameid)\n  * [`nep105`](#nep105)\n  * [`nondimensional`](#nondimensional)\n  * [`nondimensional_radii`](#nondimensional_radii)\n  * [`orbital_period`](#orbital_period)\n  * [`orbital_radius`](#orbital_radius)\n  * [`orbital_speed`](#orbital_speed)\n  * [`parameters`](#parameters)\n  * [`pck00010`](#pck00010)\n  * [`pck00011`](#pck00011)\n  * [`pck00011_n0066`](#pck00011_n0066)\n  * [`periapsis_radius`](#periapsis_radius)\n  * [`perifocal_to_cartesian`](#perifocal_to_cartesian)\n  * [`perturb`](#perturb)\n  * [`perturb!`](#perturb!)\n  * [`perturbation`](#perturbation)\n  * [`phobos512`](#phobos512)\n  * [`phobos_2014_09_22`](#phobos_2014_09_22)\n  * [`phobos_3_3`](#phobos_3_3)\n  * [`plu060`](#plu060)\n  * [`potential_energy`](#potential_energy)\n  * [`primary_synodic_position`](#primary_synodic_position)\n  * [`propagate`](#propagate)\n  * [`propagate!`](#propagate!)\n  * [`radii`](#radii)\n  * [`redimensioned`](#redimensioned)\n  * [`reduced_mass`](#reduced_mass)\n  * [`richardson_halo`](#richardson_halo)\n  * [`richardson_ic`](#richardson_ic)\n  * [`right_ascension_ascending_node`](#right_ascension_ascending_node)\n  * [`sat393_daphnis`](#sat393_daphnis)\n  * [`sat415`](#sat415)\n  * [`sat441`](#sat441)\n  * [`sat441xl_part_1`](#sat441xl_part_1)\n  * [`sat441xl_part_2`](#sat441xl_part_2)\n  * [`sat454`](#sat454)\n  * [`sat454_nameid`](#sat454_nameid)\n  * [`secondary_synodic_position`](#secondary_synodic_position)\n  * [`semi_parameter`](#semi_parameter)\n  * [`semimajor_axis`](#semimajor_axis)\n  * [`siding_spring_8_19_14`](#siding_spring_8_19_14)\n  * [`siding_spring_s46`](#siding_spring_s46)\n  * [`specific_angular_momentum`](#specific_angular_momentum)\n  * [`specific_angular_momentum_vector`](#specific_angular_momentum_vector)\n  * [`specific_energy`](#specific_energy)\n  * [`specific_potential_energy`](#specific_potential_energy)\n  * [`sphere_of_activity`](#sphere_of_activity)\n  * [`sphere_of_influence`](#sphere_of_influence)\n  * [`state`](#state)\n  * [`system`](#system)\n  * [`time_scaling`](#time_scaling)\n  * [`time_since_periapsis`](#time_since_periapsis)\n  * [`tnosat_v001_20000617_jpl082_20230601`](#tnosat_v001_20000617_jpl082_20230601)\n  * [`tnosat_v001_20050000_jpl043_20220908`](#tnosat_v001_20050000_jpl043_20220908)\n  * [`tnosat_v001_20090482_jpl043_20220908`](#tnosat_v001_20090482_jpl043_20220908)\n  * [`tnosat_v001_20120347_jpl025_20220908`](#tnosat_v001_20120347_jpl025_20220908)\n  * [`tnosat_v001_20136199_jpl080_20220908`](#tnosat_v001_20136199_jpl080_20220908)\n  * [`tnosat_v001_20469705_jpl009_20220908`](#tnosat_v001_20469705_jpl009_20220908)\n  * [`tnosat_v001_20612095_jpl006_20220908`](#tnosat_v001_20612095_jpl006_20220908)\n  * [`tnosat_v001_20612687_jpl008_20220908`](#tnosat_v001_20612687_jpl008_20220908)\n  * [`tnosat_v001_53031823_jpl010_20220908`](#tnosat_v001_53031823_jpl010_20220908)\n  * [`tnosat_v001_53092511_jpl005_20220908`](#tnosat_v001_53092511_jpl005_20220908)\n  * [`tnosat_v001b_20136108_jpl110_20221014`](#tnosat_v001b_20136108_jpl110_20221014)\n  * [`true_anomaly`](#true_anomaly)\n  * [`ura111`](#ura111)\n  * [`ura111l`](#ura111l)\n  * [`ura111xl_701`](#ura111xl_701)\n  * [`ura111xl_702`](#ura111xl_702)\n  * [`ura111xl_703`](#ura111xl_703)\n  * [`ura111xl_704`](#ura111xl_704)\n  * [`ura111xl_705`](#ura111xl_705)\n  * [`ura111xl_799`](#ura111xl_799)\n  * [`ura115`](#ura115)\n  * [`ura116`](#ura116)\n  * [`ura116xl`](#ura116xl)\n  * [`ura117`](#ura117)\n  * [`ura117_nameid`](#ura117_nameid)\n  * [`v_infinity`](#v_infinity)\n  * [`velocity_scaling`](#velocity_scaling)\n  * [`vesta_gaskell_256`](#vesta_gaskell_256)\n  * [`vesta_thomas_1997`](#vesta_thomas_1997)\n  * [`zero_velocity_curves`](#zero_velocity_curves)\n\n:::\n\n{{< pagebreak >}}\n\n## `Gravity`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 14.4 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/pck/Gravity.tpc\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.PlanetaryConstantsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `HorizonsAPI`\n\n:::{.callout appearance=\"minimal\"}\n\nInteract with the JPL Horizons REST API.\n\n### Extended Help {.unnumbered}\n\n#### License {.unnumbered}\n\nMIT License\n\nCopyright (c) 2023 Joe Carpinelli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#### Exports {.unnumbered}\n\n  * [`fetch_approach`](#fetch_approach)\n  * [`fetch_elements`](#fetch_elements)\n  * [`fetch_observer`](#fetch_observer)\n  * [`fetch_properties`](#fetch_properties)\n  * [`fetch_spk`](#fetch_spk)\n  * [`fetch_vectors`](#fetch_vectors)\n\n#### Imports {.unnumbered}\n\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n\n:::\n\n{{< pagebreak >}}\n\n## `HorizonsEphemeris`\n\n:::{.callout appearance=\"minimal\"}\n\nInteract with the JPL Horizons REST API.\n\n### Extended Help {.unnumbered}\n\n#### License {.unnumbered}\n\nMIT License\n\nCopyright (c) 2023 Joe Carpinelli\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n#### Exports {.unnumbered}\n\n  * [`NAIF`](#NAIF)\n  * [`ephemeris`](#ephemeris)\n\n#### Imports {.unnumbered}\n\n  * `AstroTime`\n  * `Base`\n  * `CSV`\n  * `Core`\n  * `Dates`\n  * `DocStringExtensions`\n  * `Printf`\n\n:::\n\n{{< pagebreak >}}\n\n## `KeplerianOrbit`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct Orbit{var\"#s80\"<:OrbitalElements, var\"#s79\"<:KeplerianParameters} <: AstrodynamicalModels.AstrodynamicalOrbit{var\"#s80\"<:OrbitalElements, var\"#s79\"<:KeplerianParameters}\n```\n\nAn `Orbit` which exists within Keplerian dynamics.\n\nReturn a Keplerian orbit with parameters associated with the provided body (KM^3/S^2).\n\n:::\n\n{{< pagebreak >}}\n\n## `KeplerianParameters`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct KeplerianParameters{F} <: AstrodynamicalModels.AstrodynamicalParameters{F, 1}\n```\n\nA parameter vector for Keplerian dynamics.\n\nReturn the Keplerian parameters associated with the provided body (KM^3/S^2).\n\n:::\n\n{{< pagebreak >}}\n\n## `KeplerianState`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmutable struct OrbitalElements{F} <: AstrodynamicalModels.AstrodynamicalState{F, 6}\n```\n\nOrbitalElements\n\n:::\n\n{{< pagebreak >}}\n\n## `KernelBody`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct KernelBody <: SPICEBodies.AbstractKernelBody\n```\n\nAny celestial body, spacecraft, barycenter, or other ephemeris object which has an  assigned NAIF ID within the local SPICE kernel pool.\n\nGiven an epoch, return the state vector `[x, y, z, ẋ, ẏ, ż]` (KM,KM/s) of  the body relative to the observer defined by `wrt`. See `spkez` for more  information about the underlying implementation. Use the `dimension` keyword argument to specify whether you want the full state vector, the `Val(:position)`, or the `Val(:velocity)`.\n\n```julia\nbody(epoch; frame = \"J2000\", aberration = \"none\", wrt = naifcode(\"ssb\"), dimension = Val(:all))\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `L1_de431`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 3.0 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/lagrange*point/L1_de431.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: L1_de431.bsp\n \nBody: 391\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1900 JAN 01 00:00:00.000            2151 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `L2_de431`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 3.0 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/lagrange*point/L2_de431.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: L2_de431.bsp\n \nBody: 392\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1900 JAN 01 00:00:00.000            2151 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `L4_de431`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 3.0 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/lagrange*point/L4_de431.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: L4_de431.bsp\n \nBody: 394\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1900 JAN 01 00:00:00.000            2151 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `L5_de431`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 3.0 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/lagrange*point/L5_de431.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: L5_de431.bsp\n \nBody: 395\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1900 JAN 01 00:00:00.000            2151 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `LSK`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct LSK <: SPICEKernels.LeapSecondsKernel\n```\n\nA leapseconds kernel.\n\n:::\n\n{{< pagebreak >}}\n\n## `NAIF`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nNAIF(name)\n\n```\n\nGiven a NAIF ID, return the associated name, if one exists. If the ID provided cannot be found, a `KeyError` is thrown.\n\n```julia\nNAIF(code)\n\n```\n\nIf a name is given, return the associated NAIF ID, if one exists. If the name provided cannot be found, a `KeyError` is thrown.\n\n:::\n\n{{< pagebreak >}}\n\n## `NBFunction`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nNBFunction(N; stm, name, kwargs...)\n\n```\n\nReturns an `ODEFunction` for NBP dynamics. The order of states and parameters in the `ODEFunction` arguments are equivalent to the order of states and parameters for the system produced with `NBP(N)`. As a general rule, the order of the states follows: `[x₁, y₁, z₁, ..., xₙ, yₙ, zₙ, ẋ₁, ẏ₁, ż₁, ..., ẋₙ, ẏₙ, żₙ]`.\n\n:::{.callout-note title=\"Note\"}\n\nUnlike `R2BP` and `CR3BP`, `jac` is set to `false` by default. The number of states for `NBP` systems can be very large for relatively small numbers of bodies (`N`). Enabling `jac=true` by default would cause unnecessarily long waiting times for this @memoize function to return for `N ≥ 3` or so. If `N=2` and `stm=true`, setting `jac=true` could still result in several minutes of calculations, depending on the computer you're using.\n\n:::\n\n:::{.callout-warning title=\"Warning\"}\n\nBe careful about specifying `stm=true` for systems with `N ≥ 3`! If state transition matrix dynamics are enabled, you can calculate the total number of system states with `N*6 + (N*6)^2`. Note that this increases exponentially as `N` grows! For `N == 6`, unless you're using parallelization, your computer may run for several hours.\n\n:::\n\n### Extended Help {.unnumbered}\n\n##### Usage {.unnumbered}\n\nThe `stm`, and `name` keyword arguments are passed to `NBP`. All other keyword arguments are passed directly to `SciMLBase.ODEFunction`.\n\n```julia\nf = NBFunction(3; stm=false, name=:NBP, jac=false, sparse=false)\nlet u = randn(3*6), p = randn(1 + 3), t = 0\n    f(u, p, t)\nend\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `NBSystem`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nNBSystem(N; stm, name, defaults, kwargs...)\n\n```\n\nA `ModelingToolkit.ODESystem` for the Newtonian N-body Problem.\n\nThe order of the states follows: `[x₁, y₁, z₁, ..., xₙ, yₙ, zₙ, ẋ₁, ẏ₁, ż₁, ..., ẋₙ, ẏₙ, żₙ]`.\n\nThe order of the parameters follows: `[G, m₁, m₂, ..., mₙ]`.\n\n:::{.callout-warning title=\"Warning\"}\n\nBe careful about specifying `stm=true` for systems with `N ≥ 3`! If state transition matrix dynamics are enabled, you can calculate the total number of system states with `N*6 + (N*6)^2`. Note that this increases exponentially as `N` grows! For `N == 6`, unless you're using parallelization, your computer may run for several hours.\n\n:::\n\n### Extended Help {.unnumbered}\n\nThe N-body problem is a model which describes how `N` bodies will move with respect to a common origin. This problem typically involves many bodies which act due to one force: electromagentism, gravity, etc. This model applies most closely to many celestial bodies moving due to gravity. That's about right for a model in a package called `AstrodynamicalModels`!\n\n##### Usage {.unnumbered}\n\n```julia\n# One model for ALL the planets in our solar system 😎\nmodel = NBSystem(9)\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `Orbit`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct Orbit{U<:(AbstractVector), P<:(AbstractVector)} <: AstrodynamicalModels.AstrodynamicalOrbit{U<:(AbstractVector), P<:(AbstractVector)}\n```\n\nA full representation of an orbit, including a numerical state, and the parameters of the system.\n\nReturn an orbit with parameters associated with the provided body (KM^3/S^2).\n\n:::\n\n{{< pagebreak >}}\n\n## `OrbitalElements`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmutable struct OrbitalElements{F} <: AstrodynamicalModels.AstrodynamicalState{F, 6}\n```\n\nA mutable vector, with labels, for 6DOF Keplerian states.\n\n:::\n\n{{< pagebreak >}}\n\n## `PCK`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct PCK <: SPICEKernels.PlanetaryConstantsKernel\n```\n\nA planetary constants kernel.\n\n:::\n\n{{< pagebreak >}}\n\n## `PlanarEntryFunction`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nPlanarEntryFunction(; name, kwargs...)\n\n```\n\nReturns an `ODEFunction` for Planar Entry dynamics. Results are cached with `Memoize.jl`.\n\nThe order of the states follows: `[γ, v, r, θ]`.\n\nThe order of the parameters follows: `[R, P, H, m, A, C, μ]`\n\n### Extended Help {.unnumbered}\n\n##### Usage {.unnumbered}\n\nThe `name` keyword argument is ]passed to `PlanarEntry`. All other keyword arguments are passed directly to `SciMLBase.ODEFunction`.\n\n```julia\nf = PlanarEntryFunction()\nlet u = randn(4), p = randn(7), t = NaN # time invariant\n    f(u, p, t)\nend\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `PlanarEntryParameters`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct PlanarEntryParameters{F} <: AstrodynamicalModels.AstrodynamicalParameters{F, 7}\n```\n\nA parameter vector for planar entry dynamics.\n\n:::\n\n{{< pagebreak >}}\n\n## `PlanarEntryState`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmutable struct PlanarEntryState{F} <: AstrodynamicalModels.AstrodynamicalState{F, 4}\n```\n\nA state vector for planar entry dynamics.\n\n:::\n\n{{< pagebreak >}}\n\n## `PlanarEntrySystem`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nPlanarEntrySystem(; name, defaults, kwargs...)\n\n```\n\nA `ModelingToolkit.ODESystem` for atmospheric entry. Currently, only exponential atmosphere models are provided! The output model is cached with `Memoize.jl`. Planet-specific parameters default to Earth values.\n\nThe order of the states follows: `[γ, v, r, θ]`.\n\nThe order of the parameters follows: `[R, P, H, m, A, C, μ]`\n\n### Extended Help {.unnumbered}\n\nThis model describes how an object moves through an exponential atmosphere, above a spherical planet.\n\n##### Usage {.unnumbered}\n\n```julia\nmodel = PlanarEntrySystem()\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `Propagation`\n\n:::{.callout appearance=\"minimal\"}\n\nWrappers around SciML differential equation solvers for fast and convenient  orbit propagation.\n\n### Extended Help {.unnumbered}\n\n#### Exports {.unnumbered}\n\n  * [`monodromy`](#monodromy)\n  * [`propagate`](#propagate)\n  * [`propagate!`](#propagate!)\n\n#### Imports {.unnumbered}\n\n  * `AstrodynamicalModels`\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n  * `ModelingToolkit`\n  * `OrdinaryDiffEq`\n  * `StaticArrays`\n\n:::\n\n{{< pagebreak >}}\n\n## `R2BFunction`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nR2BFunction(; stm, name, kwargs...)\n\n```\n\nReturns an `ODEFunction` for R2B dynamics.\n\nThe order of the states follows: `[x, y, z, ẋ, ẏ, ż]`.\n\nThe order of the parameters follows: `[μ]`.\n\n### Extended Help {.unnumbered}\n\n##### Usage {.unnumbered}\n\nThe `stm`, and `name` keyword arguments are passed to `R2B`. All other keyword arguments are passed directly to `SciMLBase.ODEFunction`.\n\n```julia\nf = R2BFunction(; stm=false, name=:R2B, jac=true)\nlet u = randn(6), p = randn(1), t = 0\n    f(u, p, t)\nend\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `R2BOrbit`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct Orbit{var\"#s80\"<:CartesianState, var\"#s79\"<:R2BParameters} <: AstrodynamicalModels.AstrodynamicalOrbit{var\"#s80\"<:CartesianState, var\"#s79\"<:R2BParameters}\n```\n\nAn `Orbit` which exists within R2BP dynamics.\n\nReturn a R2BP orbit with parameters associated with the provided body (KM^3/S^2).\n\n:::\n\n{{< pagebreak >}}\n\n## `R2BPCalculations`\n\n:::{.callout appearance=\"minimal\"}\n\nCommon calculations within Restricted Two Body Problem dynamics.\n\n### Extended Help {.unnumbered}\n\n#### Imports {.unnumbered}\n\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n  * `LinearAlgebra`\n  * `StaticArrays`\n\n#### Exports {.unnumbered}\n\n  * [`apoapsis_radius`](#apoapsis_radius)\n  * [`argument_of_periapsis`](#argument_of_periapsis)\n  * [`c3`](#c3)\n  * [`cartesian_to_keplerian`](#cartesian_to_keplerian)\n  * [`cartesian_to_perifocal`](#cartesian_to_perifocal)\n  * [`conic`](#conic)\n  * [`eccentricity`](#eccentricity)\n  * [`eccentricity_vector`](#eccentricity_vector)\n  * [`hohmann`](#hohmann)\n  * [`inclination`](#inclination)\n  * [`kepler`](#kepler)\n  * [`keplerian_to_cartesian`](#keplerian_to_cartesian)\n  * [`keplerian_to_perifocal`](#keplerian_to_perifocal)\n  * [`lambert`](#lambert)\n  * [`mean_motion`](#mean_motion)\n  * [`orbital_period`](#orbital_period)\n  * [`orbital_radius`](#orbital_radius)\n  * [`orbital_speed`](#orbital_speed)\n  * [`periapsis_radius`](#periapsis_radius)\n  * [`perifocal_to_cartesian`](#perifocal_to_cartesian)\n  * [`right_ascension_ascending_node`](#right_ascension_ascending_node)\n  * [`semi_parameter`](#semi_parameter)\n  * [`semimajor_axis`](#semimajor_axis)\n  * [`specific_angular_momentum`](#specific_angular_momentum)\n  * [`specific_angular_momentum_vector`](#specific_angular_momentum_vector)\n  * [`specific_energy`](#specific_energy)\n  * [`specific_potential_energy`](#specific_potential_energy)\n  * [`sphere_of_activity`](#sphere_of_activity)\n  * [`sphere_of_influence`](#sphere_of_influence)\n  * [`time_since_periapsis`](#time_since_periapsis)\n  * [`true_anomaly`](#true_anomaly)\n  * [`v_infinity`](#v_infinity)\n\n:::\n\n{{< pagebreak >}}\n\n## `R2BParameters`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct R2BParameters{F} <: AstrodynamicalModels.AstrodynamicalParameters{F, 1}\n```\n\nA parameter vector for R2BP dynamics.\n\nReturn the R2BP parameters associated with the provided body (KM^3/S^2).\n\n:::\n\n{{< pagebreak >}}\n\n## `R2BState`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmutable struct CartesianState{F} <: AstrodynamicalModels.AstrodynamicalState{F, 6}\n```\n\nCartesianState\n\n:::\n\n{{< pagebreak >}}\n\n## `R2BSystem`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nR2BSystem(; stm, name, defaults, kwargs...)\n\n```\n\nA `ModelingToolkit.ODESystem` for the Restricted Two-body Problem.\n\nThe order of the states follows: `[x, y, z, ẋ, ẏ, ż]`.\n\nThe order of the parameters follows: `[μ]`.\n\n### Extended Help {.unnumbered}\n\nThe Restricted Two-body Problem is a simplified dynamical model describing one small body (spacecraft, etc.) and one celestial body. The gravity of the celestial body exhibits a force on the small body. This model is commonly used as a simplification to descibe our solar systems' planets orbiting our sun, or a spacecraft orbiting Earth.\n\n##### Usage {.unnumbered}\n\n```julia\nmodel = R2BSystem()\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `SPICEBodies`\n\n:::{.callout appearance=\"minimal\"}\n\nEphemeris via SPICE kernels.\n\n### Extended Help {.unnumbered}\n\n#### Imports {.unnumbered}\n\n  * `AstroTime`\n  * `Base`\n  * `Core`\n  * `DocStringExtensions`\n  * `LinearAlgebra`\n  * `SPICE`\n\n#### Exports {.unnumbered}\n\n  * [`KernelBody`](#KernelBody)\n  * [`gm`](#gm)\n  * [`radii`](#radii)\n\n:::\n\n{{< pagebreak >}}\n\n## `SPICEKernels`\n\n:::{.callout appearance=\"minimal\"}\n\nDownload any and all Generic Kernels provided by NASA JPL!\n\n:::{.callout-warning title=\"Warning\"}\n\nThis package is not affiliated with or endorsed by NASA, JPL, or any other organization! This is an independently written package by an astrodynamics hobbyist.\n\n:::\n\n### Extended Help {.unnumbered}\n\n#### Imports {.unnumbered}\n\n  * `Base`\n  * `Core`\n  * `Dates`\n  * `DocStringExtensions`\n  * `Downloads`\n  * `HTTP`\n  * `Scratch`\n\n#### Exports {.unnumbered}\n\n  * [`C_G_1000012_2012_2017`](#C_G_1000012_2012_2017)\n  * [`DSK`](#DSK)\n  * [`FK`](#FK)\n  * [`Gravity`](#Gravity)\n  * [`L1_de431`](#L1_de431)\n  * [`L2_de431`](#L2_de431)\n  * [`L4_de431`](#L4_de431)\n  * [`L5_de431`](#L5_de431)\n  * [`LSK`](#LSK)\n  * [`PCK`](#PCK)\n  * [`SPK`](#SPK)\n  * [`c2013a1_s105_merged`](#c2013a1_s105_merged)\n  * [`codes_300ast_20100725_bsp`](#codes_300ast_20100725_bsp)\n  * [`codes_300ast_20100725_tf`](#codes_300ast_20100725_tf)\n  * [`de430`](#de430)\n  * [`de431_part_1`](#de431_part_1)\n  * [`de431_part_2`](#de431_part_2)\n  * [`de432s`](#de432s)\n  * [`de435`](#de435)\n  * [`de438`](#de438)\n  * [`de440`](#de440)\n  * [`de440s`](#de440s)\n  * [`de441_part_1`](#de441_part_1)\n  * [`de441_part_2`](#de441_part_2)\n  * [`de_403_masses`](#de_403_masses)\n  * [`dss_17_prelim_itrf93_161110`](#dss_17_prelim_itrf93_161110)\n  * [`dss_17_prelim_itrf93_190814_bsp`](#dss_17_prelim_itrf93_190814_bsp)\n  * [`dss_17_prelim_itrf93_190814_tf`](#dss_17_prelim_itrf93_190814_tf)\n  * [`dss_23_placeholder_itrf93_201017_bsp`](#dss_23_placeholder_itrf93_201017_bsp)\n  * [`dss_23_placeholder_itrf93_201017_tf`](#dss_23_placeholder_itrf93_201017_tf)\n  * [`dss_30_itrf93_210201_bsp`](#dss_30_itrf93_210201_bsp)\n  * [`dss_30_itrf93_210201_tf`](#dss_30_itrf93_210201_tf)\n  * [`dss_59_prelim_itrf93_220921_bsp`](#dss_59_prelim_itrf93_220921_bsp)\n  * [`dss_59_prelim_itrf93_220921_tf`](#dss_59_prelim_itrf93_220921_tf)\n  * [`dss_69_prelim_itrf93_201215_bsp`](#dss_69_prelim_itrf93_201215_bsp)\n  * [`dss_69_prelim_itrf93_201215_tf`](#dss_69_prelim_itrf93_201215_tf)\n  * [`earth_1962_240827_2124_combined`](#earth_1962_240827_2124_combined)\n  * [`earth_200101_990827_predict`](#earth_200101_990827_predict)\n  * [`earth_620120_240827`](#earth_620120_240827)\n  * [`earth_assoc_itrf93`](#earth_assoc_itrf93)\n  * [`earth_fixed`](#earth_fixed)\n  * [`earth_latest_high_prec`](#earth_latest_high_prec)\n  * [`earth_topo_201023`](#earth_topo_201023)\n  * [`earthstns_fx_201023`](#earthstns_fx_201023)\n  * [`earthstns_itrf93_201023`](#earthstns_itrf93_201023)\n  * [`fetchkernel`](#fetchkernel)\n  * [`gm_de431`](#gm_de431)\n  * [`gm_de440`](#gm_de440)\n  * [`hay_a_amica_5_itokawashape_v1_0_512q`](#hay_a_amica_5_itokawashape_v1_0_512q)\n  * [`hay_a_amica_5_itokawashape_v1_0_64q`](#hay_a_amica_5_itokawashape_v1_0_64q)\n  * [`ison`](#ison)\n  * [`jup344`](#jup344)\n  * [`jup344_nameid`](#jup344_nameid)\n  * [`jup344_s2003_j24`](#jup344_s2003_j24)\n  * [`jup344_s2003_j24_nameid`](#jup344_s2003_j24_nameid)\n  * [`jup346`](#jup346)\n  * [`jup346_nameid`](#jup346_nameid)\n  * [`jup365`](#jup365)\n  * [`kernel`](#kernel)\n  * [`latest_leapseconds_tls`](#latest_leapseconds_tls)\n  * [`mar097`](#mar097)\n  * [`mars_iau2000_v1`](#mars_iau2000_v1)\n  * [`moon_080317`](#moon_080317)\n  * [`moon_assoc_me`](#moon_assoc_me)\n  * [`moon_assoc_pa`](#moon_assoc_pa)\n  * [`moon_de440_220930`](#moon_de440_220930)\n  * [`moon_pa_de403_1950_2198`](#moon_pa_de403_1950_2198)\n  * [`moon_pa_de418_1950_2050`](#moon_pa_de418_1950_2050)\n  * [`moon_pa_de421_1900_2050`](#moon_pa_de421_1900_2050)\n  * [`moon_pa_de440_200625`](#moon_pa_de440_200625)\n  * [`naif0011`](#naif0011)\n  * [`naif0012_tls`](#naif0012_tls)\n  * [`ndosl_140530_v01_bsp`](#ndosl_140530_v01_bsp)\n  * [`ndosl_140530_v01_tf`](#ndosl_140530_v01_tf)\n  * [`ndosl_190716_v01_bsp`](#ndosl_190716_v01_bsp)\n  * [`ndosl_190716_v01_tf`](#ndosl_190716_v01_tf)\n  * [`ndosl_190716_v02_bsp`](#ndosl_190716_v02_bsp)\n  * [`ndosl_190716_v02_tf`](#ndosl_190716_v02_tf)\n  * [`near_a_msi_5_erosshape_v1_0_512q`](#near_a_msi_5_erosshape_v1_0_512q)\n  * [`near_a_msi_5_erosshape_v1_0_64q`](#near_a_msi_5_erosshape_v1_0_64q)\n  * [`nep095`](#nep095)\n  * [`nep095_nameid`](#nep095_nameid)\n  * [`nep097`](#nep097)\n  * [`nep097xl_801`](#nep097xl_801)\n  * [`nep097xl_899`](#nep097xl_899)\n  * [`nep101xl`](#nep101xl)\n  * [`nep101xl_802`](#nep101xl_802)\n  * [`nep104`](#nep104)\n  * [`nep104_nameid`](#nep104_nameid)\n  * [`nep105`](#nep105)\n  * [`pck00010`](#pck00010)\n  * [`pck00011`](#pck00011)\n  * [`pck00011_n0066`](#pck00011_n0066)\n  * [`phobos512`](#phobos512)\n  * [`phobos_2014_09_22`](#phobos_2014_09_22)\n  * [`phobos_3_3`](#phobos_3_3)\n  * [`plu060`](#plu060)\n  * [`sat393_daphnis`](#sat393_daphnis)\n  * [`sat415`](#sat415)\n  * [`sat441`](#sat441)\n  * [`sat441xl_part_1`](#sat441xl_part_1)\n  * [`sat441xl_part_2`](#sat441xl_part_2)\n  * [`sat454`](#sat454)\n  * [`sat454_nameid`](#sat454_nameid)\n  * [`siding_spring_8_19_14`](#siding_spring_8_19_14)\n  * [`siding_spring_s46`](#siding_spring_s46)\n  * [`tnosat_v001_20000617_jpl082_20230601`](#tnosat_v001_20000617_jpl082_20230601)\n  * [`tnosat_v001_20050000_jpl043_20220908`](#tnosat_v001_20050000_jpl043_20220908)\n  * [`tnosat_v001_20090482_jpl043_20220908`](#tnosat_v001_20090482_jpl043_20220908)\n  * [`tnosat_v001_20120347_jpl025_20220908`](#tnosat_v001_20120347_jpl025_20220908)\n  * [`tnosat_v001_20136199_jpl080_20220908`](#tnosat_v001_20136199_jpl080_20220908)\n  * [`tnosat_v001_20469705_jpl009_20220908`](#tnosat_v001_20469705_jpl009_20220908)\n  * [`tnosat_v001_20612095_jpl006_20220908`](#tnosat_v001_20612095_jpl006_20220908)\n  * [`tnosat_v001_20612687_jpl008_20220908`](#tnosat_v001_20612687_jpl008_20220908)\n  * [`tnosat_v001_53031823_jpl010_20220908`](#tnosat_v001_53031823_jpl010_20220908)\n  * [`tnosat_v001_53092511_jpl005_20220908`](#tnosat_v001_53092511_jpl005_20220908)\n  * [`tnosat_v001b_20136108_jpl110_20221014`](#tnosat_v001b_20136108_jpl110_20221014)\n  * [`ura111`](#ura111)\n  * [`ura111l`](#ura111l)\n  * [`ura111xl_701`](#ura111xl_701)\n  * [`ura111xl_702`](#ura111xl_702)\n  * [`ura111xl_703`](#ura111xl_703)\n  * [`ura111xl_704`](#ura111xl_704)\n  * [`ura111xl_705`](#ura111xl_705)\n  * [`ura111xl_799`](#ura111xl_799)\n  * [`ura115`](#ura115)\n  * [`ura116`](#ura116)\n  * [`ura116xl`](#ura116xl)\n  * [`ura117`](#ura117)\n  * [`ura117_nameid`](#ura117_nameid)\n  * [`vesta_gaskell_256`](#vesta_gaskell_256)\n  * [`vesta_thomas_1997`](#vesta_thomas_1997)\n\n:::\n\n{{< pagebreak >}}\n\n## `SPK`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstruct SPK <: SPICEKernels.EphemerisKernel\n```\n\nA planetary & spacecraft ephemeris kernel.\n\n:::\n\n{{< pagebreak >}}\n\n## `apoapsis_radius`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\napoapsis_radius(a, e)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns apoapsis distance, rₐ.\n\n:::\n\n{{< pagebreak >}}\n\n## `argument_of_periapsis`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nargument_of_periapsis(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns the argument of periapsis.\n\n:::\n\n{{< pagebreak >}}\n\n## `c2013a1_s105_merged`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 14.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/comets/c2013a1*s105_merged.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: c2013a1_s105_merged.bsp\n \nBody: SIDING SPRING (1003228)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      3002 B.C. NOV 26 00:00:00.000       2999 OCT 09 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `c3`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nc3(r, v, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns C3 value.\n\n:::\n\n{{< pagebreak >}}\n\n## `cartesian_to_keplerian`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ncartesian_to_keplerian(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns a Keplarian representation of a Cartesian orbital state. Algorithm taught in ENAE601.\n\n:::\n\n{{< pagebreak >}}\n\n## `cartesian_to_perifocal`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ncartesian_to_perifocal(i, Ω, ω, x, y, z, ẋ, ẏ, ż)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns the position and velocity vectors in the Perifocal frame.\n\n:::\n\n{{< pagebreak >}}\n\n## `codes_300ast_20100725_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 59.0 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/asteroids/codes*300ast_20100725.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: codes_300ast_20100725.bsp\n \nBodies: CERES (2000001)*      2000115*              2000366*\n        PALLAS (2000002)*     2000117*              2000369*\n        2000003*              2000120*              2000372*\n        VESTA (2000004)*      2000121*              2000373*\n        2000005*              2000124*              2000375*\n        2000006*              2000127*              2000377*\n        2000007*              2000128*              2000381*\n        2000008*              2000129*              2000385*\n        2000009*              2000130*              2000386*\n        2000010*              2000134*              2000387*\n        2000011*              2000135*              2000388*\n        2000012*              2000137*              2000389*\n        2000013*              2000139*              2000393*\n        2000014*              2000140*              2000404*\n        2000015*              2000141*              2000405*\n        PSYCHE (2000016)*     2000143*              2000407*\n        2000017*              2000144*              2000409*\n        2000018*              2000145*              2000410*\n        2000019*              2000146*              2000412*\n        2000020*              2000147*              2000416*\n        LUTETIA (2000021)*    2000148*              2000419*\n        2000022*              2000150*              2000420*\n        2000023*              2000154*              2000423*\n        2000024*              2000156*              2000424*\n        2000025*              2000159*              2000426*\n        2000026*              2000160*              2000431*\n        2000027*              2000162*              EROS (2000433)*\n        2000028*              2000163*              2000442*\n        2000029*              2000164*              2000444*\n        2000030*              2000165*              2000449*\n        2000031*              2000168*              2000451*\n        2000032*              2000171*              2000454*\n        2000034*              2000173*              2000455*\n        2000035*              2000175*              2000466*\n        2000036*              2000176*              2000469*\n        2000037*              2000181*              2000471*\n        2000038*              2000185*              2000476*\n        2000039*              2000187*              2000481*\n        2000040*              2000191*              2000488*\n        2000041*              2000192*              2000489*\n        2000042*              2000194*              2000490*\n        2000043*              2000195*              2000491*\n        2000044*              2000196*              2000498*\n        2000045*              2000200*              2000505*\n        2000046*              2000201*              2000506*\n        2000047*              2000203*              2000508*\n        2000048*              2000205*              DAVIDA (2000511)*\n        2000049*              2000206*              2000514*\n        2000050*              2000209*              2000521*\n        2000051*              2000210*              2000532*\n        52 EUROPA (2000052)*  2000211*              2000535*\n        2000053*              2000212*              2000536*\n        2000054*              2000213*              2000545*\n        2000056*              KLEOPATRA (2000216)*  2000554*\n        2000057*              2000221*              2000566*\n        2000058*              2000224*              2000568*\n        2000059*              2000225*              2000595*\n        2000062*              2000230*              2000596*\n        2000063*              2000233*              2000602*\n        2000065*              2000236*              2000618*\n        2000068*              2000238*              2000626*\n        2000069*              2000240*              2000635*\n        2000070*              2000241*              2000654*\n        2000071*              2000247*              2000663*\n        2000072*              2000250*              2000674*\n        2000074*              2000259*              2000683*\n        2000075*              2000266*              2000690*\n        2000076*              2000268*              2000691*\n        2000077*              2000275*              2000694*\n        2000078*              2000276*              2000702*\n        2000080*              2000283*              2000704*\n        2000081*              2000287*              2000705*\n        2000083*              2000303*              2000709*\n        2000084*              2000304*              2000712*\n        2000085*              2000308*              2000713*\n        2000086*              2000313*              2000739*\n        2000087*              2000322*              2000740*\n        2000088*              2000324*              2000747*\n        2000089*              2000326*              2000751*\n        2000090*              2000328*              2000762*\n        2000091*              2000329*              2000769*\n        2000092*              2000334*              2000772*\n        2000093*              2000335*              2000773*\n        2000094*              2000336*              2000776*\n        2000095*              2000337*              2000780*\n        2000096*              2000338*              2000788*\n        2000097*              2000344*              2000790*\n        2000098*              2000345*              2000791*\n        2000099*              2000346*              2000804*\n        2000102*              2000347*              2000814*\n        2000103*              2000349*              2000849*\n        2000104*              2000350*              2000895*\n        2000105*              2000354*              2000909*\n        2000106*              2000356*              2000914*\n        2000107*              2000357*              2000980*\n        2000109*              2000358*              2001015*\n        2000110*              2000360*              2001021*\n        2000111*              2000362*              2001036*\n        2000112*              2000363*              2001093*\n        2000114*              2000365*              2001467*\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1799 DEC 30 12:00:00.000            2199 DEC 13 12:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `codes_300ast_20100725_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 25.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/asteroids/codes*300ast_20100725.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `conic`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nconic(e)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns the conic section, as specified by eccentricity `e`.\n\n:::\n\n{{< pagebreak >}}\n\n## `converge`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nconverge(u, stm, Φ; eps)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nPerturb halo orbit conditions onto the orbit's unstable manifold.\n\n:::\n\n{{< pagebreak >}}\n\n## `converge!`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nconverge!(p, u, stm, Φ; eps)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nPerturb halo orbit conditions in-place onto the orbit's stable manifold.\n\n:::\n\n{{< pagebreak >}}\n\n## `convergent_direction`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nconvergent_direction(stm; atol)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nCalculates the eigenvector associated with the stable manifold of a Monodromy matrix.\n\n:::\n\n{{< pagebreak >}}\n\n## `de430`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 114.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/planets/de430.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de430.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1549 DEC 31 00:00:00.000            2650 JAN 25 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de431_part_1`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.3 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/planets/de431*part-1.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de431_part-1.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        13201 B.C. MAY 07 00:00:41.184      1 A.D. JAN 01 00:00:41.184\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de431_part_2`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.7 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/planets/de431*part-2.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de431_part-2.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1 A.D. JAN 01 00:00:41.184          17191 MAR 01 00:01:07.184\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de432s`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 10.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/planets/de432s.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de432s.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1949 DEC 14 00:00:00.000            2050 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de435`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 114.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/planets/de435.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de435.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1549 DEC 31 00:00:00.000            2650 JAN 25 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de438`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 114.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/planets/de438.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de438.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1549 DEC 31 00:00:00.000            2650 JAN 25 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de440`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 114.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/planets/de440.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de440.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1549 DEC 31 00:00:00.000            2650 JAN 25 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de440s`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 31.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/planets/de440s.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de440s.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1849 DEC 26 00:00:00.000            2150 JAN 22 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de441_part_1`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.5 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/planets/de441*part-1.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de441_part-1.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        13201 B.C. MAY 06 00:00:00.000      1969 JUL 30 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de441_part_2`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.5 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/planets/de441*part-2.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: de441_part-2.bsp\n \nBodies: MERCURY BARYCENTER (1)  SATURN BARYCENTER (6)   MERCURY (199)\n        VENUS BARYCENTER (2)    URANUS BARYCENTER (7)   VENUS (299)\n        EARTH BARYCENTER (3)    NEPTUNE BARYCENTER (8)  MOON (301)\n        MARS BARYCENTER (4)     PLUTO BARYCENTER (9)    EARTH (399)\n        JUPITER BARYCENTER (5)  SUN (10)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1969 JUN 28 00:00:00.000            17191 MAR 15 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `de_403_masses`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 1.9 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/pck/de-403-masses.tpc\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.PlanetaryConstantsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `distance_scaling`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ndistance_scaling(a)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nThe length scale factor used to nondimensionalize CR3BP states.\n\n:::\n\n{{< pagebreak >}}\n\n## `distance_to_primary`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ndistance_to_primary(r, μ)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns synodic distance to primary body.\n\n:::\n\n{{< pagebreak >}}\n\n## `distance_to_secondary`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ndistance_to_secondary(r, μ)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns synodic distance to secondary body.\n\n:::\n\n{{< pagebreak >}}\n\n## `diverge`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ndiverge(u, stm, Φ; eps)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nPerturb halo orbit conditions onto the orbit's unstable manifold.\n\n:::\n\n{{< pagebreak >}}\n\n## `diverge!`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ndiverge!(p, u, stm, Φ; eps)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nPerturb halo orbit conditions in-place onto the orbit's unstable manifold.\n\n:::\n\n{{< pagebreak >}}\n\n## `divergent_direction`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ndivergent_direction(stm; atol)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nCalculates the direction associated with the unstable manifold of a Monodromy matrix.\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_17_prelim_itrf93_161110`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 4.6 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/dss*17*prelim*itrf93_161110.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_17_prelim_itrf93_190814_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 7.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/dss*17*prelim*itrf93_190814.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: dss_17_prelim_itrf93_190814.bsp\n \nBody: DSS-17 (399017)*\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1950 JAN 01 00:00:00.000            2050 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_17_prelim_itrf93_190814_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 4.7 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/dss*17*prelim*itrf93_190814.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_23_placeholder_itrf93_201017_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 11.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/dss*23*placeholder*itrf93_201017.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: dss_23_placeholder_itrf93_201017.bsp\n \nBody: DSS-23 (399023)*\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1950 JAN 01 00:00:00.000            2050 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_23_placeholder_itrf93_201017_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 8.5 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/dss*23*placeholder*itrf93_201017.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_30_itrf93_210201_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 9.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/dss*30*itrf93*210201.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: dss_30_itrf93_210201.bsp\n \nBody: 399030*\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1950 JAN 01 00:00:00.000            2050 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_30_itrf93_210201_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 6.7 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/dss*30*itrf93*210201.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_59_prelim_itrf93_220921_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 8.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/dss*59*prelim*itrf93_220921.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: dss_59_prelim_itrf93_220921.bsp\n \nBody: 399059*\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1950 JAN 01 00:00:00.000            2050 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_59_prelim_itrf93_220921_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 4.4 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/dss*59*prelim*itrf93_220921.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_69_prelim_itrf93_201215_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 9.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/dss*69*prelim*itrf93_201215.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: dss_69_prelim_itrf93_201215.bsp\n \nBody: DSS-69 (399069)*\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1950 JAN 01 00:00:00.000            2050 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dss_69_prelim_itrf93_201215_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 11.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/dss*69*prelim*itrf93_201215.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `dynamics`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ndynamics(orbit, args; kwargs...)\n\n```\n\nReturn the underlying dynamics of the system in the form of a `ModelingToolkit.ODEFunction`.\n\n:::\n\n{{< pagebreak >}}\n\n## `earth_1962_240827_2124_combined`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 29.5 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/earth*1962*240827*2124_combined.bpc\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: earth_1962_240827_2124_combined.bpc\n \nFrame: ITRF93 (3000)\n       Start of Interval (ET)              End of Interval (ET)\n       -----------------------------       -----------------------------\n       1962 JAN 20 00:00:41.184            2124 NOV 21 00:01:09.182\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `earth_200101_990827_predict`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 14.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/earth*200101*990827*predict.bpc\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: earth_200101_990827_predict.bpc\n \nFrame: ITRF93 (3000)\n       Start of Interval (ET)              End of Interval (ET)\n       -----------------------------       -----------------------------\n       2020 JAN 01 00:01:09.183            2099 AUG 27 00:01:09.182\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `earth_620120_240827`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 11.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/earth*620120_240827.bpc\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: earth_620120_240827.bpc\n \nFrame: ITRF93 (3000)\n       Start of Interval (ET)              End of Interval (ET)\n       -----------------------------       -----------------------------\n       1962 JAN 20 00:00:41.184            2024 AUG 27 00:01:09.182\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `earth_assoc_itrf93`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 7.3 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/planets/earth*assoc_itrf93.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `earth_fixed`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 1.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/earth*fixed.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `earth_latest_high_prec`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 4.6 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/earth*latest*high*prec.bpc\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: earth_latest_high_prec.bpc\n \nFrame: ITRF93 (3000)\n       Start of Interval (ET)              End of Interval (ET)\n       -----------------------------       -----------------------------\n       2000 JAN 01 00:01:04.183            2025 JAN 22 00:01:09.184\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `earth_topo_201023`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 62.2 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/earth*topo_201023.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `earthstns_fx_201023`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 26.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/earthstns*fx_201023.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: earthstns_fx_201023.bsp\n \nBodies: DSS-13 (399013)*  DSS-26 (399026)*  DSS-45 (399045)*  DSS-63 (399063)*\n        DSS-14 (399014)*  DSS-34 (399034)*  DSS-53 (399053)*  DSS-65 (399065)*\n        DSS-15 (399015)*  DSS-35 (399035)*  DSS-54 (399054)*\n        DSS-24 (399024)*  DSS-36 (399036)*  DSS-55 (399055)*\n        DSS-25 (399025)*  DSS-43 (399043)*  DSS-56 (399056)*\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1950 JAN 01 00:00:00.000            2150 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `earthstns_itrf93_201023`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 25.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/earthstns*itrf93_201023.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: earthstns_itrf93_201023.bsp\n \nBodies: DSS-13 (399013)*  DSS-26 (399026)*  DSS-45 (399045)*  DSS-63 (399063)*\n        DSS-14 (399014)*  DSS-34 (399034)*  DSS-53 (399053)*  DSS-65 (399065)*\n        DSS-15 (399015)*  DSS-35 (399035)*  DSS-54 (399054)*\n        DSS-24 (399024)*  DSS-36 (399036)*  DSS-55 (399055)*\n        DSS-25 (399025)*  DSS-43 (399043)*  DSS-56 (399056)*\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1950 JAN 01 00:00:00.000            2150 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `eccentricity`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\neccentricity(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns orbital eccentricity, e.\n\n:::\n\n{{< pagebreak >}}\n\n## `eccentricity_vector`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\neccentricity_vector(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns orbital eccentricity vector e̅.\n\n:::\n\n{{< pagebreak >}}\n\n## `ephemeris`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nephemeris(\n    body,\n    start,\n    stop,\n    intervol;\n    site,\n    wrt,\n    file,\n    units,\n    frame,\n    header\n)\n\n```\n\nPull ephemeris data for the provided celestial body, or celestial system.\n\n:::\n\n{{< pagebreak >}}\n\n## `fetch_approach`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nfetch_approach(\n    COMMAND;\n    file,\n    CALIM_PL,\n    CALIM_SB,\n    CA_TABLE_TYPE,\n    EMAIL_ADDR,\n    TCA3SG_LIMIT,\n    format\n)\n\n```\n\nFetch planetary ephemeris for the body specified by `COMMAND`, in the `EPHEM_TYPE=\"APPROACH\"` format.\n\n:::\n\n{{< pagebreak >}}\n\n## `fetch_elements`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nfetch_elements(\n    COMMAND;\n    file,\n    A,\n    EC,\n    ECLIP,\n    EMAIL_ADDR,\n    EPOCH,\n    IN,\n    MA,\n    N,\n    OBJECT,\n    OM,\n    QR,\n    TP,\n    W,\n    format\n)\n\n```\n\nFetch planetary ephemeris for the body specified by `COMMAND`, in the `EPHEM_TYPE=\"ELEMENTS\"` format.\n\n:::\n\n{{< pagebreak >}}\n\n## `fetch_observer`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nfetch_observer(\n    COMMAND;\n    file,\n    AIRMASS,\n    ANG_FORMAT,\n    ANG_RATE_CUTOFF,\n    APPARENT,\n    CAL_FORMAT,\n    CAL_TYPE,\n    CENTER,\n    COORD_TYPE,\n    CSV_FORMAT,\n    ELEV_CUT,\n    ELM_LABELS,\n    EMAIL_ADDR,\n    EXTRA_PREC,\n    LHA_CUTOFF,\n    OUT_UNITS,\n    QUANTITIES,\n    RANGE_UNITS,\n    REF_PLANE,\n    REF_SYSTEM,\n    R_T_S_ONLY,\n    SITE_COORD,\n    SKIP_DAYLT,\n    SOLAR_ELONG,\n    START_TIME,\n    STEP_SIZE,\n    STOP_TIME,\n    SUPPRESS_RANGE_RATE,\n    TIME_DIGITS,\n    TIME_ZONE,\n    TLIST,\n    TLIST_TYPE,\n    TP_TYPE,\n    VEC_CORR,\n    VEC_DELTA_T,\n    VEC_LABELS,\n    VEC_TABLE,\n    format\n)\n\n```\n\nFetch planetary ephemeris for the body specified by `COMMAND`, in the `EPHEM_TYPE=\"OBSERVER\"` format.\n\n:::\n\n{{< pagebreak >}}\n\n## `fetch_properties`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nfetch_properties(COMMAND; file, EMAIL_ADDR, format)\n\n```\n\nFetch physical attribute data for the body specified by `COMMAND`.\n\n:::\n\n{{< pagebreak >}}\n\n## `fetch_spk`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nfetch_spk(\n    COMMAND;\n    file,\n    EMAIL_ADDR,\n    START_TIME,\n    STOP_TIME,\n    format\n)\n\n```\n\nFetch planetary ephemeris for the body specified by `COMMAND`, in the `EPHEM_TYPE=\"SPK\"` format.\n\n:::\n\n{{< pagebreak >}}\n\n## `fetch_vectors`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nfetch_vectors(\n    COMMAND;\n    file,\n    AIRMASS,\n    ANG_FORMAT,\n    ANG_RATE_CUTOFF,\n    APPARENT,\n    CAL_FORMAT,\n    CAL_TYPE,\n    CENTER,\n    COORD_TYPE,\n    CSV_FORMAT,\n    ELEV_CUT,\n    ELM_LABELS,\n    EMAIL_ADDR,\n    EXTRA_PREC,\n    LHA_CUTOFF,\n    OUT_UNITS,\n    QUANTITIES,\n    RANGE_UNITS,\n    REF_PLANE,\n    REF_SYSTEM,\n    R_T_S_ONLY,\n    SITE_COORD,\n    SKIP_DAYLT,\n    SOLAR_ELONG,\n    START_TIME,\n    STEP_SIZE,\n    STOP_TIME,\n    SUPPRESS_RANGE_RATE,\n    TIME_DIGITS,\n    TIME_ZONE,\n    TLIST,\n    TLIST_TYPE,\n    TP_TYPE,\n    VEC_CORR,\n    VEC_DELTA_T,\n    VEC_LABELS,\n    VEC_TABLE,\n    format\n)\n\n```\n\nFetch planetary ephemeris for the body specified by `COMMAND`, in the `EPHEM_TYPE=\"VECTORS\"` format.\n\n:::\n\n{{< pagebreak >}}\n\n## `fetchkernel`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nfetchkernel(kernel; directory, ignorecache)\n\n```\n\nGiven the ephemeris file name, download the file to the `SPICEKernels.jl` scratch space,  and return a path to the file location. If a full URL or path is provided, that path will  be used. Otherwise, the `kernel` is assumed to be a SPICE Generic Kernel. \n\n### Extended Help {.unnumbered}\n\nIf `ignorecache` is is enabled, the ephemeris file will be re-downloaded even if it exists already  in the `SPICEKernels.jl` scratch space. If `directory` is set to something other than the  `SPICEKernels.SPICE_KERNEL_DIR` variable, the file is downloaded to the provided directory  instead of the `SPICEKernels.jl` scratch space. \n\n:::\n\n{{< pagebreak >}}\n\n## `furnsh`\n\n:::{.callout appearance=\"minimal\"}\n\n```\nfurnsh(kernels...)\n```\n\nLoad one or more SPICE kernels into a program.\n\n##### Arguments {.unnumbered}\n\n  * `kernels`: Path(s) of SPICE kernels to load\n\n##### References {.unnumbered}\n\n  * [NAIF Documentation](https://naif.jpl.nasa.gov/pub/naif/toolkit_docs/C/cspice/furnsh_c.html)\n\n:::\n\n{{< pagebreak >}}\n\n## `gm`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ngm(body)\n\n```\n\nReturn the mass parameter of the body (KM^3/S^2).\n\n:::\n\n{{< pagebreak >}}\n\n## `gm_de431`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 6.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/gm*de431.tpc\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.PlanetaryConstantsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `gm_de440`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 12.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/gm*de440.tpc\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.PlanetaryConstantsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `halo`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nhalo(x, z, ẏ, μ, T; reltol, abstol, maxiters)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nIterate on an initial guess for halo orbit conditions.\n\n```julia\nhalo(μ, lagrange; amplitude, phase, hemisphere, kwargs...)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nGiven a nondimensional mass parameter `μ`, and orbit characteristics, construct  an initial guess using Richardson's analytical solution, and iterate on that guess using a differential corrector. \n\n:::\n\n{{< pagebreak >}}\n\n## `hay_a_amica_5_itokawashape_v1_0_512q`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 148.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/dsk/asteroids/itokawa/hay*a*amica*5*itokawashape*v1*0*512q.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: hay_a_amica_5_itokawashape_v1_0_512q.bds\n \nBody:                               2025143 (ITOKAWA)\n  Surface:                          2025143 (Name not available)\n  Reference frame:                  IAU_ITOKAWA\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):       -180.000         180.000\n    Min, max latitude   (deg):        -90.0000         90.0000\n    Min, max radius      (km):          8.81181E-02     3.11715E-01\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `hay_a_amica_5_itokawashape_v1_0_64q`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 4.5 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/dsk/asteroids/itokawa/hay*a*amica*5*itokawashape*v1*0*64q.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: hay_a_amica_5_itokawashape_v1_0_64q.bds\n \nBody:                               2025143 (ITOKAWA)\n  Surface:                          2025143 (Name not available)\n  Reference frame:                  IAU_ITOKAWA\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):       -180.000         180.000\n    Min, max latitude   (deg):        -90.0000         90.0000\n    Min, max radius      (km):          8.37709E-02     3.12084E-01\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `hohmann`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nhohmann(r₁, r₂, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nComputes a Hohmann transfer, and returns the departure and  arrival velocity vectors. \n\n:::\n\n{{< pagebreak >}}\n\n## `inclination`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ninclination(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns the orbital inclination.\n\n:::\n\n{{< pagebreak >}}\n\n## `ison`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 123.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/comets/ison.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ison.bsp\n \nBody: 1003203\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      2012 JAN 01 00:00:00.000            2014 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `jacobi_constant`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\njacobi_constant(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns the Jacobi Constant, `C` in the Synodic frame with Normalized units.\n\n:::\n\n{{< pagebreak >}}\n\n## `jup344`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 297.5 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/jup344.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: jup344.bsp\n \nBodies: EARTH BARYCENTER (3)    AITNE (531)             557\n        JUPITER BARYCENTER (5)  EURYDOME (532)          558\n        SUN (10)                EUANTHE (533)           559\n        EARTH (399)             EUPORIE (534)           560\n        HIMALIA (506)           ORTHOSIE (535)          561\n        ELARA (507)             SPONDE (536)            562\n        PASIPHAE (508)          KALE (537)              563\n        SINOPE (509)            PASITHEE (538)          564\n        LYSITHEA (510)          HEGEMONE (539)          565\n        CARME (511)             MNEME (540)             566\n        ANANKE (512)            AOEDE (541)             567\n        LEDA (513)              THELXINOE (542)         568\n        CALLIRRHOE (517)        ARCHE (543)             569\n        THEMISTO (518)          KALLICHORE (544)        570\n        MEGACLITE (519)         HELIKE (545)            571\n        TAYGETE (520)           CARPO (546)             572\n        CHALDENE (521)          EUKELADE (547)          JUPITER (599)\n        HARPALYKE (522)         CYLLENE (548)           55501\n        KALYKE (523)            KORE (549)              55502\n        IOCASTE (524)           HERSE (550)             55503\n        ERINOME (525)           551                     55504\n        ISONOE (526)            552                     55505\n        PRAXIDIKE (527)         DIA (553)               55506\n        AUTONOE (528)           554                     55507\n        THYONE (529)            555\n        HERMIPPE (530)          556\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1799 DEC 27 00:00:00.000            2200 JAN 05 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `jup344_nameid`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 2.3 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/jup344*nameid.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `jup344_s2003_j24`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 51.9 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/satellites/jup344-s2003*j24.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: jup344-s2003_j24.bsp\n \nBodies: EARTH BARYCENTER (3)    SUN (10)                JUPITER (599)\n        JUPITER BARYCENTER (5)  EARTH (399)             55508\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1800 JAN 05 00:00:00.000            2200 DEC 22 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `jup344_s2003_j24_nameid`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 0.3 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/jup344-s2003*j24_nameid.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `jup346`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 96.3 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/jup346.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: jup346.bsp\n \nBodies: EARTH BARYCENTER (3)    55511                   55518\n        JUPITER BARYCENTER (5)  55512                   55519\n        SUN (10)                55513                   55520\n        EARTH (399)             55514                   55521\n        JUPITER (599)           55515                   55522\n        55509                   55516                   55523\n        55510                   55517\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1799 DEC 28 00:00:00.000            2199 DEC 19 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `jup346_nameid`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 1.4 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/jup346*nameid.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `jup365`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.1 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/jup365.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: jup365.bsp\n \nBodies: EARTH BARYCENTER (3)    EUROPA (502)            ADRASTEA (515)\n        JUPITER BARYCENTER (5)  GANYMEDE (503)          METIS (516)\n        SUN (10)                CALLISTO (504)          JUPITER (599)\n        EARTH (399)             AMALTHEA (505)\n        IO (501)                THEBE (514)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1600 JAN 10 00:00:00.000            2200 JAN 10 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `kepler`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nkepler(x, y, z, ẋ, ẏ, ż, μ, Δt; atol, maxiter)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nSolves Kepler's Problem, predicting the orbit's future state geometrically.\n\n:::\n\n{{< pagebreak >}}\n\n## `keplerian_to_cartesian`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nkeplerian_to_cartesian(e, a, i, Ω, ω, ν, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns a Cartesian representation of a Keplerian two-body orbital state in an inertial frame, centered at the center of mass of the central body. Algorithm taught in ENAE601.\n\n:::\n\n{{< pagebreak >}}\n\n## `keplerian_to_perifocal`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nkeplerian_to_perifocal(a, e, ν, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns position and velocity vectors in the Perifocal frame.\n\n:::\n\n{{< pagebreak >}}\n\n## `kernel`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nkernel(path)\n\n```\n\nConstruct a `SPICEKernel` instance, with the type informed by the provided file's extension.\n\n:::\n\n{{< pagebreak >}}\n\n## `lagrange_point`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nlagrange_point(μ, L)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns the lagrange points for a CR3BP system.\n\n**Arguments:** \n\n  * `μ`: Non-dimensional mass parameter for the CR3BP system.\n  * `L`: Langrange points requested, must be in range [1,5]\n\n**Outputs:**\n\n  * Tuple of Lagrange points\n  * Throws `ArgumentError` if L is out of range [1,5]\n\n**References:**\n\n  * [Rund, 2018](https://digitalcommons.calpoly.edu/theses/1853/)\n\n:::\n\n{{< pagebreak >}}\n\n## `lambert`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nlambert(\n    x₁,\n    y₁,\n    z₁,\n    x₂,\n    y₂,\n    z₂,\n    μ,\n    Δt;\n    trajectory,\n    atol,\n    maxiter\n)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nSolves Lambert's problem through the use of univeral variables.\n\n:::\n\n{{< pagebreak >}}\n\n## `latest_leapseconds_tls`\n\n:::{.callout appearance=\"minimal\"}\n\nA LSK kernel of size 5.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/lsk/latest*leapseconds.tls\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.LeapSecondsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `lyapunov`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nlyapunov(x, ẏ, μ, T; reltol, abstol, maxiters)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nIterate on an initial guess for Lyapunov orbit conditions.\n\n:::\n\n{{< pagebreak >}}\n\n## `mar097`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 448.1 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/mar097.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: mar097.bsp\n \nBodies: EARTH BARYCENTER (3)  EARTH (399)           MARS (499)\n        MARS BARYCENTER (4)   PHOBOS (401)\n        SUN (10)              DEIMOS (402)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1900 JAN 04 00:00:41.184            2100 JAN 01 00:01:07.183\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `mars_iau2000_v1`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 12.3 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/mars*iau2000_v1.tpc\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.PlanetaryConstantsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `mean_motion`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmean_motion(a, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns mean motion, n.\n\n:::\n\n{{< pagebreak >}}\n\n## `monodromy`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nmonodromy(orbit, Δt; algorithm, reltol, abstol, kwargs...)\n\n```\n\nCompute the monodromy matrix for any periodic orbit.\n\n```julia\nmonodromy(\n    u,\n    μ,\n    T,\n    f;\n    algorithm,\n    reltol,\n    abstol,\n    save_everystep,\n    kwargs...\n)\n\n```\n\nSolve for the monodromy matrix of the periodic orbit.\n\n:::\n\n{{< pagebreak >}}\n\n## `moon_080317`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 20.9 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/moon*080317.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `moon_assoc_me`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 8.3 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/moon*assoc_me.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `moon_assoc_pa`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 8.3 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/moon*assoc_pa.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `moon_de440_220930`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 19.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/moon*de440_220930.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `moon_pa_de403_1950_2198`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 2.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/moon*pa*de403*1950-2198.bpc\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: moon_pa_de403_1950-2198.bpc\n \nFrame: 31002\n       Start of Interval (ET)              End of Interval (ET)\n       -----------------------------       -----------------------------\n       1949 DEC 14 00:00:00.000            2199 JUN 22 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `moon_pa_de418_1950_2050`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 1.1 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/moon*pa*de418*1950-2050.bpc\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: moon_pa_de418_1950-2050.bpc\n \nFrame: 31004\n       Start of Interval (ET)              End of Interval (ET)\n       -----------------------------       -----------------------------\n       1950 JAN 01 00:00:00.000            2050 DEC 31 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `moon_pa_de421_1900_2050`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 1.7 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/moon*pa*de421*1900-2050.bpc\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: moon_pa_de421_1900-2050.bpc\n \nFrame: 31006\n       Start of Interval (ET)              End of Interval (ET)\n       -----------------------------       -----------------------------\n       1900 JAN 01 00:00:00.000            2051 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `moon_pa_de440_200625`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 12.3 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/moon*pa*de440*200625.bpc\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: moon_pa_de440_200625.bpc\n \nFrame: 31008\n       Start of Interval (ET)              End of Interval (ET)\n       -----------------------------       -----------------------------\n       1549 DEC 31 00:00:00.000            2650 JAN 25 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `naif0011`\n\n:::{.callout appearance=\"minimal\"}\n\nA LSK kernel of size 5.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/lsk/naif0011.tls\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.LeapSecondsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `naif0012_tls`\n\n:::{.callout appearance=\"minimal\"}\n\nA LSK kernel of size 5.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/lsk/naif0012.tls\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.LeapSecondsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ndosl_140530_v01_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 223.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/ndosl*140530_v01.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ndosl_140530_v01.bsp\n \nBodies: 399100201*  399101371*  399101714*  399101901*  399104084*  399104263*\n        399100202*  399101372*  399101715*  399101902*  399104085*  399104280*\n        399100204*  399101373*  399101716*  399101903*  399104086*  399104282*\n        399100205*  399101374*  399101717*  399101904*  399104087*  399104283*\n        399100207*  399101375*  399101718*  399101905*  399104088*  399104284*\n        399100208*  399101376*  399101719*  399101906*  399104089*  399104285*\n        399100209*  399101377*  399101720*  399101907*  399104110*  399104344*\n        399100210*  399101378*  399101721*  399101908*  399104111*  399104345*\n        399100290*  399101401*  399101722*  399101909*  399104115*  399104346*\n        399100291*  399101402*  399101723*  399101915*  399104138*  399104347*\n        399100292*  399101403*  399101724*  399101920*  399104139*  399104441*\n        399100293*  399101404*  399101725*  399101921*  399104143*  399104442*\n        399100294*  399101511*  399101726*  399101922*  399104144*  399104443*\n        399101301*  399101513*  399101727*  399101925*  399104145*  399104444*\n        399101303*  399101514*  399101728*  399101931*  399104146*  399104445*\n        399101306*  399101515*  399101729*  399101940*  399104147*  399104446*\n        399101307*  399101516*  399101730*  399101941*  399104151*  399104722*\n        399101309*  399101517*  399101731*  399101961*  399104155*  399104723*\n        399101311*  399101525*  399101732*  399101962*  399104156*  399104750*\n        399101312*  399101526*  399101733*  399101963*  399104205*  399104751*\n        399101315*  399101534*  399101734*  399101964*  399104206*  399104752*\n        399101316*  399101546*  399101735*  399101965*  399104207*  399104753*\n        399101317*  399101547*  399101736*  399101966*  399104208*  399104760*\n        399101318*  399101548*  399101738*  399101967*  399104209*  399104765*\n        399101319*  399101549*  399101739*  399101968*  399104210*  399104840*\n        399101320*  399101554*  399101740*  399101969*  399104215*  399104841*\n        399101321*  399101555*  399101741*  399101970*  399104216*  399104842*\n        399101324*  399101564*  399101742*  399101971*  399104220*  399104843*\n        399101325*  399101565*  399101743*  399101972*  399104221*  399104845*\n        399101327*  399101566*  399101744*  399101973*  399104223*  399104846*\n        399101328*  399101567*  399101756*  399101974*  399104224*  399104847*\n        399101332*  399101573*  399101770*  399104003*  399104240*  399104848*\n        399101333*  399101574*  399101778*  399104013*  399104241*  399104860*\n        399101334*  399101587*  399101779*  399104018*  399104246*  399104861*\n        399101335*  399101612*  399101796*  399104020*  399104247*  399104862*\n        399101336*  399101662*  399101797*  399104041*  399104248*  399104864*\n        399101337*  399101700*  399101813*  399104045*  399104249*  399104865*\n        399101338*  399101701*  399101814*  399104047*  399104250*  399104866*\n        399101339*  399101702*  399101817*  399104054*  399104251*  399104867*\n        399101340*  399101703*  399101818*  399104060*  399104252*  399104968*\n        399101341*  399101704*  399101835*  399104064*  399104253*  399104969*\n        399101342*  399101705*  399101838*  399104065*  399104254*  399104970*\n        399101360*  399101706*  399101840*  399104067*  399104255*  399104971*\n        399101363*  399101707*  399101841*  399104069*  399104256*  399107225*\n        399101364*  399101708*  399101842*  399104071*  399104257*  399107399*\n        399101365*  399101709*  399101853*  399104072*  399104258*  399108501*\n        399101366*  399101710*  399101854*  399104073*  399104259*  399108566*\n        399101367*  399101711*  399101855*  399104078*  399104260*\n        399101368*  399101712*  399101870*  399104080*  399104261*\n        399101369*  399101713*  399101871*  399104082*  399104262*\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1950 JAN 01 00:00:00.000            2050 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ndosl_140530_v01_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 668.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/ndosl*140530_v01.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ndosl_190716_v01_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 236.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/ndosl*190716_v01.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ndosl_190716_v01.bsp\n \nBodies: 399100201*  399101372*  399101716*  399101855*  399104069*  399104259*\n        399100202*  399101373*  399101717*  399101870*  399104071*  399104260*\n        399100204*  399101374*  399101718*  399101871*  399104072*  399104261*\n        399100205*  399101375*  399101719*  399101901*  399104073*  399104262*\n        399100207*  399101376*  399101720*  399101902*  399104078*  399104263*\n        399100208*  399101377*  399101721*  399101903*  399104080*  399104280*\n        399100209*  399101378*  399101722*  399101904*  399104082*  399104282*\n        399100210*  399101401*  399101723*  399101905*  399104084*  399104283*\n        399100290*  399101402*  399101724*  399101906*  399104085*  399104284*\n        399100291*  399101403*  399101725*  399101907*  399104086*  399104285*\n        399100292*  399101404*  399101726*  399101908*  399104087*  399104344*\n        399100293*  399101511*  399101727*  399101909*  399104088*  399104345*\n        399100294*  399101513*  399101728*  399101915*  399104089*  399104346*\n        399101301*  399101514*  399101729*  399101920*  399104110*  399104347*\n        399101303*  399101515*  399101730*  399101921*  399104111*  399104441*\n        399101306*  399101516*  399101731*  399101922*  399104115*  399104442*\n        399101307*  399101517*  399101732*  399101925*  399104138*  399104443*\n        399101309*  399101525*  399101733*  399101931*  399104139*  399104444*\n        399101311*  399101526*  399101734*  399101932*  399104143*  399104445*\n        399101312*  399101534*  399101735*  399101933*  399104144*  399104446*\n        399101315*  399101535*  399101736*  399101934*  399104145*  399104722*\n        399101316*  399101536*  399101738*  399101935*  399104146*  399104723*\n        399101317*  399101546*  399101739*  399101936*  399104147*  399104750*\n        399101318*  399101547*  399101740*  399101940*  399104151*  399104751*\n        399101319*  399101548*  399101741*  399101941*  399104155*  399104752*\n        399101320*  399101549*  399101742*  399101961*  399104156*  399104753*\n        399101321*  399101554*  399101743*  399101962*  399104205*  399104754*\n        399101322*  399101555*  399101744*  399101963*  399104206*  399104755*\n        399101323*  399101564*  399101745*  399101964*  399104207*  399104760*\n        399101324*  399101565*  399101746*  399101965*  399104208*  399104765*\n        399101325*  399101566*  399101747*  399101966*  399104209*  399104840*\n        399101327*  399101567*  399101748*  399101967*  399104210*  399104841*\n        399101328*  399101573*  399101749*  399101968*  399104215*  399104842*\n        399101332*  399101574*  399101750*  399101969*  399104216*  399104843*\n        399101333*  399101587*  399101756*  399101970*  399104220*  399104845*\n        399101334*  399101612*  399101770*  399101971*  399104221*  399104846*\n        399101335*  399101662*  399101771*  399101972*  399104223*  399104847*\n        399101336*  399101700*  399101778*  399101973*  399104224*  399104848*\n        399101337*  399101701*  399101779*  399101974*  399104240*  399104860*\n        399101338*  399101702*  399101796*  399104003*  399104241*  399104861*\n        399101339*  399101703*  399101797*  399104013*  399104246*  399104862*\n        399101340*  399101704*  399101813*  399104018*  399104247*  399104864*\n        399101341*  399101705*  399101814*  399104020*  399104248*  399104865*\n        399101342*  399101706*  399101817*  399104041*  399104249*  399104866*\n        399101360*  399101707*  399101818*  399104045*  399104250*  399104867*\n        399101363*  399101708*  399101835*  399104047*  399104251*  399104968*\n        399101364*  399101709*  399101838*  399104054*  399104252*  399104969*\n        399101365*  399101710*  399101840*  399104055*  399104253*  399104970*\n        399101366*  399101711*  399101841*  399104056*  399104254*  399104971*\n        399101367*  399101712*  399101844*  399104060*  399104255*  399107225*\n        399101368*  399101713*  399101845*  399104064*  399104256*  399107399*\n        399101369*  399101714*  399101853*  399104065*  399104257*  399108501*\n        399101371*  399101715*  399101854*  399104067*  399104258*  399108566*\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1950 JAN 01 00:00:00.000            2050 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ndosl_190716_v01_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 714.9 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/ndosl*190716_v01.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ndosl_190716_v02_bsp`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 236.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/stations/ndosl*190716_v02.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ndosl_190716_v02.bsp\n \nBodies: 399100201*  399101372*  399101716*  399101855*  399104069*  399104259*\n        399100202*  399101373*  399101717*  399101870*  399104071*  399104260*\n        399100204*  399101374*  399101718*  399101871*  399104072*  399104261*\n        399100205*  399101375*  399101719*  399101901*  399104073*  399104262*\n        399100207*  399101376*  399101720*  399101902*  399104078*  399104263*\n        399100208*  399101377*  399101721*  399101903*  399104080*  399104280*\n        399100209*  399101378*  399101722*  399101904*  399104082*  399104282*\n        399100210*  399101401*  399101723*  399101905*  399104084*  399104283*\n        399100290*  399101402*  399101724*  399101906*  399104085*  399104284*\n        399100291*  399101403*  399101725*  399101907*  399104086*  399104285*\n        399100292*  399101404*  399101726*  399101908*  399104087*  399104344*\n        399100293*  399101511*  399101727*  399101909*  399104088*  399104345*\n        399100294*  399101513*  399101728*  399101915*  399104089*  399104346*\n        399101301*  399101514*  399101729*  399101920*  399104110*  399104347*\n        399101303*  399101515*  399101730*  399101921*  399104111*  399104441*\n        399101306*  399101516*  399101731*  399101922*  399104115*  399104442*\n        399101307*  399101517*  399101732*  399101925*  399104138*  399104443*\n        399101309*  399101525*  399101733*  399101931*  399104139*  399104444*\n        399101311*  399101526*  399101734*  399101932*  399104143*  399104445*\n        399101312*  399101534*  399101735*  399101933*  399104144*  399104446*\n        399101315*  399101535*  399101736*  399101934*  399104145*  399104722*\n        399101316*  399101536*  399101738*  399101935*  399104146*  399104723*\n        399101317*  399101546*  399101739*  399101936*  399104147*  399104750*\n        399101318*  399101547*  399101740*  399101940*  399104151*  399104751*\n        399101319*  399101548*  399101741*  399101941*  399104155*  399104752*\n        399101320*  399101549*  399101742*  399101961*  399104156*  399104753*\n        399101321*  399101554*  399101743*  399101962*  399104205*  399104754*\n        399101322*  399101555*  399101744*  399101963*  399104206*  399104755*\n        399101323*  399101564*  399101745*  399101964*  399104207*  399104760*\n        399101324*  399101565*  399101746*  399101965*  399104208*  399104765*\n        399101325*  399101566*  399101747*  399101966*  399104209*  399104840*\n        399101327*  399101567*  399101748*  399101967*  399104210*  399104841*\n        399101328*  399101573*  399101749*  399101968*  399104215*  399104842*\n        399101332*  399101574*  399101750*  399101969*  399104216*  399104843*\n        399101333*  399101587*  399101756*  399101970*  399104220*  399104845*\n        399101334*  399101612*  399101770*  399101971*  399104221*  399104846*\n        399101335*  399101662*  399101771*  399101972*  399104223*  399104847*\n        399101336*  399101700*  399101778*  399101973*  399104224*  399104848*\n        399101337*  399101701*  399101779*  399101974*  399104240*  399104860*\n        399101338*  399101702*  399101796*  399104003*  399104241*  399104861*\n        399101339*  399101703*  399101797*  399104013*  399104246*  399104862*\n        399101340*  399101704*  399101813*  399104018*  399104247*  399104864*\n        399101341*  399101705*  399101814*  399104020*  399104248*  399104865*\n        399101342*  399101706*  399101817*  399104041*  399104249*  399104866*\n        399101360*  399101707*  399101818*  399104045*  399104250*  399104867*\n        399101363*  399101708*  399101835*  399104047*  399104251*  399104968*\n        399101364*  399101709*  399101838*  399104054*  399104252*  399104969*\n        399101365*  399101710*  399101840*  399104055*  399104253*  399104970*\n        399101366*  399101711*  399101841*  399104056*  399104254*  399104971*\n        399101367*  399101712*  399101844*  399104060*  399104255*  399107225*\n        399101368*  399101713*  399101845*  399104064*  399104256*  399107399*\n        399101369*  399101714*  399101853*  399104065*  399104257*  399108501*\n        399101371*  399101715*  399101854*  399104067*  399104258*  399108566*\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1950 JAN 01 00:00:00.000            2050 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ndosl_190716_v02_tf`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 714.9 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/stations/ndosl*190716_v02.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `near_a_msi_5_erosshape_v1_0_512q`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 106.3 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/dsk/asteroids/eros/near-a-msi-5-erosshape-v1*0_512q.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: near-a-msi-5-erosshape-v1_0_512q.bds\n \nBody:                               2000433 (EROS)\n  Surface:                          2000433 (Name not available)\n  Reference frame name N/A; ID code: 2000433\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):         0.00000    360.000\n    Min, max latitude   (deg):       -90.0000      90.0000\n    Min, max radius      (km):         2.97303     17.6330\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `near_a_msi_5_erosshape_v1_0_64q`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 3.7 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/dsk/asteroids/eros/near-a-msi-5-erosshape-v1*0_64q.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: near-a-msi-5-erosshape-v1_0_64q.bds\n \nBody:                               2000433 (EROS)\n  Surface:                          2000433 (Name not available)\n  Reference frame name N/A; ID code: 2000433\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):         0.00000    360.000\n    Min, max latitude   (deg):       -90.0000      90.0000\n    Min, max radius      (km):         2.66302     17.6292\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep095`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.5 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/nep095.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: nep095.bsp\n \nBodies: EARTH BARYCENTER (3)    NEREID (802)            LARISSA (807)\n        NEPTUNE BARYCENTER (8)  NAIAD (803)             PROTEUS (808)\n        SUN (10)                THALASSA (804)          814\n        EARTH (399)             DESPINA (805)           NEPTUNE (899)\n        TRITON (801)            GALATEA (806)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1900 JAN 01 00:00:41.183            2050 JAN 01 00:01:09.183\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep095_nameid`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 0.3 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/nep095*nameid.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep097`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 100.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/nep097.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: nep097.bsp\n \nBodies: EARTH BARYCENTER (3)    SUN (10)                TRITON (801)\n        NEPTUNE BARYCENTER (8)  EARTH (399)             NEPTUNE (899)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1600 JAN 10 00:00:00.000            2399 DEC 31 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep097xl_801`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 2.0 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/nep097xl-801.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: nep097xl-801.bsp\n \nBody: TRITON (801)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      12001 B.C. JAN 01 00:00:00.000      17000 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep097xl_899`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 353.6 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/nep097xl-899.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: nep097xl-899.bsp\n \nBody: NEPTUNE (899)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      12001 B.C. JAN 01 00:00:00.000      17000 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep101xl`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.5 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/nep101xl.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: nep101xl.bsp\n \nBodies: HALIMEDE (809)   SAO (811)        NESO (813)\n        PSAMATHE (810)   LAOMEDEIA (812)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        13001 B.C. JAN 06 00:00:00.000      17000 JAN 11 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep101xl_802`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 731.5 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/nep101xl-802.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: nep101xl-802.bsp\n \nBody: NEREID (802)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      13001 B.C. JAN 06 00:00:00.000      17000 JAN 11 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep104`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 317.7 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/nep104.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: nep104.bsp\n \nBodies: EARTH BARYCENTER (3)    HALIMEDE (809)          NESO (813)\n        NEPTUNE BARYCENTER (8)  PSAMATHE (810)          NEPTUNE (899)\n        SUN (10)                SAO (811)               85051\n        EARTH (399)             LAOMEDEIA (812)         85052\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1600 JAN 04 00:00:00.000            2399 DEC 25 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep104_nameid`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 0.4 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/nep104*nameid.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nep105`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 200.7 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/nep105.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: nep105.bsp\n \nBodies: EARTH BARYCENTER (3)    SUN (10)                NEREID (802)\n        NEPTUNE BARYCENTER (8)  EARTH (399)             NEPTUNE (899)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1600 JAN 04 00:00:00.000            2400 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `nondimensional`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nnondimensional(x, y, z, ẋ, ẏ, ż, t, a, μ₁, μ₂)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nNormalizes a CR3BP orbit in the rotating reference frame.\n\n:::\n\n{{< pagebreak >}}\n\n## `nondimensional_radii`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nnondimensional_radii(x, y, z, xᵢ)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns the spacecraft's nondimensional position w.r.t. body 1 (or 2).\n\n:::\n\n{{< pagebreak >}}\n\n## `orbital_period`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\norbital_period(a, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns the orbital period.\n\n:::\n\n{{< pagebreak >}}\n\n## `orbital_radius`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\norbital_radius(p, e, ν)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns distance, r.\n\n:::\n\n{{< pagebreak >}}\n\n## `orbital_speed`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\norbital_speed(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns the instantaneous velocity, v, for any orbital representation.\n\n:::\n\n{{< pagebreak >}}\n\n## `parameters`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nparameters(orbit)\n\n```\n\nReturn the parameter vector for an `Orbit`.\n\n:::\n\n{{< pagebreak >}}\n\n## `pck00010`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 123.2 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/pck/pck00010.tpc\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.PlanetaryConstantsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `pck00011`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 128.2 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/pck/pck00011.tpc\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.PlanetaryConstantsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `pck00011_n0066`\n\n:::{.callout appearance=\"minimal\"}\n\nA PCK kernel of size 129.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/pck/pck00011*n0066.tpc\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.PlanetaryConstantsKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `periapsis_radius`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nperiapsis_radius(a, e)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns periapsis distance, rₚ.\n\n:::\n\n{{< pagebreak >}}\n\n## `perifocal_to_cartesian`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nperifocal_to_cartesian(i, Ω, ω, x, y, z, ẋ, ẏ, ż)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns a spatial representation of the provied Perifocal state.\n\n:::\n\n{{< pagebreak >}}\n\n## `perturb`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nperturb(u, stm, direction; eps)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nPerturb a Cartesian state along a halo orbit onto a stable or unstable manifold.\n\n:::\n\n{{< pagebreak >}}\n\n## `perturb!`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nperturb!(p, u, stm, direction; eps)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nPerturb a Cartesian state in-place along a halo orbit onto a stable or unstable manifold.\n\n:::\n\n{{< pagebreak >}}\n\n## `perturbation`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nperturbation(stm, direction; eps)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturn the perturbation in Cartesian state space along a halo orbit onto the provided direction of the provided manifold.\n\n:::\n\n{{< pagebreak >}}\n\n## `phobos512`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 149.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/dsk/satellites/phobos512.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: phobos512.bds\n \nBody:                               401 (PHOBOS)\n  Surface:                          401 (Name not available)\n  Reference frame:                  IAU_PHOBOS\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):       -180.000     180.000\n    Min, max latitude   (deg):        -90.0000     90.0000\n    Min, max radius      (km):          8.04963    13.9409\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `phobos_2014_09_22`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 10.0 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/dsk/satellites/phobos*2014*09*22.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: phobos_2014_09_22.bds\n \nBody:                               401 (PHOBOS)\n  Surface:                          401 (Name not available)\n  Reference frame:                  IAU_PHOBOS\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):         0.00000    360.000\n    Min, max latitude   (deg):       -90.0000      90.0000\n    Min, max radius      (km):         7.84839     13.9231\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `phobos_3_3`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 16.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/dsk/satellites/phobos*3_3.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: phobos_3_3.bds\n \nBody:                               401 (PHOBOS)\n  Surface:                          401 (Name not available)\n  Reference frame:                  IAU_PHOBOS\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):       -180.000     180.000\n    Min, max latitude   (deg):        -90.0000     90.0000\n    Min, max radius      (km):          8.12501    14.0118\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `plu060`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 128.9 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/plu060.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: plu060.bsp\n \nBodies: EARTH BARYCENTER (3)  CHARON (901)          STYX (905)\n        PLUTO BARYCENTER (9)  NIX (902)             PLUTO (999)\n        SUN (10)              HYDRA (903)\n        EARTH (399)           KERBEROS (904)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1800 JAN 02 00:00:00.000            2199 DEC 30 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `potential_energy`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\npotential_energy(x, y, z, μ)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns the potential energy `U` in the Synodic frame with Normalized units.\n\n:::\n\n{{< pagebreak >}}\n\n## `primary_synodic_position`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nprimary_synodic_position(μ)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nPosition of primary body.\n\n:::\n\n{{< pagebreak >}}\n\n## `propagate`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\npropagate(\n    orbit,\n    Δt;\n    stm,\n    algorithm,\n    reltol,\n    abstol,\n    kwargs...\n)\n\n```\n\nNumerically integrate the orbit forward (or backward) in time, and return a new  `AstrodynamicalOrbit` instance with identical parameters to the provided orbit.\n\n:::\n\n{{< pagebreak >}}\n\n## `propagate!`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\npropagate!(\n    orbit,\n    Δt;\n    stm,\n    algorithm,\n    reltol,\n    abstol,\n    kwargs...\n)\n\n```\n\nNumerically integrate the orbit forward (or backward) in time, modifying the  state vector in-place within the `AstrodynamicalOrbit` instance.\n\n:::\n\n{{< pagebreak >}}\n\n## `radii`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nradii(body)\n\n```\n\nReturn the radii vector of the body (KM).\n\n:::\n\n{{< pagebreak >}}\n\n## `redimensioned`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nredimensioned(x, y, z, ẋ, ẏ, ż, t, μ, a, T)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nRedimensionalizes a CR3BP orbit in the rotating reference frame.\n\n:::\n\n{{< pagebreak >}}\n\n## `reduced_mass`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nreduced_mass(μ₁, μ₂)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturn the reduced mass.\n\n:::\n\n{{< pagebreak >}}\n\n## `richardson_halo`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nrichardson_halo(μ, L; Z, hemisphere, ϕ, length)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns an analytical solution for a Halo orbit about `L`.\n\n### Extended Help {.unnumbered}\n\n#### Arguments {.unnumbered}\n\n  * `μ`: Non-dimensional mass parameter for the CR3BP system.\n  * `L`: Lagrange point to orbit (L1 or L2).\n  * `Z`: Desired non-dimensional Z-amplitude for Halo orbit.\n  * `hemisphere`: Specifies northern or southern Halo orbit.\n  * `ϕ`: Desired Halo orbit phase.\n  * `steps`: Number of non-dimensional timepoints in returned state.\n\n#### Outputs {.unnumbered}\n\n  * Near-periodic initial condition `u`\n  * Halo orbit period `T`.\n  * Throws `ArgumentError` if L is not `1` or `2`.\n\n**References:**\n\n  * [Rund, 2018](https://digitalcommons.calpoly.edu/theses/1853/).\n\n:::\n\n{{< pagebreak >}}\n\n## `richardson_ic`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nrichardson_ic(μ, L; Z, hemisphere, ϕ)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns an analytical solution for a Halo orbit about `L`.\n\n### Extended Help {.unnumbered}\n\n#### Arguments {.unnumbered}\n\n  * `μ`: Non-dimensional mass parameter for the CR3BP system.\n  * `L`: Lagrange point to orbit (L1 or L2).\n  * `Z`: Desired non-dimensional Z-amplitude for Halo orbit.\n  * `hemisphere`: Specifies northern or southern Halo orbit.\n  * `ϕ`: Desired Halo orbit phase.\n  * `steps`: Number of non-dimensional timepoints in returned state.\n\n#### Outputs {.unnumbered}\n\n  * Near-periodic initial condition `u`\n  * Halo orbit period `T`.\n  * Throws `ArgumentError` if L is not `1` or `2`.\n\n**References:**\n\n  * [Rund, 2018](https://digitalcommons.calpoly.edu/theses/1853/).\n\n:::\n\n{{< pagebreak >}}\n\n## `right_ascension_ascending_node`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nright_ascension_ascending_node(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns the right ascension of the ascending node.\n\n:::\n\n{{< pagebreak >}}\n\n## `sat393_daphnis`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 9.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/satellites/sat393*daphnis.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: sat393_daphnis.bsp\n \nBody: DAPHNIS (635)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1949 DEC 26 00:00:00.000            2050 JAN 10 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `sat415`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 595.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/sat415.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: sat415.bsp\n \nBodies: EARTH BARYCENTER (3)   EPIMETHEUS (611)       METHONE (632)\n        SATURN BARYCENTER (6)  ATLAS (615)            PALLENE (633)\n        SUN (10)               PROMETHEUS (616)       ANTHE (649)\n        EARTH (399)            PANDORA (617)          AEGAEON (653)\n        JANUS (610)            PAN (618)              SATURN (699)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1949 DEC 26 00:00:00.000            2050 JAN 10 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `sat441`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 630.9 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/sat441.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: sat441.bsp\n \nBodies: EARTH BARYCENTER (3)   DIONE (604)            TELESTO (613)\n        SATURN BARYCENTER (6)  RHEA (605)             CALYPSO (614)\n        SUN (10)               TITAN (606)            METHONE (632)\n        EARTH (399)            HYPERION (607)         POLYDEUCES (634)\n        MIMAS (601)            IAPETUS (608)          SATURN (699)\n        ENCELADUS (602)        PHOEBE (609)\n        TETHYS (603)           HELENE (612)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1749 DEC 30 00:00:00.000            2250 JAN 06 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `sat441xl_part_1`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.9 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/satellites/sat441xl*part-1.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: sat441xl_part-1.bsp\n \nBodies: MIMAS (601)      DIONE (604)      HYPERION (607)   HELENE (612)\n        ENCELADUS (602)  RHEA (605)       IAPETUS (608)    SATURN (699)\n        TETHYS (603)     TITAN (606)      PHOEBE (609)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        502 B.C. NOV 30 00:00:00.000        2014 SEP 28 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `sat441xl_part_2`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.9 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/satellites/sat441xl*part-2.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: sat441xl_part-2.bsp\n \nBodies: MIMAS (601)      DIONE (604)      HYPERION (607)   HELENE (612)\n        ENCELADUS (602)  RHEA (605)       IAPETUS (608)    SATURN (699)\n        TETHYS (603)     TITAN (606)      PHOEBE (609)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        2014 SEP 28 00:00:00.000            4500 JAN 18 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `sat454`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 257.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/sat454.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: sat454.bsp\n \nBodies: EARTH BARYCENTER (3)   SUN (10)               SATURN (699)\n        SATURN BARYCENTER (6)  EARTH (399)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1749 DEC 30 00:00:00.000            2150 JAN 10 00:00:00.000\n \nBodies: YMIR (619)             BEBHIONN (637)         TARQEQ (652)\n        PAALIAQ (620)          BERGELMIR (638)        654\n        TARVOS (621)           BESTLA (639)           655\n        IJIRAQ (622)           FARBAUTI (640)         656\n        SUTTUNGR (623)         FENRIR (641)           657\n        KIVIUQ (624)           FORNJOT (642)          658\n        MUNDILFARI (625)       HATI (643)             659\n        ALBIORIX (626)         HYRROKKIN (644)        660\n        SKATHI (627)           KARI (645)             661\n        ERRIAPUS (628)         LOGE (646)             662\n        SIARNAQ (629)          SKOLL (647)            663\n        THRYMR (630)           SURTUR (648)           664\n        NARVI (631)            JARNSAXA (650)         665\n        AEGIR (636)            GREIP (651)            666\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1749 DEC 30 00:00:00.000            2150 JAN 08 00:00:00.000\n \nBodies: 65067                  65106                  65133\n        65070                  65107                  65134\n        65077                  65108                  65135\n        65079                  65109                  65136\n        65081                  65110                  65137\n        65082                  65111                  65138\n        65084                  65112                  65139\n        65085                  65113                  65140\n        65086                  65114                  65141\n        65087                  65115                  65142\n        65088                  65116                  65143\n        65089                  65117                  65144\n        65090                  65118                  65145\n        65091                  65119                  65146\n        65092                  65120                  65147\n        65093                  65121                  65148\n        65094                  65122                  65149\n        65095                  65123                  65150\n        65096                  65124                  65151\n        65097                  65125                  65152\n        65098                  65126                  65153\n        65100                  65127                  65154\n        65101                  65128                  65155\n        65102                  65129                  65156\n        65103                  65130                  65157\n        65104                  65131\n        65105                  65132\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1750 JAN 01 00:00:00.000            2150 JAN 10 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `sat454_nameid`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 7.1 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/sat454*nameid.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `secondary_synodic_position`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nsecondary_synodic_position(μ)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nPosition of primary body.\n\n:::\n\n{{< pagebreak >}}\n\n## `semi_parameter`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nsemi_parameter(a, e)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns semilatus parameter, p.\n\n:::\n\n{{< pagebreak >}}\n\n## `semimajor_axis`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nsemimajor_axis(r, v, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns semimajor axis parameter, a.\n\n:::\n\n{{< pagebreak >}}\n\n## `siding_spring_8_19_14`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 86.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/comets/siding*spring_8-19-14.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: siding_spring_8-19-14.bsp\n \nBody: SIDING SPRING (1003228)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      2014 AUG 19 00:00:00.000            2014 DEC 30 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `siding_spring_s46`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 37.1 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/comets/siding*spring_s46.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: siding_spring_s46.bsp\n \nBodies: MERCURY BARYCENTER (1)   SUN (10)\n        VENUS BARYCENTER (2)     MERCURY (199)\n        EARTH BARYCENTER (3)     VENUS (299)\n        MARS BARYCENTER (4)      MOON (301)\n        JUPITER BARYCENTER (5)   EARTH (399)\n        SATURN BARYCENTER (6)    PHOBOS (401)\n        URANUS BARYCENTER (7)    DEIMOS (402)\n        NEPTUNE BARYCENTER (8)   MARS (499)\n        PLUTO BARYCENTER (9)     SIDING SPRING (1003228)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        2000 JAN 01 00:00:00.000            2016 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `specific_angular_momentum`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nspecific_angular_momentum(x, y, z, ẋ, ẏ, ż)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns scalar specific angular momentum vector, h.\n\n:::\n\n{{< pagebreak >}}\n\n## `specific_angular_momentum_vector`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nspecific_angular_momentum_vector(x, y, z, ẋ, ẏ, ż)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns specific angular momentum vector, h̅.\n\n:::\n\n{{< pagebreak >}}\n\n## `specific_energy`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nspecific_energy(a, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns specific orbital energy, ϵ.\n\n:::\n\n{{< pagebreak >}}\n\n## `specific_potential_energy`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nspecific_potential_energy(r, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns the specific potential energy: the energy per unit mass. \n\n:::\n\n{{< pagebreak >}}\n\n## `sphere_of_activity`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nsphere_of_activity(a, m, M)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nSphere of activity.\n\n:::\n\n{{< pagebreak >}}\n\n## `sphere_of_influence`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nsphere_of_influence(a, m, M)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nSphere of influence.\n\n:::\n\n{{< pagebreak >}}\n\n## `state`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nstate(orbit)\n\n```\n\nReturn the state vector for an `Orbit`.\n\n:::\n\n{{< pagebreak >}}\n\n## `system`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nsystem(orbit, args; kwargs...)\n\n```\n\nReturn the underlying dynamics of the system in the form of a `ModelingToolkit.ODESystem`.\n\n:::\n\n{{< pagebreak >}}\n\n## `time_scaling`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ntime_scaling(a, μ₁, μ₂)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nThe time scale factor used to nondimensionalize CR3BP states.\n\n:::\n\n{{< pagebreak >}}\n\n## `time_since_periapsis`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ntime_since_periapsis(n, e, E)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns time since periapsis, t.\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_20000617_jpl082_20230601`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 284.7 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*20000617*jpl082_20230601.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_20000617_jpl082_20230601.bsp\n \nBodies: PATROCLUS BARYCENTER (20000617)  PATROCLUS (920000617)\n        MENOETIUS (120000617)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        2000 JAN 01 12:00:00.000            2050 DEC 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_20050000_jpl043_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*20050000*jpl043_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_20050000_jpl043_20220908.bsp\n \nBody: 20050000\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 120050000  920050000\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_20090482_jpl043_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*20090482*jpl043_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_20090482_jpl043_20220908.bsp\n \nBody: 20090482\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 120090482  920090482\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_20120347_jpl025_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*20120347*jpl025_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_20120347_jpl025_20220908.bsp\n \nBody: 20120347\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 120120347  920120347\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_20136199_jpl080_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*20136199*jpl080_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_20136199_jpl080_20220908.bsp\n \nBody: 20136199\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 120136199  920136199\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_20469705_jpl009_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*20469705*jpl009_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_20469705_jpl009_20220908.bsp\n \nBody: 20469705\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 120469705  920469705\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_20612095_jpl006_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*20612095*jpl006_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_20612095_jpl006_20220908.bsp\n \nBody: 20612095\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 120612095  920612095\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_20612687_jpl008_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*20612687*jpl008_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_20612687_jpl008_20220908.bsp\n \nBody: 20612687\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 120612687  920612687\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_53031823_jpl010_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*53031823*jpl010_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_53031823_jpl010_20220908.bsp\n \nBody: 53031823\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 153031823  953031823\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001_53092511_jpl005_20220908`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 167.8 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001*53092511*jpl005_20220908.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001_53092511_jpl005_20220908.bsp\n \nBody: 53092511\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 153092511  953092511\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `tnosat_v001b_20136108_jpl110_20221014`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 251.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/spk/tno/tnosat*v001b*20136108*jpl110_20221014.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: tnosat_v001b_20136108_jpl110_20221014.bsp\n \nBody: 20136108\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      1999 DEC 01 00:00:00.000            2030 FEB 01 00:00:00.000\n \nBodies: 120136108  220136108  920136108\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1999 DEC 31 00:00:00.000            2030 JAN 02 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `true_anomaly`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\ntrue_anomaly(x, y, z, ẋ, ẏ, ż, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns true anomoly, ν.\n\n:::\n\n{{< pagebreak >}}\n\n## `ura111`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 162.1 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura111.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura111.bsp\n \nBodies: EARTH BARYCENTER (3)   ARIEL (701)            MIRANDA (705)\n        URANUS BARYCENTER (7)  UMBRIEL (702)          URANUS (799)\n        SUN (10)               TITANIA (703)\n        EARTH (399)            OBERON (704)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1900 JAN 01 00:00:41.183            2099 DEC 24 00:01:07.183\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura111l`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 220.0 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura111l.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura111l.bsp\n \nBodies: EARTH BARYCENTER (3)   ARIEL (701)            MIRANDA (705)\n        URANUS BARYCENTER (7)  UMBRIEL (702)          URANUS (799)\n        SUN (10)               TITANIA (703)\n        EARTH (399)            OBERON (704)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1600 JAN 10 00:00:00.000            2399 DEC 31 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura111xl_701`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 2.0 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura111xl-701.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura111xl-701.bsp\n \nBody: ARIEL (701)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      12001 B.C. JAN 01 00:00:00.000      17000 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura111xl_702`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 828.3 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura111xl-702.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura111xl-702.bsp\n \nBody: UMBRIEL (702)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      12001 B.C. JAN 01 00:00:00.000      17000 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura111xl_703`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 414.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura111xl-703.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura111xl-703.bsp\n \nBody: TITANIA (703)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      12001 B.C. JAN 01 00:00:00.000      17000 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura111xl_704`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 414.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura111xl-704.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura111xl-704.bsp\n \nBody: OBERON (704)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      12001 B.C. JAN 01 00:00:00.000      17000 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura111xl_705`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 2.0 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura111xl-705.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura111xl-705.bsp\n \nBody: MIRANDA (705)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      12001 B.C. JAN 01 00:00:00.000      17000 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura111xl_799`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1010.1 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura111xl-799.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura111xl-799.bsp\n \nBody: URANUS (799)\n      Start of Interval (ET)              End of Interval (ET)\n      -----------------------------       -----------------------------\n      12001 B.C. JAN 01 00:00:00.000      17000 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura115`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 1.4 GB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura115.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura115.bsp\n \nBodies: EARTH BARYCENTER (3)   BIANCA (708)           BELINDA (714)\n        URANUS BARYCENTER (7)  CRESSIDA (709)         PUCK (715)\n        SUN (10)               DESDEMONA (710)        PERDITA (725)\n        EARTH (399)            JULIET (711)           MAB (726)\n        CORDELIA (706)         PORTIA (712)           CUPID (727)\n        OPHELIA (707)          ROSALIND (713)         URANUS (799)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1980 JAN 01 00:00:00.000            2060 JAN 01 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura116`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 97.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura116.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura116.bsp\n \nBodies: EARTH BARYCENTER (3)   SYCORAX (717)          FRANCISCO (722)\n        URANUS BARYCENTER (7)  PROSPERO (718)         MARGARET (723)\n        SUN (10)               SETEBOS (719)          FERDINAND (724)\n        EARTH (399)            STEPHANO (720)         URANUS (799)\n        CALIBAN (716)          TRINCULO (721)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1599 DEC 14 00:00:00.000            2599 DEC 27 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura116xl`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 659.5 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura116xl.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura116xl.bsp\n \nBodies: CALIBAN (716)    SETEBOS (719)    FRANCISCO (722)\n        SYCORAX (717)    STEPHANO (720)   MARGARET (723)\n        PROSPERO (718)   TRINCULO (721)   FERDINAND (724)\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        13001 B.C. JAN 23 00:00:00.000      16999 DEC 27 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura117`\n\n:::{.callout appearance=\"minimal\"}\n\nA SPK kernel of size 82.2 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic_kernels/spk/satellites/ura117.bsp\n\n#### Description {.unnumbered}\n\n```\n \nBRIEF -- Version 4.1.0, September 17, 2021 -- Toolkit Version N0067\n \n \nSummary for: ura117.bsp\n \nBodies: EARTH BARYCENTER (3)   SYCORAX (717)          FRANCISCO (722)\n        URANUS BARYCENTER (7)  PROSPERO (718)         MARGARET (723)\n        SUN (10)               SETEBOS (719)          FERDINAND (724)\n        EARTH (399)            STEPHANO (720)         URANUS (799)\n        CALIBAN (716)          TRINCULO (721)         75051\n        Start of Interval (ET)              End of Interval (ET)\n        -----------------------------       -----------------------------\n        1600 JAN 04 00:00:00.000            2399 DEC 17 00:00:00.000\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `ura117_nameid`\n\n:::{.callout appearance=\"minimal\"}\n\nA FK kernel of size 0.3 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/fk/satellites/ura117*nameid.tf\n\n#### Description {.unnumbered}\n\n```\nA `SPICEKernels.FramesKernel`. If the kernel type is not binary, open the file for more information!\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `v_infinity`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nv_infinity(r, v, μ)\n\n```\n\n:::{.callout-warning title=\"R2BP Dynamics\"}\n\nThis computation is valid for Restricted Two Body Problem (Keplerian) orbits.\n\n:::\n\nReturns v∞.\n\n:::\n\n{{< pagebreak >}}\n\n## `velocity_scaling`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nvelocity_scaling(a, μ₁, μ₂)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nThe velocity scale factor used to nondimensionalize CR3BP states.\n\n:::\n\n{{< pagebreak >}}\n\n## `vesta_gaskell_256`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 39.4 MB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/dsk/asteroids/vesta/vesta*gaskell_256.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: vesta_gaskell_256.bds\n \nBody:                               2000004 (VESTA)\n  Surface:                          2000004 (Name not available)\n  Reference frame:                  IAU_VESTA\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):       -180.000    180.000\n    Min, max latitude   (deg):        -90.0000    90.0000\n    Min, max radius      (km):        211.678    292.971\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `vesta_thomas_1997`\n\n:::{.callout appearance=\"minimal\"}\n\nA DSK kernel of size 480.0 KB, linked from https://naif.jpl.nasa.gov [1]. Calling this variable like a function will return a path to the file, downloading  to scratchspace if necessary.\n\n### Extended Help {.unnumbered}\n\nThis kernel's link was sourced on 2024-10-27.\n\n#### References {.unnumbered}\n\n[1] https://naif.jpl.nasa.gov/pub/naif/generic*kernels/dsk/asteroids/vesta/vesta*thomas_1997.bds\n\n#### Description {.unnumbered}\n\n```\n \nDSKBRIEF Program; Ver. 3.0.0, 02-NOV-2021; Toolkit Ver. N0067\n \nSummary for: vesta_thomas_1997.bds\n \nBody:                               2000004 (VESTA)\n  Surface:                          2000004 (Name not available)\n  Reference frame name N/A; ID code: 2000004\n  Coordinate system:                Planetocentric Latitudinal\n    Min, max longitude  (deg):          0.00000    360.000\n    Min, max latitude   (deg):        -90.0000      90.0000\n    Min, max radius      (km):        195.364      290.779\n \n\n```\n\n:::\n\n{{< pagebreak >}}\n\n## `zero_velocity_curves`\n\n:::{.callout appearance=\"minimal\"}\n\n```julia\nzero_velocity_curves(r, v, μ; nondimensional_range)\n\n```\n\n:::{.callout-warning title=\"CR3BP Dynamics\"}\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n:::\n\nReturns a `Vector` of `Matrix` values. Each `Matrix` contains a 3-column nondimensional position trajectory in the Synodic frame which represents a Zero Velocity Curve.\n\n:::\n\n{{< pagebreak >}}\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}