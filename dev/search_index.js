var documenterSearchIndex = {"docs":
[{"location":"#GeneralAstrodynamics.jl","page":"Getting Started","title":"GeneralAstrodynamics.jl","text":"","category":"section"},{"location":"","page":"Getting Started","title":"Getting Started","text":"Common astrodynamics calculations in Julia, with units!","category":"page"},{"location":"","page":"Getting Started","title":"Getting Started","text":"note: Note\nThis package is fairly new, and documentation is even newer!  Thanks for your patience as we get these docs up and running. ","category":"page"},{"location":"#Introduction","page":"Getting Started","title":"Introduction","text":"","category":"section"},{"location":"","page":"Getting Started","title":"Getting Started","text":"Welcome! This package contains types, functions, and abstractions for common astrodynamics models, including the Restricted Two-body Problem,  the Circular Restricted Three-body Problem, and the N-body Problem, \nas well as some abstractions for interpolating ephemeris data.  If you're not familiar with those models by name, that's okay. We'll walk through common concepts in astrodynamics in this documentation, alongside GeneralAstrodynamics usage and syntax!","category":"page"},{"location":"","page":"Getting Started","title":"Getting Started","text":"You might imagine we want to describe how a spacecraft moves in space. As with all physical systems, reality is really complicated – we can  make simplifying assumptions to write models, or equations of motion which approximately describe how a spacecraft moves in space.  Some models are better than others in a variety of circumstances. For  example, if your spacecraft is only 200 km above the Earth's surface, then the gravity due to Earth will far outweigh the gravity of any other celestial body in our universe. On the other hand, if you're  around halfway between the Earth and the Moon, then a model which only includes the gravitational affect of one of the two bodies may not be  accurate enough to be useful. ","category":"page"},{"location":"","page":"Getting Started","title":"Getting Started","text":"Several models are provided by  AstrodynamicalModels.jl. Each are incorporated into this package, and an overview of each astrodynamical  model is provided below!","category":"page"},{"location":"#Restricted-Two-body-Problem","page":"Getting Started","title":"Restricted Two-body Problem","text":"","category":"section"},{"location":"","page":"Getting Started","title":"Getting Started","text":"A massless spacecraft orbiting one point mass.","category":"page"},{"location":"","page":"Getting Started","title":"Getting Started","text":"warning: Warning\nTo do!","category":"page"},{"location":"#Circular-Restricted-Three-body-Problem","page":"Getting Started","title":"Circular Restricted Three-body Problem","text":"","category":"section"},{"location":"","page":"Getting Started","title":"Getting Started","text":"A massless spacecraft orbiting two point masses which orbit their common center of mass.","category":"page"},{"location":"","page":"Getting Started","title":"Getting Started","text":"warning: Warning\nTo do!","category":"page"},{"location":"#N-body-Problem","page":"Getting Started","title":"N-body Problem","text":"","category":"section"},{"location":"","page":"Getting Started","title":"Getting Started","text":"A collection of N point masses which are each affected by the gravitational pull of the others.","category":"page"},{"location":"","page":"Getting Started","title":"Getting Started","text":"warning: Warning\nTo do!","category":"page"},{"location":"docstrings/#Docstrings","page":"Docstrings","title":"Docstrings","text":"","category":"section"},{"location":"docstrings/","page":"Docstrings","title":"Docstrings","text":"Documentation for all types, and functions in GeneralAstrodynamics.","category":"page"},{"location":"docstrings/","page":"Docstrings","title":"Docstrings","text":"Modules = [\n    GeneralAstrodynamics, \n    GeneralAstrodynamics.AstrodynamicsCore,\n    GeneralAstrodynamics.Propagators,\n    GeneralAstrodynamics.OrbitPlots,\n    GeneralAstrodynamics.Ephemeris\n]\nOrder   = [:type, :function]","category":"page"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.AbstractConic","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.AbstractConic","text":"Abstract type for all four conic sections.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.AbstractFrame","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.AbstractFrame","text":"Absract type for orbital coordinate frames.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.AbstractOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.AbstractOrbit","text":"Abstract type for all structures which hold both states and systems (aka the whole Orbit!)\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.AbstractState","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.AbstractState","text":"Abstract type for all structures describing orbital states (typically Cartesian or Keplerian).\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.AbstractSystem","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.AbstractSystem","text":"Abstract type for all structures describing orbital systems (R2BP systems, CR3BP systems, NBP systems, etc.)\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.AbstractUnitfulStructure","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.AbstractUnitfulStructure","text":"Abstract type for structures parameterized (in part) by Unitful.Unit types.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial","text":"An inertial frame centered at the CR3BP system barycenter.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CR3BPOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CR3BPOrbit","text":"An alias for CircularRestrictedThreeBodyOrbit.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CR3BPSystem","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CR3BPSystem","text":"an alias for MinimalCircularRestrictedThreeBodySystem.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CartesianOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CartesianOrbit","text":"An alias for RestrictedTwoBodyOrbit instances with CartesianState values.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CartesianOrbit-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CartesianOrbit","text":"Alias for a RestrictedTwoBodyOrbit constructor with CartesianState values.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CartesianOrbit-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CartesianOrbit","text":"Alias for a RestrictedTwoBodyOrbit constructor with CartesianState values.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CartesianOrbit-Tuple{KeplerianOrbit{C, F, LU, TU, K} where {C, F, LU, TU, K<:(KeplerianState{F, LU, TU, AU} where AU)}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CartesianOrbit","text":"Alias for a RestrictedTwoBodyOrbit constructor with CartesianState values.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CartesianState","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CartesianState","text":"Cartesian state which describes a spacecraft or body's position and velocity with respect to something, as described the the frame FR.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Circular","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Circular","text":"Type for orbits in the circular conic section.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CircularRestrictedThreeBodyOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CircularRestrictedThreeBodyOrbit","text":"Contains all relevant state and system information within the CR3BP.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.CircularRestrictedThreeBodySystem","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.CircularRestrictedThreeBodySystem","text":"`mutable struct CircularRestrictedThreeBodySystem{F, LU, TU} <: AbstractSystem{F, LU, TU}`\n\nThis structure represents all required parameters that are used to describe  a Circular Restricted Three-body System: normalized length unit DU,  normalized time unit DT, and a Tuple of two mass parameters, μ.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.ECI","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.ECI","text":"A common reference frame for astrodynamics problems that humans solve!  The Earth-centered Inertial frame.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Elliptical","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Elliptical","text":"Type for orbits in the elliptical conic section.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.HCI","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.HCI","text":"A common reference frame for astrodynamics problems that humans solve!  The Sun-centered (heliocentric) Inertial frame.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Hyperbolic","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Hyperbolic","text":"Type for orbits in the hyperbolic conic section.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Inertial","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Inertial","text":"An inertial coordinate frame, centered at some location (typically the center of a body, or a barycenter).\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.InertialCartesianState","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.InertialCartesianState","text":"An alias for CartesianState instances with Inertial coordinate frames.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Invalid","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Invalid","text":"Type for invalid orbits (orbits with NaN fields)\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.KeplerianOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.KeplerianOrbit","text":"An alias for RestrictedTwoBodyOrbit instances with KeplerianState values.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.KeplerianOrbit-NTuple{8, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.KeplerianOrbit","text":"Alias for a RestrictedTwoBodyOrbit constructor with KeplerianState values.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.KeplerianOrbit-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.KeplerianOrbit","text":"Alias for a RestrictedTwoBodyOrbit constructor with KeplerianState values.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.KeplerianOrbit-Tuple{KeplerianState, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.KeplerianOrbit","text":"Alias for a RestrictedTwoBodyOrbit constructor with KeplerianState values.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.KeplerianState","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.KeplerianState","text":"Struct for storing Keplerian states.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Manifold","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Manifold","text":"A Manifold is a vector of Trajectory instances.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.MinimalCircularRestrictedThreeBodySystem","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.MinimalCircularRestrictedThreeBodySystem","text":"`MinimalCircularRestrictedThreeBodySystem(μ::Real) <: AbstractSystem{F, NormalizedLengthUnit, NormalizedTimeUnit}`\n\nSometimes you want to do CR3BP calculations with only one system parameter, the nondimensional mass parameter μ. That's what this structure is for!\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedCR3BPOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedCR3BPOrbit","text":"An alias for CircularRestrictedThreeBodyOrbit instances with NormalizedCartesianState states.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedCartesianState","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedCartesianState","text":"`const NormalizedCartesianState{F, FR<:CR3BPFrames} = CartesianState{F, NormalizedLengthUnit, NormalizedTimeUnit, FR}`\n\nCR3BP systems often use normalized units for calculations. This NormalizedCartesianState represents a Cartesian  state with no dimensioned units.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedCartesianState-2","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedCartesianState","text":"`NormalizedCartesianState(r, v, t, frame)`\n\nConvenience constructor for a normalized CartesianState.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedCartesianState-Union{Tuple{FR}, Tuple{AbstractVector{var\"#s385\"} where var\"#s385\"<:Real, AbstractVector{var\"#s384\"} where var\"#s384\"<:Real}, Tuple{AbstractVector{var\"#s383\"} where var\"#s383\"<:Real, AbstractVector{var\"#s382\"} where var\"#s382\"<:Real, FR}, Tuple{AbstractVector{var\"#s381\"} where var\"#s381\"<:Real, AbstractVector{var\"#s380\"} where var\"#s380\"<:Real, FR, Real}} where FR<:CR3BPFrames","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedCartesianState","text":"`NormalizedCartesianState(r::AbstractVector{<:Real}, v::AbstractVector{<:Real}, frame::FR = Synodic, epoch::Real = 0) where FR <: CR3BPFrames = CartesianState(r, v, frame, epoch)`\n\nConstructor for a NormalizedCartesianState. No Unitful arguments allowed!\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedLengthUnit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedLengthUnit","text":"A normalized length unit, typically used in normalized CR3B problems.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedSynodicCR3BPOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedSynodicCR3BPOrbit","text":"An alias for CircularRestrictedThreeBodyOrbit instances with NormalizedCartesianState states in the Synodic frame.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedSynodicCartesianSTMState","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedSynodicCartesianSTMState","text":"`const NormalizedSynodicCartesianSTMState{F, FR<:CR3BPFrames} = CartesianState{F, NormalizedLengthUnit, NormalizedTimeUnit, FR}`\n\nCR3BP systems often use normalized units for calculations. This NormalizedCartesianState represents a Cartesian  state with no dimensioned units.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedSynodicSTMCR3BPOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedSynodicSTMCR3BPOrbit","text":"An alias for CircularRestrictedThreeBodyOrbit instances with NormalizedSynodicCartesianSTMState states.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedSynodicSTMCR3BPOrbit-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedSynodicSTMCR3BPOrbit","text":"A constructor for a Normalized Synodic CR3BP orbit with a local linearization.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.NormalizedTimeUnit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.NormalizedTimeUnit","text":"A normalized time unit, typically used in normalized CR3B problems.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Parabolic","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Parabolic","text":"Type for orbits in the parabolic conic section.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Perifocal","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Perifocal","text":"A Perifocal coordinate frame. An Inertial frame which is 2D (orbit falls completely within the XY axis).\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.R2BPOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.R2BPOrbit","text":"An alias for RestrictedTwoBodyOrbit.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.R2BPSystem","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.R2BPSystem","text":"An alias for RestrictedTwoBodySystem.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.RestrictedTwoBodyOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.RestrictedTwoBodyOrbit","text":"A structure which contains all relevant values for Restricted Two-body Problem orbits.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.RestrictedTwoBodySystem","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.RestrictedTwoBodySystem","text":"Type representing large bodies in space. Currently, the following solar system bodies are supported:\n\nSun, Mercury, Venus, Earth, Moon (Luna), Mars, Jupiter,  Saturn, Uranus, Neptune, Pluto.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Synodic","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Synodic","text":"A Synodic coordinate frame. Located at the barycenter of a CR3BP system, and rotates with the two Celestial Bodies.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.SynodicCartesianSTMState","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.SynodicCartesianSTMState","text":"A structure which contains the linearization of CR3BP dynamics at timepoint t.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.SynodicCartesianState","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.SynodicCartesianState","text":"An alias for CartesianState instances with Synodic coordinate frames.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Trajectory","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Trajectory","text":"A Trajectory is just a vector of Orbit instances!\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#Base.convert-Union{Tuple{AU}, Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{Type{KeplerianState{F, LU, TU, AU}}, KeplerianState}} where {F, LU, TU, AU}","page":"Docstrings","title":"Base.convert","text":"Convert between eltype, lengthunit, and timeunit values for KeplerianStates.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.convert-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{Type{CartesianState{F, LU, TU, FR} where FR}, CartesianState{F, LU, TU, FR} where FR}} where {F, LU, TU}","page":"Docstrings","title":"Base.convert","text":"Convert CartesianState values between the same eltype and lengthunit and timeunit types.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.convert-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{Type{CartesianState{F, LU, TU, FR} where FR}, CartesianState}} where {F, LU, TU}","page":"Docstrings","title":"Base.convert","text":"Convert CartesianState values between different eltype and lengthunit and timeunit types.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.convert-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{Type{CircularRestrictedThreeBodyOrbit{F, LU, TU, C, S} where {C<:(Union{CartesianState{F, var\"#s392\", var\"#s391\", var\"#s389\"}, SynodicCartesianSTMState{F, var\"#s392\", var\"#s391\"}} where {var\"#s392\"<:(Unitful.FreeUnits{U, 𝐋, A} where {U, A}), var\"#s391\"<:(Unitful.FreeUnits{U, 𝐓, A} where {U, A}), var\"#s389\"<:CR3BPFrames}), S<:Union{CircularRestrictedThreeBodySystem{F, LU, TU}, MinimalCircularRestrictedThreeBodySystem{F}}}}, CircularRestrictedThreeBodyOrbit}} where {F, LU, TU}","page":"Docstrings","title":"Base.convert","text":"Convert between eltype, lengthunit, and timeunit types for CR3BP AstrodynamicsCore.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.convert-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{Type{CircularRestrictedThreeBodySystem{F, LU, TU}}, CircularRestrictedThreeBodySystem}} where {F, LU, TU}","page":"Docstrings","title":"Base.convert","text":"Convert between eltype, lengthunit, and timeunit types for CR3BP systems.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.convert-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{Type{RestrictedTwoBodySystem{F, LU, TU}}, RestrictedTwoBodySystem}} where {F, LU, TU}","page":"Docstrings","title":"Base.convert","text":"Conversions between RestrictedTwoBodySystem instances.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.eltype-Union{Tuple{AbstractUnitfulStructure{F, LU, TU} where {LU<:(Unitful.FreeUnits{U, 𝐋, A} where {U, A}), TU<:(Unitful.FreeUnits{U, 𝐓, A} where {U, A})}}, Tuple{F}} where F","page":"Docstrings","title":"Base.eltype","text":"Returns the first paremeter (commonly labeled as F) of a AbstractUnitfulStructure.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.isapprox-Tuple{RestrictedTwoBodyOrbit, RestrictedTwoBodyOrbit}","page":"Docstrings","title":"Base.isapprox","text":"Returns true if all elements in each system are within atol of the other.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.isapprox-Tuple{RestrictedTwoBodySystem, RestrictedTwoBodySystem}","page":"Docstrings","title":"Base.isapprox","text":"Returns true if all elements are within atol of the other.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.isequal-Tuple{CircularRestrictedThreeBodySystem, CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"Base.isequal","text":"Returns true if both systems are equal.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.isequal-Tuple{RestrictedTwoBodyOrbit, RestrictedTwoBodyOrbit}","page":"Docstrings","title":"Base.isequal","text":"Returns true if all elements of each system are identically equal.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.isequal-Tuple{RestrictedTwoBodySystem, RestrictedTwoBodySystem}","page":"Docstrings","title":"Base.isequal","text":"Returns true if all elements are identically equal.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Tuple{IO, Array{Vector{var\"#s554\"}, 1} where var\"#s554\"<:(Vector{var\"#s553\"} where var\"#s553\"<:CircularRestrictedThreeBodyOrbit)}","page":"Docstrings","title":"Base.show","text":"Prints a Manifold instance to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Tuple{IO, MIME{Symbol(\"text/plain\")}, Vector{T} where T<:AbstractOrbit}","page":"Docstrings","title":"Base.show","text":"Prints a Trajectory instance to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Tuple{IO, Vector{var\"#s41\"} where var\"#s41\"<:(CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})})}","page":"Docstrings","title":"Base.show","text":"Prints a Trajectory instance to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Tuple{IO, Vector{var\"#s41\"} where var\"#s41\"<:(KeplerianOrbit{C, F, LU, TU, K} where {C, F, LU, TU, K<:(KeplerianState{F, LU, TU, AU} where AU)})}","page":"Docstrings","title":"Base.show","text":"Prints a Trajectory instance to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Tuple{IO, Vector{var\"#s555\"} where var\"#s555\"<:CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"Base.show","text":"Prints a Trajectory instance to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{AU}, Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, KeplerianState{F, LU, TU, AU}}} where {F, LU, TU, AU}","page":"Docstrings","title":"Base.show","text":"Print KeplerianState instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{FR}, Tuple{F}, Tuple{IO, CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, FR}}} where {F, FR}","page":"Docstrings","title":"Base.show","text":"Print NormalizedCartesianState instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{FR}, Tuple{F}, Tuple{IO, MIME{Symbol(\"text/plain\")}, CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, FR}}} where {F, FR}","page":"Docstrings","title":"Base.show","text":"Print NormalizedCartesianState instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{FR}, Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, CartesianState{F, LU, TU, FR}}} where {F, LU, TU, FR}","page":"Docstrings","title":"Base.show","text":"Print a CartesianState to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{FR}, Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, MIME{Symbol(\"text/plain\")}, CartesianState{F, LU, TU, FR}}} where {F, LU, TU, FR}","page":"Docstrings","title":"Base.show","text":"Print a CartesianState to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{F}, Tuple{IO, MIME{Symbol(\"text/plain\")}, MinimalCircularRestrictedThreeBodySystem{F}}} where F","page":"Docstrings","title":"Base.show","text":"Print MinimalCircularRestrictedThreeBodySystem instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{F}, Tuple{IO, MinimalCircularRestrictedThreeBodySystem{F}}} where F","page":"Docstrings","title":"Base.show","text":"Print MinimalCircularRestrictedThreeBodySystem instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, CircularRestrictedThreeBodyOrbit{F, LU, TU, C, S} where {C<:(Union{CartesianState{F, var\"#s392\", var\"#s391\", var\"#s389\"}, SynodicCartesianSTMState{F, var\"#s392\", var\"#s391\"}} where {var\"#s392\"<:(Unitful.FreeUnits{U, 𝐋, A} where {U, A}), var\"#s391\"<:(Unitful.FreeUnits{U, 𝐓, A} where {U, A}), var\"#s389\"<:CR3BPFrames}), S<:Union{CircularRestrictedThreeBodySystem{F, LU, TU}, MinimalCircularRestrictedThreeBodySystem{F}}}}} where {F, LU, TU}","page":"Docstrings","title":"Base.show","text":"Prints a CircularRestrictedThreeBodyOrbit to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, CircularRestrictedThreeBodySystem{F, LU, TU}}} where {F, LU, TU}","page":"Docstrings","title":"Base.show","text":"Print CircularRestrictedThreeBodySystem instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, MIME{Symbol(\"text/plain\")}, CircularRestrictedThreeBodyOrbit{F, LU, TU, C, S} where {C<:(Union{CartesianState{F, var\"#s392\", var\"#s391\", var\"#s389\"}, SynodicCartesianSTMState{F, var\"#s392\", var\"#s391\"}} where {var\"#s392\"<:(Unitful.FreeUnits{U, 𝐋, A} where {U, A}), var\"#s391\"<:(Unitful.FreeUnits{U, 𝐓, A} where {U, A}), var\"#s389\"<:CR3BPFrames}), S<:Union{CircularRestrictedThreeBodySystem{F, LU, TU}, MinimalCircularRestrictedThreeBodySystem{F}}}}} where {F, LU, TU}","page":"Docstrings","title":"Base.show","text":"Prints a CircularRestrictedThreeBodyOrbit to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, MIME{Symbol(\"text/plain\")}, CircularRestrictedThreeBodySystem{F, LU, TU}}} where {F, LU, TU}","page":"Docstrings","title":"Base.show","text":"Print CircularRestrictedThreeBodySystem instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, MIME{Symbol(\"text/plain\")}, SynodicCartesianSTMState{F, LU, TU}}} where {F, LU, TU}","page":"Docstrings","title":"Base.show","text":"Print SynodicCartesianSTMState instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, RestrictedTwoBodySystem{F, LU, TU}}} where {F, LU, TU}","page":"Docstrings","title":"Base.show","text":"Custom display for RestrictedTwoBodySystem instances.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{IO, SynodicCartesianSTMState{F, LU, TU}}} where {F, LU, TU}","page":"Docstrings","title":"Base.show","text":"Print SynodicCartesianSTMState instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Union{Tuple{T}, Tuple{F}, Tuple{C}, Tuple{IO, RestrictedTwoBodyOrbit{C, F, T, TU, T1} where {TU, T1<:R2BPState{F, T, TU}}}} where {C, F, T}","page":"Docstrings","title":"Base.show","text":"Print RestrictedTwoBodyOrbit instances to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.C3-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.C3","text":"Returns C3 value.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.LancasterBlanchard-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.LancasterBlanchard","text":"The following code was converted to Julia, from a GitHub repository that hosts the MATLAB implementation. At the time of writing, the respository has a BSD license. I'm providing the copyright notice here, as instructed by the license text.\n\nCopyright (c) 2018, Rody Oldenhuis\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those\nof the authors and should not be interpreted as representing official policies,\neither expressed or implied, of this project.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Orbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Orbit","text":"RestrictedTwoBodyOrbit instanes are likely the most commonly used feature of this package. To accomadate this, Orbit is an alias for common  RestrictedTwoBodyOrbit constructers.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Orbit-2","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Orbit","text":"RestrictedTwoBodyOrbit instanes are likely the most commonly used feature of this package. To accomadate this, Orbit is an alias for common  RestrictedTwoBodyOrbit constructers.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Orbit-3","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Orbit","text":"RestrictedTwoBodyOrbit instanes are likely the most commonly used feature of this package. To accomadate this, Orbit is an alias for common  RestrictedTwoBodyOrbit constructers.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Orbit-4","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Orbit","text":"RestrictedTwoBodyOrbit instanes are likely the most commonly used feature of this package. To accomadate this, Orbit is an alias for common  RestrictedTwoBodyOrbit constructers.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.Orbit-Tuple{Any, Any, CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.Orbit","text":"A simpler constructor for a Synodic CR3BP state with or  without the local linearization (state transition matrix)  included.\n\nPlease note that this is a convenience constructor for quick calculations. This method is not type stable, since the kwarg include_stm directly affects the output type of the function. This sub-optimal code is great for  quickly constructing an initial state, but this method will be slower  than an explicit CircularRestrictedThreeBodyOrbit constructor.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.RAAN-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.RAAN","text":"Returns Right Ascension of the Ascending Node, Ω.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.RAAN-Tuple{KeplerianOrbit{C, F, LU, TU, K} where {C, F, LU, TU, K<:(KeplerianState{F, LU, TU, AU} where AU)}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.RAAN","text":"Returns Right Ascension of the Ascending Node, Ω.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.RAAN-Tuple{KeplerianState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.RAAN","text":"Returns Unitful Restricted Two-body orbit right ascension of the ascending node (RAAN).\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.SOA-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.SOA","text":"Sphere of activity.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.SOI-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.SOI","text":"Sphere of influence.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.accel!-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.accel!","text":"Returns non-dimensional acceleration for CR3BP state.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.accel-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.accel","text":"Returns non-dimensional acceleration for CR3BP state.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.analyticalhalo-Tuple{Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.analyticalhalo","text":"Returns an analytical solution for a Halo orbit about L.\n\nArguments: \n\nμ: Non-dimensional mass parameter for the CR3BP system.\nAz: Desired non-dimensional Z-amplitude for Halo orbit.\nϕ: Desired Halo orbit phase.\nsteps: Number of non-dimensional timepoints in returned state.\nL: Lagrange point to orbit (L1 or L2).\nhemisphere: Specifies northern or southern Halo orbit.\n\nOutputs:\n\nSynodic position vector r::Array{<:AbstractFloat}\nSynodic velocity vector v::Array{<:Abstractfloat}.\nHalo orbit period Τ.\nThrows ArgumentError if L is not 1 or 2.\n\nReferences:\n\nRund, 2018.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.angularunit-Union{Tuple{KeplerianState{F, LU, TU, AU}}, Tuple{AU}, Tuple{TU}, Tuple{LU}, Tuple{F}} where {F, LU, TU, AU}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.angularunit","text":"Returns the dimmensionless angular unit associated with the Keplerian state.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.apoapsis_radius-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.apoapsis_radius","text":"Returns apoapsis scalar_position, rₐ.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.apoapsis_velocity-Tuple{T} where T<:RestrictedTwoBodyOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.apoapsis_velocity","text":"Returns apoapsis velocity, v_a, for any orbital representation.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.argument_of_periapsis-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.argument_of_periapsis","text":"Returns the Argument of Periapsis, ω.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.argument_of_periapsis-Tuple{KeplerianOrbit{C, F, LU, TU, K} where {C, F, LU, TU, K<:(KeplerianState{F, LU, TU, AU} where AU)}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.argument_of_periapsis","text":"Returns the Argument of Periapsis, ω.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.argument_of_periapsis-Tuple{KeplerianState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.argument_of_periapsis","text":"Returns Unitful Restricted Two-body orbit argument of periapsis.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.body_position-Tuple{CircularRestrictedThreeBodyOrbit, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.body_position","text":"Returns the position of one of the two CR3BP bodies in the state's reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.body_position-Tuple{CircularRestrictedThreeBodySystem, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.body_position","text":"Returns the position of one of the two CR3BP bodies in the normalized Synodic reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.cartesian-NTuple{5, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.cartesian","text":"Returns a Cartesian (inertial) representation of the provied Perifocal state.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.cartesian-NTuple{7, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.cartesian","text":"Returns a Cartesian representation of a Keplerian two-body orbital state in an inertial frame, centered at the center of mass of the central body. Algorithm taught in ENAE601.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.conic-Tuple{T} where T<:Real","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.conic","text":"Returns the conic section, as specified by eccentricity e.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.coordinateframe-Union{Tuple{AbstractState{F, LU, TU, FR}}, Tuple{FR}, Tuple{TU}, Tuple{LU}, Tuple{F}} where {F, LU, TU, FR}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.coordinateframe","text":"Returns the coordinate frame associated with a state.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.distance_to_primary-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.distance_to_primary","text":"Returns synodic distance to primary body.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.distance_to_secondary-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.distance_to_secondary","text":"Returns synodic distance to secondary body.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.eccentric_anomoly-Tuple{T} where T<:RestrictedTwoBodyOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.eccentric_anomoly","text":"Returns eccentric anomoly, E, parabolic anomoly, B, or hyperbolic  anomoly, H. \n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.eccentricity-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.eccentricity","text":"Returns orbital eccentricity, e.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.eccentricity-Tuple{KeplerianState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.eccentricity","text":"Returns Unitful Restricted Two-body orbit eccentricity.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.eccentricity_vector-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.eccentricity_vector","text":"Returns orbital eccentricity vector e̅.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.epoch-Tuple{CartesianState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.epoch","text":"Returns the timepoint associated with a CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.epoch-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.epoch","text":"Returns the epoch associated with the state field.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.epoch-Tuple{KeplerianState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.epoch","text":"Returns the timepoint associated with a KeplerianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.epoch-Tuple{SynodicCartesianSTMState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.epoch","text":"Returns the timepoint associated with a CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.hohmann-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.hohmann","text":"Computes a Hohmann transfer, and returns the departure and  arrival velocity vectors. \n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.inclination-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.inclination","text":"Returns orbital inclination, i.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.inclination-Tuple{KeplerianOrbit{C, F, LU, TU, K} where {C, F, LU, TU, K<:(KeplerianState{F, LU, TU, AU} where AU)}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.inclination","text":"Returns orbital inclination, i.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.inclination-Tuple{KeplerianState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.inclination","text":"Returns Unitful Restricted Two-body orbit inclination.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.inertial","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.inertial","text":"Given the Synodic frame vector, returns the vector in the barycenteric-inertial reference frame.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.inertial-2","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.inertial","text":"If given an inertial CartesianState, no operation needed.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.inertial-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.inertial","text":"Given a CR3BP orbit, returns the orbit in the inertial reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.inertial-Union{Tuple{CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}}, Tuple{F}, Tuple{CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}, Unitful.AbstractQuantity}} where F","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.inertial","text":"Given a SynodicCartesianState, returns the state in the inertial reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.inertial-Union{Tuple{SynodicCartesianSTMState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}}}, Tuple{F}, Tuple{SynodicCartesianSTMState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}}, Unitful.AbstractQuantity}} where F","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.inertial","text":"Given a SynodicCartesianState, returns the state in the inertial reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.jacobi_constant-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.jacobi_constant","text":"Returns the Jacobi Constant, C in the Synodic frame with Normalized units.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.jacobi_constant-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.jacobi_constant","text":"Returns the Jacobi Constant, C in the Synodic frame with Normalized units.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.kepler","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.kepler","text":"Solves Kepler's Problem for orbit and Δtᵢ.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.kepler-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.kepler","text":"Implements Kepler's Prediction Problem for generic r, v.\n\nArguments:\n\nr: Initial spacecraft position. Any abstract vector with length 3 and type <: Unitful.Length\nv: Initial spacecraft velocity. Any abstract vector with length 3 and type <: Unitful.Velocity\nμ: Central body mass parameter. Any abstract vector with length 3 and type <: Unitful.AbstractQuantity with units compatabile with km^3/s^2\nΔtᵢ: Propagation time. Any scalar with type <: Unitful.Time\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.keplerian-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.keplerian","text":"Returns a Keplarian representation of a Cartesian orbital state. Algorithm taught in ENAE601.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.lagrange","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.lagrange","text":"Returns the lagrange points for a CR3BP system.\n\nArguments: \n\nμ: Non-dimensional mass parameter for the CR3BP system.\nL: Langrange points requested, must be in range [1,5]\n\nOutputs:\n\nTuple of Lagrange points\nThrows ArgumentError if L is out of range [1,5]\n\nReferences:\n\nRund, 2018\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.lagrange-2","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.lagrange","text":"Returns the lagrange points for a CR3BP system.\n\nArguments: \n\nsys: Non-dimensional mass parameter for the CR3BP system.\nL: Langrange points requested, must be in range [1,5]\n\nOutputs:\n\nTuple of Lagrange points\nThrows ArgumentError if L is out of range [1,5]\n\nReferences:\n\nRund, 2018\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.lambert-NTuple{5, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.lambert","text":"The following code was converted to Julia, from a GitHub repository that hosts a MATLAB implementation. At the time of writing, this respository has a BSD license. I'm providing the copyright notice here, as instructed by the license text.\n\nCopyright (c) 2018, Rody Oldenhuis\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those\nof the authors and should not be interpreted as representing official policies,\neither expressed or implied, of this project.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.lambert-Tuple{AbstractVector{var\"#s144\"} where var\"#s144\"<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), AbstractVector{var\"#s41\"} where var\"#s41\"<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U}, Integer, Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.lambert","text":"Wrapper for Unitful inputs.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.lambert_lancaster_blanchard-Tuple{AbstractVector{T} where T, AbstractVector{T} where T, Number, Number}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.lambert_lancaster_blanchard","text":"The following code was converted to Julia, from a GitHub repository that hosts a MATLAB implementation. At the time of writing, this respository has a BSD license. I'm providing the copyright notice here, as instructed by the license text.\n\nCopyright (c) 2018, Rody Oldenhuis\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those\nof the authors and should not be interpreted as representing official policies,\neither expressed or implied, of this project.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.lambert_universal-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.lambert_universal","text":"Solves Lambert's problem through the use of univeral variables.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.lengthunit-Union{Tuple{AbstractUnitfulStructure{F, LU, TU}}, Tuple{TU}, Tuple{LU}, Tuple{F}} where {F, LU, TU}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.lengthunit","text":"Returns the Unitful.Length unit associated with a structure.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.mass-Tuple{RestrictedTwoBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.mass","text":"Returns mass m.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.mass_parameter-Tuple{RestrictedTwoBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.mass_parameter","text":"Returns mass parameter μ.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.mass_parameters-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.mass_parameters","text":"Returns the dimensioned (not normalized) mass parameters associated with a CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.mass_parameters-Tuple{CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.mass_parameters","text":"Returns the dimensioned (not normalized) mass parameters for a CR3BP system.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.massparameterunit-Tuple{AbstractUnitfulStructure}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.massparameterunit","text":"Returns the MassParameter unit associated with a structure.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.mean_motion-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.mean_motion","text":"Returns mean motion, n.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.mean_motion_vector-Tuple{T} where T<:RestrictedTwoBodyOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.mean_motion_vector","text":"Returns mean motion vector, n̄.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.minmax_distances-NTuple{10, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.minmax_distances","text":"The following code was converted to Julia, from a GitHub repository that hosts a MATLAB implementation. At the time of writing, this respository has a BSD license. I'm providing the copyright notice here, as instructed by the license text.\n\nCopyright (c) 2018, Rody Oldenhuis\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those\nof the authors and should not be interpreted as representing official policies,\neither expressed or implied, of this project.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensional_radius","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensional_radius","text":"Returns the spacecraft's nondimensional position w.r.t. body 1 (or 2).\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{A}, Tuple{R}, Tuple{R, A}} where {R<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional form of (Unitful) scalar posiion.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{A}, Tuple{R}, Tuple{U}, Tuple{R, A}} where {U<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), R<:AbstractVector{U}, A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional form of (Unitful) position vector.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{A}, Tuple{U2}, Tuple{U1}, Tuple{T}, Tuple{V}, Tuple{VT}, Tuple{R}, Tuple{RT}, Tuple{R, V, T, U1, U2, A}} where {RT<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), R<:AbstractVector{RT}, VT<:(Union{Unitful.Quantity{T, 𝐋 𝐓^-1, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋 𝐓^-1, U}} where {L, S}} where {T, U}), V<:AbstractVector{VT}, T<:(Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U}), U1<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U}), U2<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U}), A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional Circular Restricted Three-body State.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{T2}, Tuple{T1}, Tuple{T1, T2}} where {T1<:(Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U}), T2<:(Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional form of (Unitful) time duration.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{T}, Tuple{A}, Tuple{V}, Tuple{U}, Tuple{V, A, T}} where {U<:(Union{Unitful.Quantity{T, 𝐋 𝐓^-1, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋 𝐓^-1, U}} where {L, S}} where {T, U}), V<:AbstractVector{U}, A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), T<:(Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional form of (Unitful) velocity vector.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{T}, Tuple{A}, Tuple{V}, Tuple{V, A, T}} where {V<:(Union{Unitful.Quantity{T, 𝐋 𝐓^-1, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋 𝐓^-1, U}} where {L, S}} where {T, U}), A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), T<:(Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional form of (Unitful) scalar velocity.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{U2}, Tuple{U1}, Tuple{A}, Tuple{T1}, Tuple{T1, A, U1, U2}} where {T1<:(Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U}), A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), U1<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U}), U2<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional form of (Unitful) time duration.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{U2}, Tuple{U1}, Tuple{A}, Tuple{V}, Tuple{U}, Tuple{V, A, U1, U2}} where {U<:(Union{Unitful.Quantity{T, 𝐋 𝐓^-1, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋 𝐓^-1, U}} where {L, S}} where {T, U}), V<:AbstractVector{U}, A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), U1<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U}), U2<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional form of (Unitful) velocity vector.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize-Union{Tuple{U2}, Tuple{U1}, Tuple{U1, U2}} where {U1<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U}), U2<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize","text":"Returns nondimensional form of (Unitful) graviational parameters.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize_length-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize_length","text":"Returns nondimensional length unit, DU.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize_mass_parameter-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize_mass_parameter","text":"Returns nondimensional mass parameter, μ.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize_time-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize_time","text":"Returns nondimensional time unit, DT.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize_velocity-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.nondimensionalize_velocity","text":"Returns nondimensional velocity unit, DU/DT.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.normalized_length_unit-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.normalized_length_unit","text":"Returns the normalized (nondimensional) length unit associated with a CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.normalized_length_unit-Tuple{CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.normalized_length_unit","text":"Returns the normalized length unit for a CR3BP system.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.normalized_mass_parameter-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.normalized_mass_parameter","text":"Returns the normalized (nondimensional) mass parameter associated with a CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.normalized_mass_parameter-Tuple{CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.normalized_mass_parameter","text":"Returns the normalized (nondimensional) mass parameter for a CR3BP system.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.normalized_mass_parameter-Tuple{MinimalCircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.normalized_mass_parameter","text":"Returns the normalized (nondimensional) mass parameter for the CR3BP system.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.normalized_time_unit-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.normalized_time_unit","text":"Returns the normalized (nondimensional) time unit associated with a CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.normalized_time_unit-Tuple{CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.normalized_time_unit","text":"Returns the normalized time unit for a CR3BP system.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.periapsis_radius-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.periapsis_radius","text":"Returns periapsis scalar_position, rₚ.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.periapsis_velocity-Tuple{T} where T<:RestrictedTwoBodyOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.periapsis_velocity","text":"Returns periapsis velocity, vₚ, for any orbital representation.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.perifocal-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.perifocal","text":"Returns position and velocity vectors in the Perifocal frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.period-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.period","text":"Returns the orbital period.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.period-Tuple{RestrictedTwoBodyOrbit{Hyperbolic, F, LU, TU, T} where {F, LU, TU, T<:R2BPState{F, LU, TU}}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.period","text":"Returns the orbital period.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.period-Tuple{RestrictedTwoBodyOrbit{Invalid, F, LU, TU, T} where {F, LU, TU, T<:R2BPState{F, LU, TU}}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.period","text":"Returns the orbital period.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.period-Tuple{RestrictedTwoBodyOrbit{Parabolic, F, LU, TU, T} where {F, LU, TU, T<:R2BPState{F, LU, TU}}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.period","text":"Returns the orbital period.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.period-Union{Tuple{RestrictedTwoBodyOrbit{C, F, LU, TU, T} where {F, LU, TU, T<:R2BPState{F, LU, TU}}}, Tuple{C}} where C<:Union{Circular, Elliptical}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.period","text":"Returns the orbital period.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.position_vector-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.position_vector","text":"Returns position vector, rᵢ.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.position_vector-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.position_vector","text":"Returns the position vector of the CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.position_vector-Tuple{SynodicCartesianSTMState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.position_vector","text":"Returns the Unitful position vector of the Cartesianstate.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.position_vector-Union{Tuple{CartesianState{F, LU, TU, FR} where FR}, Tuple{TU}, Tuple{LU}, Tuple{F}} where {F, LU, TU}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.position_vector","text":"Returns the Unitful position vector of the Cartesianstate.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.position_wrt_body-Tuple{CircularRestrictedThreeBodyOrbit, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.position_wrt_body","text":"Returns the position of the orbiter with respect to one of the two CR3BP bodies, in the state's reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.potential_energy-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.potential_energy","text":"Returns the potential energy U in the Synodic frame with Normalized units.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.potential_energy-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.potential_energy","text":"Returns the potential energy U in the Synodic frame with Normalized units.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.primary_mass_parameter-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.primary_mass_parameter","text":"Returns the mass parameter of the primary body within a CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.primary_mass_parameter-Tuple{CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.primary_mass_parameter","text":"Returns the primary body's mass parameter within a CR3BP system.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.primary_synodic_position-Tuple{NormalizedSynodicCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}, SR}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.primary_synodic_position","text":"Position of primary body.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize","text":"Un-normalizes (or re-dimensionalizes) a NormalizedCartesianState back into a CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize-Union{Tuple{A}, Tuple{R}, Tuple{R, A}} where {R<:Real, A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize","text":"Returns dimensional form of (Unitful) scalar posiion.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize-Union{Tuple{T2}, Tuple{T1}, Tuple{T1, T2}} where {T1<:Real, T2<:(Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize","text":"Returns dimensional form of (Unitful) time duration.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{CartesianState{F, LU, TU, FR} where FR, CircularRestrictedThreeBodySystem}} where {F, LU, TU}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize","text":"Un-normalizes (or re-dimensionalizes) a NormalizedCartesianState back into a CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize-Union{Tuple{T}, Tuple{A}, Tuple{U}, Tuple{U, A, T}} where {U<:Real, A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), T<:(Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize","text":"Returns dimensional form of (Unitful) velocity vector.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize-Union{Tuple{U2}, Tuple{U1}, Tuple{A}, Tuple{T1}, Tuple{T1, A, U1, U2}} where {T1<:Real, A<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}), U1<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U}), U2<:(Union{Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋^3 𝐓^-2, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize","text":"Returns dimensional form of (Unitful) time duration.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize_length-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize_length","text":"Returns dimensional length units.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize_time-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize_time","text":"Returns dimensional time unit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize_time-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize_time","text":"Returns dimensional time unit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.redimensionalize_velocity-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.redimensionalize_velocity","text":"Returns dimensional velocity units.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.scalar_position-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.scalar_position","text":"Returns scalar_position, r.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.scalar_position-Tuple{SynodicCartesianSTMState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.scalar_position","text":"Returns the Unitful scalar position of the CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.scalar_position-Union{Tuple{CartesianState{F, LU, TU, FR} where FR}, Tuple{TU}, Tuple{LU}, Tuple{F}} where {F, LU, TU}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.scalar_position","text":"Returns the Unitful scalar position of the CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.scalar_velocity-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.scalar_velocity","text":"Returns instantaneous velocity, v, for any orbital representation.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.scalar_velocity-Tuple{SynodicCartesianSTMState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.scalar_velocity","text":"Returns the Unitful scalar velocity of the CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.scalar_velocity-Union{Tuple{CartesianState{F, LU, TU, FR} where FR}, Tuple{TU}, Tuple{LU}, Tuple{F}} where {F, LU, TU}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.scalar_velocity","text":"Returns the Unitful scalar velocity of the CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.secondary_mass_parameter-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.secondary_mass_parameter","text":"Returns the mass parameter of the primary body within a CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.secondary_mass_parameter-Tuple{CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.secondary_mass_parameter","text":"Returns the secondary body's mass parameter within a CR3BP system.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.secondary_synodic_position-Tuple{NormalizedSynodicCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}, SR}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.secondary_synodic_position","text":"Position of secondary body.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.semi_parameter-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.semi_parameter","text":"Returns semilatus parameter, p.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.semimajor_axis-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.semimajor_axis","text":"Returns semimajor axis parameter, a.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.semimajor_axis-Tuple{KeplerianState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.semimajor_axis","text":"Returns Unitful Restricted Two-body orbit semimajor axis.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.specific_angular_momentum-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.specific_angular_momentum","text":"Returns scalar specific angular momentum vector, h.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.specific_angular_momentum_vector-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.specific_angular_momentum_vector","text":"Returns specific angular momentum vector, h̅.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.specific_energy-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.specific_energy","text":"Returns specific orbital energy, ϵ.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.specific_potential_energy-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.specific_potential_energy","text":"Returns potential energy for an orbit about a RestrictedTwoBodySystem.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.synodic","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.synodic","text":"If given a Synodic CartesianState, no operation needed.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.synodic-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.synodic","text":"Given a CR3BP orbit, returns the orbit in the Synodic (rotating) reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.synodic-Union{Tuple{CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Inertial}}, Tuple{F}, Tuple{CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Inertial}, Unitful.AbstractQuantity}} where F","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.synodic","text":"Given an InertialCartesianState, returns the state in the synodic (rotating) reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.synodic-Union{Tuple{SynodicCartesianSTMState{F, LU, TU} where {LU, TU}}, Tuple{F}, Tuple{SynodicCartesianSTMState{F, LU, TU} where {LU, TU}, Unitful.AbstractQuantity}} where F","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.synodic","text":"Given an InertialCartesianState, returns the state in the synodic (rotating) reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.time_scale_factor-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.time_scale_factor","text":"Returns time scale factor, Tₛ.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.time_since_periapsis-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.time_since_periapsis","text":"Returns time since periapsis, t.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.time_since_periapsis-Tuple{T} where T<:RestrictedTwoBodyOrbit","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.time_since_periapsis","text":"Returns time since periapsis, t.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.timeunit-Union{Tuple{AbstractUnitfulStructure{F, LU, TU}}, Tuple{TU}, Tuple{LU}, Tuple{F}} where {F, LU, TU}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.timeunit","text":"Returns the Unitful.Time unit associated with a structure.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.transform","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.transform","text":"Translates the state from one inertial frame to another.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.transform_to_primary-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.transform_to_primary","text":"Translates the state to the primary body center of mass (inertial frame).\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.transform_to_secondary-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.transform_to_secondary","text":"Translates the state to the secondary body center of mass (inertial frame).\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.true_anomoly-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.true_anomoly","text":"Returns true anomoly, ν.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.true_anomoly-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.true_anomoly","text":"Returns true anomoly, ν.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.true_anomoly-Tuple{KeplerianOrbit{C, F, LU, TU, K} where {C, F, LU, TU, K<:(KeplerianState{F, LU, TU, AU} where AU)}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.true_anomoly","text":"Returns true anomoly, ν.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.true_anomoly-Tuple{KeplerianState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.true_anomoly","text":"Returns Unitful Restricted Two-body orbit true anomoly.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.v_infinity-Tuple{Any, Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.v_infinity","text":"Returns v∞.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.velocity_vector-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.velocity_vector","text":"Returns velocity vector, vᵢ.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.velocity_vector-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.velocity_vector","text":"Returns the velocity vector of the CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.velocity_vector-Tuple{SynodicCartesianSTMState}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.velocity_vector","text":"Returns the Unitful velocity vector of the CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.velocity_vector-Union{Tuple{CartesianState{F, LU, TU, FR} where FR}, Tuple{TU}, Tuple{LU}, Tuple{F}} where {F, LU, TU}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.velocity_vector","text":"Returns the Unitful velocity vector of the CartesianState.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.velocityunit-Tuple{AbstractUnitfulStructure}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.velocityunit","text":"Returns the Unitful.Velocity unit associated with a structure.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.zerovelocity_curves-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.zerovelocity_curves","text":"Returns a Vector of Matrix values. Each Matrix contains a 3-column nondimensional position trajectory in the Synodic frame which represents a Zero Velocity Curve.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.AstrodynamicsCore.σmax-Tuple{Any}","page":"Docstrings","title":"GeneralAstrodynamics.AstrodynamicsCore.σmax","text":"The following code was converted to Julia, from a GitHub repository that hosts a MATLAB implementation. At the time of writing, this respository has a BSD license. I'm providing the copyright notice here, as instructed by the license text.\n\nCopyright (c) 2018, Rody Oldenhuis\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those\nof the authors and should not be interpreted as representing official policies,\neither expressed or implied, of this project.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#LinearAlgebra.normalize-NTuple{4, Any}","page":"Docstrings","title":"LinearAlgebra.normalize","text":"Returns the position and velocity vectors in the synodic (rotating) reference frame.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#LinearAlgebra.normalize-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"LinearAlgebra.normalize","text":"Normalize a CartesianState, given a CircularRestrictedThreeBodySystem.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#LinearAlgebra.normalize-Union{Tuple{TU}, Tuple{LU}, Tuple{F}, Tuple{CartesianState{F, LU, TU, FR} where FR, CircularRestrictedThreeBodySystem}} where {F, LU, TU}","page":"Docstrings","title":"LinearAlgebra.normalize","text":"Normalize a CartesianState, given a CircularRestrictedThreeBodySystem.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#SciMLBase.ODEProblem","page":"Docstrings","title":"SciMLBase.ODEProblem","text":"Given a CartesianOrbit, return a DifferentialEquations.ODEProblem instance that describes the Restricted Two-body Problem.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#SciMLBase.ODEProblem-Tuple{CartesianOrbit{C, F, LU, TU, R} where {C, F, LU, TU, R<:(CartesianState{F, LU, TU, var\"#s144\"} where var\"#s144\"<:Union{GeneralAstrodynamics.AstrodynamicsCore.BarycentricInertial, ECI, HCI, Inertial})}, Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U}}","page":"Docstrings","title":"SciMLBase.ODEProblem","text":"Given a CartesianOrbit, return a DifferentialEquations.ODEProblem instance that describes the Restricted Two-body Problem.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#SciMLBase.ODEProblem-Tuple{NormalizedSynodicCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}, SR}, Real}","page":"Docstrings","title":"SciMLBase.ODEProblem","text":"Given a CartesianOrbit, return a DifferentialEquations.ODEProblem instance that describes the Restricted Two-body Problem.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#SciMLBase.ODEProblem-Tuple{NormalizedSynodicCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}, SR}, Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U}}","page":"Docstrings","title":"SciMLBase.ODEProblem","text":"Given a CartesianOrbit, return a DifferentialEquations.ODEProblem instance that describes the Restricted Two-body Problem.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#SciMLBase.ODEProblem-Tuple{NormalizedSynodicSTMCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:SynodicCartesianSTMState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}}, SR}, Real}","page":"Docstrings","title":"SciMLBase.ODEProblem","text":"Given a CartesianOrbit, return a DifferentialEquations.ODEProblem instance that describes the Restricted Two-body Problem.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#SciMLBase.ODEProblem-Tuple{NormalizedSynodicSTMCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:SynodicCartesianSTMState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}}, SR}, Union{Unitful.Quantity{T, 𝐓, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐓, U}} where {L, S}} where {T, U}}","page":"Docstrings","title":"SciMLBase.ODEProblem","text":"Given a CartesianOrbit, return a DifferentialEquations.ODEProblem instance that describes the Restricted Two-body Problem.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.CR3BPSTMTic!-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.CR3BPSTMTic!","text":"Returns dynamics tic for combined Halo iterative solver state vector.\n\nArguments: \n\n∂u: Derivative of state u.\nu: State vector: [x, y, z, ẋ, ẏ, ż, Φ₁, Φ₂, Φ₃, Φ₄, Φ₅, Φ₆].\np: Parameters (contains non-dimensional mass parameter μ, positions x₁, x₂, and configuration).\nt: Time in seconds.\n\nOutputs:\n\nNone (sets derivative ∂u in-place).\n\nReferences:\n\nRund, 2018.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.CR3BPTic!","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.CR3BPTic!","text":"Dynamics for ideal Circular Restricted Three-body numerical integration. Compatable with DifferentialEquations solvers!\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.R2BPTic!-NTuple{4, Any}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.R2BPTic!","text":"Dynamics for ideal two-body numerical integration. Compatable with DifferentialEquations solvers!\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.halo-Tuple{Any}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.halo","text":"Returns a numerical solution for a Halo orbit about L.\n\nArguments: \n\nμ: Non-dimensional mass parameter for the CR3BP system.\nAz: Desired non-dimensional Z-amplitude for Halo orbit.\nϕ: Desired Halo orbit phase.\nL: Lagrange point to orbit (L1 or L2).\nhemisphere: Specifies northern or southern Halo orbit.\n\nOutputs:\n\nTuple of initial states: (r, v) where r::Vector{<:AbstractFloat}, v::Vector{<:Abstractfloat}.\nThrows ArgumentError if L is not :L1 or :L2\n\nReferences:\n\nThe iterative scheme was pulled from directly from literature and sample code, including Rund 2018, and Dr. Mireles' lecture notes and EarthSunHaloOrbit_NewtonMewhod.m  file available on their website. Specifically, the half-period iterative scheme (the F matrix in the source code, and corresponding \"next guess\" computation)  was ported directly from Dr. Mireles' public code and notes, which are available online. \n\nDr. Mireles Notes\nDr. Mireles Code\nRund, 2018.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.halo-Tuple{CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.halo","text":"A halo wrapper! Returns a CircularRestrictedThreeBodyOrbit. Returns a tuple: halo_orbit, halo_period.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.isperiodic-Tuple{CircularRestrictedThreeBodyOrbit, Any}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.isperiodic","text":"Returns true if a RestrictedThreeBodySystem is numerically periodic.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.manifold-Tuple{NormalizedSynodicSTMCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:SynodicCartesianSTMState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}}, SR}, AbstractVector{T} where T}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.manifold","text":"Given a periodic CircularRestrictedThreeBodyOrbit, returns a nearby CircularRestrictedThreeBodyOrbit on the  stable manifold of the initial state.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.monodromy-Tuple{CircularRestrictedThreeBodyOrbit, Any}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.monodromy","text":"Returns the Monodromy Matrix for a Halo orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.potential_energy_hessian","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.potential_energy_hessian","text":"Returns the partial derivative matrix of potential U.\n\nArguments:\n\nμ: Non-dimensional mass parameter for the CR3BP system.\nr: Non-dimensional position vector for the spacecraft.\n\nOutputs:\n\nPartial derivative matrix of potential U.\n\nReferences:\n\nRund, 2018\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.propagate","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.propagate","text":"Uses DifferentialEquations solvers to propagate orbit Δt into the future. All keyword arguments are passed directly to DifferentialEquations.solve.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.propagate-Tuple{NormalizedSynodicCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}, SR}, Real}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.propagate","text":"Uses DifferentialEquations solvers to propagate normalized,  Synodic CR3BP states Δt into the future. All keyword arguments are passed  directly to DifferentialEquations solvers.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.propagate-Tuple{NormalizedSynodicSTMCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:SynodicCartesianSTMState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}}, SR}, Real}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.propagate","text":"Uses DifferentialEquations solvers to propagate normalized,  Synodic CR3BP states Δt into the future. All keyword arguments are passed  directly to DifferentialEquations solvers.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.stable_eigenvector-Tuple{AbstractMatrix{T} where T}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.stable_eigenvector","text":"Calculates the eigenvector associated with the stable manifold of a Monodromy matrix.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.stable_manifold-Tuple{NormalizedSynodicCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}, SR}, Real}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.stable_manifold","text":"Given a periodic CircularRestrictedThreeBodyOrbit, returns a collection of Trajectory instances representing the stable manifold near orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.state_transition_dynamics-Tuple{Any, Any}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.state_transition_dynamics","text":"Returns the derivative mapping of CR3BP state transition matrix, F.\n\nArguments:\n\nμ: Non-dimensional mass parameter for the CR3BP system.\nr: Non-dimensional position vector for the spacecraft.\n\nOutputs:\n\nLinear mapping from Φ to Φ̇, F.\n\nReferences:\n\nRund, 2018\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.unstable_eigenvector-Tuple{AbstractMatrix{T} where T}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.unstable_eigenvector","text":"Calculates the eigenvector associated with the unstable manifold of a Monodromy matrix.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Propagators.unstable_manifold-Tuple{NormalizedSynodicCR3BPOrbit{F, LU, TU, ST, SR} where {F, LU, TU, ST<:CartesianState{F, Unitful.FreeUnits{(), 𝐋, nothing}, Unitful.FreeUnits{(), 𝐓, nothing}, Synodic}, SR}, Real}","page":"Docstrings","title":"GeneralAstrodynamics.Propagators.unstable_manifold","text":"Given a periodic CircularRestrictedThreeBodyOrbit, returns a collection of Trajectory instances representing the unstable manifold near orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.lagrangeplot","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.lagrangeplot","text":"Plot specified lagrange points in the rotating reference frame of CR3BP system μ.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.lagrangeplot-2","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.lagrangeplot","text":"Plot specified lagrange points in the rotating reference frame of CR3BP system μ.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.lagrangeplot!","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.lagrangeplot!","text":"Plot specified lagrange points in the rotating reference frame of CR3BP system μ to the last figure.\n\n\n\n\n\n","category":"function"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotbodies!-Tuple{Any, CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotbodies!","text":"Plot the nondimensional positions of  CR3BP celestial bodies to the last figure.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotbodies-Tuple{CircularRestrictedThreeBodySystem}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotbodies","text":"Plot the nondimensional positions of  CR3BP celestial bodies.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions!-Tuple{Any, AbstractMatrix{var\"#s552\"} where var\"#s552\"<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions!","text":"Plot the positions of an orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions!-Tuple{Any, AbstractMatrix{var\"#s552\"} where var\"#s552\"<:Real}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions!","text":"Plot the positions of an orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions!-Tuple{Any, Vector{var\"#s552\"} where var\"#s552\"<:CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions!","text":"Plot the orbital positions of a CR3BP orbit to the last plot.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions!-Union{Tuple{V}, Tuple{Any, AbstractVector{V}}} where V<:(AbstractVector{var\"#s552\"} where var\"#s552\"<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}))","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions!","text":"Plot the positions of an orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions!-Union{Tuple{V}, Tuple{Any, AbstractVector{V}}} where V<:(AbstractVector{var\"#s552\"} where var\"#s552\"<:Real)","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions!","text":"Plot the positions of an orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions-Tuple{AbstractMatrix{var\"#s552\"} where var\"#s552\"<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U})}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions","text":"Plot the positions of an orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions-Tuple{AbstractMatrix{var\"#s552\"} where var\"#s552\"<:Real}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions","text":"Plot the positions of an orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions-Tuple{Vector{var\"#s552\"} where var\"#s552\"<:CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions","text":"Plot the orbital positions of a CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions-Tuple{Vector{var\"#s552\"} where var\"#s552\"<:RestrictedTwoBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions","text":"Plot the orbital positions of a R2BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions-Union{Tuple{AbstractVector{V}}, Tuple{V}} where V<:(AbstractVector{var\"#s552\"} where var\"#s552\"<:Real)","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions","text":"Plot the positions of an orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotpositions-Union{Tuple{AbstractVector{var\"#s548\"} where var\"#s548\"<:V}, Tuple{V}} where V<:(AbstractVector{var\"#s549\"} where var\"#s549\"<:(Union{Unitful.Quantity{T, 𝐋, U}, Unitful.Level{L, S, Unitful.Quantity{T, 𝐋, U}} where {L, S}} where {T, U}))","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotpositions","text":"Plot the positions of an orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotvelocities!-Tuple{Any, Vector{var\"#s552\"} where var\"#s552\"<:CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotvelocities!","text":"Plot the orbital velocities of a CR3BP orbit to the last plot.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotvelocities-Tuple{Vector{var\"#s552\"} where var\"#s552\"<:CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotvelocities","text":"Plot the orbital velocities of a CR3BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.plotvelocities-Tuple{Vector{var\"#s552\"} where var\"#s552\"<:RestrictedTwoBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.plotvelocities","text":"Plot the orbital velocities of a R2BP orbit.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.zerovelocityplot!-Tuple{Any, CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.zerovelocityplot!","text":"Plot the zero velocity curves for the Synodic, normalized CR3BP system to the last figure.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.OrbitPlots.zerovelocityplot-Tuple{CircularRestrictedThreeBodyOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.OrbitPlots.zerovelocityplot","text":"Plot the zero velocity curves for the Synodic, normalized CR3BP system.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Ephemeris.Interpolator","page":"Docstrings","title":"GeneralAstrodynamics.Ephemeris.Interpolator","text":"A structure for storing a CubicSplineInterpolation for an ephemeris file.\n\n\n\n\n\n","category":"type"},{"location":"docstrings/#Base.show-Tuple{IO, Interpolator}","page":"Docstrings","title":"Base.show","text":"Prints an Interpolator instance to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#Base.show-Tuple{IO, MIME{Symbol(\"text/plain\")}, Interpolator}","page":"Docstrings","title":"Base.show","text":"Prints an Interpolator instance to io.\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Ephemeris.interpolator-Tuple{Any}","page":"Docstrings","title":"GeneralAstrodynamics.Ephemeris.interpolator","text":"Given ephemeris file filename in CSV format (Julian Day, x, y, z, ẋ, ẏ, ż), interpolator returns a tuple: tspan, rv.\n\nArguments:\n\ndata: the comma-delimited ephemeris data (Cartesian state vectors)\ntype: the type to convert each element of the data to\ndateunit: the units of the first column of the ephemeris data\nlengthunit: the units of the 2nd through 4th columns of the ephemeris data\nvelocityunit: the units of the 5th through 7th columns of the ephemeris data\ntimeunit: the desired time units of the input to rv\n\nOutputs:\n\ntspan: a tuple of two Unitful.time quantities, which represent the earliest and  latest possible epochs provided by the ephemeris file\nrv: a function with one argument (t::Unitful.Time) which returns the body's  interpolated Cartesian position and velocity vectors\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Ephemeris.interpolator-Tuple{String}","page":"Docstrings","title":"GeneralAstrodynamics.Ephemeris.interpolator","text":"Wrapper for interpolator(data; kwargs...)\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Ephemeris.interpolator-Tuple{Vector{T} where T<:AbstractOrbit}","page":"Docstrings","title":"GeneralAstrodynamics.Ephemeris.interpolator","text":"Create an interpolator using Trajectory data!\n\n\n\n\n\n","category":"method"},{"location":"docstrings/#GeneralAstrodynamics.Ephemeris.loadascii-Tuple{Any}","page":"Docstrings","title":"GeneralAstrodynamics.Ephemeris.loadascii","text":"Loads a comma-delimited ephemeris file and returns a matrix of all values.\n\n\n\n\n\n","category":"method"}]
}
