[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AstrodynamicalSolvers",
    "section": "",
    "text": "AstrodynamicalSolvers.jl\nCommon solvers relating to orbital mechanics and astrodynamics.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Overview</span>"
    ]
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "AstrodynamicalSolvers",
    "section": "Installation",
    "text": "Installation\npkg&gt; add AstrodynamicalSolvers",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Overview</span>"
    ]
  },
  {
    "objectID": "index.html#overview",
    "href": "index.html#overview",
    "title": "AstrodynamicalSolvers",
    "section": "Overview",
    "text": "Overview\nThis package contains most of the solvers you (I) encountered in your (my) first year of graduate astrodynamics coursework. Right now, the primary functionality is iterative solvers for periodic orbits within CR3BP dynamics. ## Getting Stated\nPlease refer to the documentation for more detailed instructions, and usage examples.\njulia&gt; μ = 0.012150584395829193\n0.012150584395829193\n\njulia&gt; u, T = halo(μ, 1) # lyapunov (planar) orbit\n\n([0.8567678285004178, 0.0, 0.0, 0.0, -0.14693135696819282, 0.0], 2.7536820160579087)\n\njulia&gt; u, T = halo(μ, 2; amplitude=0.005) # halo (non-planar) orbit\n([1.180859455641048, 0.0, -0.006335144846688764, 0.0, -0.15608881601817765, 0.0], 3.415202902714686)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Overview</span>"
    ]
  },
  {
    "objectID": "examples/index.html",
    "href": "examples/index.html",
    "title": "Examples",
    "section": "",
    "text": "Periodic Orbits\nUsage examples.\nThis package contains differential correctors, and helpful wrapper functions, for finding periodic orbits within Circular Restricted Three Body Problem dynamics.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Examples</span>"
    ]
  },
  {
    "objectID": "examples/index.html#periodic-orbits",
    "href": "examples/index.html#periodic-orbits",
    "title": "Examples",
    "section": "",
    "text": "Plots.jl\n\nusing AstrodynamicalSolvers\nusing AstrodynamicalModels\nusing OrdinaryDiffEq\nusing Plots\n\nμ = 0.012150584395829193\n\nplanar = let\n    ic = halo(μ, 1) # lyapunov (planar) orbit\n    u = Vector(CartesianState(ic))\n    problem = ODEProblem(CR3BFunction(), u, (0, ic.Δt), (μ,))\n    solution = solve(problem, Vern9(), reltol=1e-14, abstol=1e-14)\n    Plots.plot(solution, idxs=(:x,:y,:z), title = \"Lyapunov Orbit\", label=:none, size=(1600,900), dpi=400, aspect_ratio=1)\nend\n\nextraplanar = let\n    ic = halo(μ, 2; amplitude=0.01) # halo (non-planar) orbit\n    u = Vector(CartesianState(ic))\n    problem = ODEProblem(CR3BFunction(), u, (0, ic.Δt), (μ,))\n    solution = solve(problem, Vern9(), reltol=1e-14, abstol=1e-14)\n    Plots.plot(solution, idxs=(:x,:y,:z), title = \"Halo Orbit\", label=:none, size=(1600,900), dpi=400, aspect_ratio=1)\nend\n\nPlots.plot(planar, extraplanar, layout=(1,2))\n\n\n\n\n  \n    \n  \n\n\n\n  \n    \n  \n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMakie.jl\n\nusing AstrodynamicalSolvers\nusing AstrodynamicalModels\nusing OrdinaryDiffEq\nusing CairoMakie\n\nμ = 0.012150584395829193\n\nsol_planar = let\n    ic = halo(μ, 1) # lyapunov (planar) orbit\n    u = Vector(CartesianState(ic))\n    problem = ODEProblem(CR3BFunction(), u, (0, ic.Δt), (μ,))\n    solution = solve(problem, Vern9(), reltol=1e-14, abstol=1e-14)\nend\n\nsol_extraplanar = let\n    ic = halo(μ, 2; amplitude=0.01) # halo (non-planar) orbit\n    u = Vector(CartesianState(ic))\n    problem = ODEProblem(CR3BFunction(), u, (0, ic.Δt), (μ,))\n    solution = solve(problem, Vern9(), reltol=1e-14, abstol=1e-14)\nend\n\nfig = CairoMakie.Figure(size=(800, 400); fontsize=11)\n\nax_kwargs_common = (; aspect=:equal, azimuth=-π/3)\n\nax_left = CairoMakie.Axis3(fig[1, 1];\n    title = \"Lyapunov Orbit\",\n    limits = (0.78, 0.90, -0.09, 0.09, -0.02, 1.04),\n    ax_kwargs_common...,\n)\nax_right = CairoMakie.Axis3(fig[1, 2];\n    title = \"Halo Orbit\",\n    limits = (1.05, 1.26, -0.1, 0.1, -0.02, 0.01),\n    protrusions = (30, 100, 0, 0),\n    ax_kwargs_common...,\n)\n\nCairoMakie.plot!(ax_left, sol_planar; idxs=(:x, :y, :z))\nCairoMakie.plot!(ax_right, sol_extraplanar; idxs=(:x, :y, :z))\n\nfig\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n\n└ @ Makie ~/.julia/packages/Makie/FUAHr/src/scenes.jl:238",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Examples</span>"
    ]
  },
  {
    "objectID": "examples/index.html#manifold-computations",
    "href": "examples/index.html#manifold-computations",
    "title": "Examples",
    "section": "Manifold Computations",
    "text": "Manifold Computations\nManifold computations, provided by AstrodynamicalCalculations.jl, can perturb halo orbits onto their unstable or stable manifolds.\n\nPlots.jl\n\nusing AstrodynamicalSolvers\nusing AstrodynamicalCalculations\nusing AstrodynamicalModels\nusing OrdinaryDiffEq\nusing LinearAlgebra\nusing Plots\n\nμ = 0.012150584395829193\n\nunstable = let\n    ic = halo(μ, 1; amplitude=0.005)\n\n    u = CartesianState(ic)\n    Φ = monodromy(u, μ, ic.Δt, CR3BFunction(stm=true))\n\n    ics = let\n        problem = ODEProblem(CR3BFunction(stm=true), vcat(u, vec(I(6))), (0, ic.Δt), (μ,))\n        solution = solve(problem, Vern9(), reltol=1e-12, abstol=1e-12, saveat=(ic.Δt / 10))\n\n        solution.u\n    end\n\n    perturbations = [\n        diverge(ic[1:6], reshape(ic[7:end], 6, 6), Φ; eps=-1e-7)\n        for ic in ics\n    ]\n\n    problem = EnsembleProblem(\n        ODEProblem(CR3BFunction(), u, (0.0, 2 * ic.Δt), (μ,)),\n        prob_func=(prob, i, repeat) -&gt; remake(prob; u0=perturbations[i]),\n    )\n\n    solution = solve(problem, Vern9(), trajectories=length(perturbations), reltol=1e-14, abstol=1e-14)\nend\n\nstable = let\n    ic = halo(μ, 2; amplitude=0.005)\n\n    u = CartesianState(ic)\n    Φ = monodromy(u, μ, ic.Δt, CR3BFunction(stm=true))\n\n    ics = let\n        problem = ODEProblem(CR3BFunction(stm=true), vcat(u, vec(I(6))), (0, ic.Δt), (μ,))\n        solution = solve(problem, Vern9(), reltol=1e-12, abstol=1e-12, saveat=(ic.Δt / 10))\n\n        solution.u\n    end\n\n    perturbations = [\n        converge(ic[1:6], reshape(ic[7:end], 6, 6), Φ; eps=1e-7)\n        for ic in ics\n    ]\n\n    problem = EnsembleProblem(\n        ODEProblem(CR3BFunction(), u, (0.0, -2.1 * ic.Δt), (μ,)),\n        prob_func=(prob, i, repeat) -&gt; remake(prob; u0=perturbations[i]),\n    )\n\n    solution = solve(problem, Vern9(), trajectories=length(perturbations), reltol=1e-14, abstol=1e-14)\nend\n\nfigure = Plots.plot(;\n    aspect_ratio = 1.0,\n    background = :transparent,\n    grid = true,\n    title = \"Unstable and Stable Invariant Manifolds\",\n)\n\nPlots.plot!(figure, unstable, idxs=(:x, :y), aspect_ratio=1, label=:none, palette=:blues)\nPlots.plot!(figure, stable, idxs=(:x, :y), aspect_ratio=1, label=:none, palette=:blues)\nPlots.scatter!(figure, [1-μ], [0], label=\"Moon\", xlabel=\"X (Earth-Moon Distance)\", ylabel=\"Y (Earth-Moon Distance)\", marker=:x, color=:black, markersize=10,)\n\nfigure # hide",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Examples</span>"
    ]
  },
  {
    "objectID": "examples/index.html#makie.jl-1",
    "href": "examples/index.html#makie.jl-1",
    "title": "Examples",
    "section": "Makie.jl",
    "text": "Makie.jl\n\nusing AstrodynamicalSolvers\nusing AstrodynamicalCalculations\nusing AstrodynamicalModels\nusing OrdinaryDiffEq\nusing LinearAlgebra\nusing CairoMakie\n\nμ = 0.012150584395829193\n\nunstable = let\n    ic = halo(μ, 1; amplitude=0.005)\n\n    u = CartesianState(ic)\n    Φ = monodromy(u, μ, ic.Δt, CR3BFunction(stm=true))\n\n    ics = let\n        problem = ODEProblem(CR3BFunction(stm=true), vcat(u, vec(I(6))), (0, ic.Δt), (μ,))\n        solution = solve(problem, Vern9(), reltol=1e-12, abstol=1e-12, saveat=(ic.Δt / 10))\n\n        solution.u\n    end\n\n    perturbations = [\n        diverge(ic[1:6], reshape(ic[7:end], 6, 6), Φ; eps=-1e-7)\n        for ic in ics\n    ]\n\n    problem = EnsembleProblem(\n        ODEProblem(CR3BFunction(), u, (0.0, 2 * ic.Δt), (μ,)),\n        prob_func=(prob, i, repeat) -&gt; remake(prob; u0=perturbations[i]),\n    )\n\n    solution = solve(problem, Vern9(), trajectories=length(perturbations), reltol=1e-14, abstol=1e-14)\nend\n\nstable = let\n    ic = halo(μ, 2; amplitude=0.005)\n\n    u = CartesianState(ic)\n    Φ = monodromy(u, μ, ic.Δt, CR3BFunction(stm=true))\n\n    ics = let\n        problem = ODEProblem(CR3BFunction(stm=true), vcat(u, vec(I(6))), (0, ic.Δt), (μ,))\n        solution = solve(problem, Vern9(), reltol=1e-12, abstol=1e-12, saveat=(ic.Δt / 10))\n\n        solution.u\n    end\n\n    perturbations = [\n        converge(ic[1:6], reshape(ic[7:end], 6, 6), Φ; eps=1e-7)\n        for ic in ics\n    ]\n\n    problem = EnsembleProblem(\n        ODEProblem(CR3BFunction(), u, (0.0, -2.1 * ic.Δt), (μ,)),\n        prob_func=(prob, i, repeat) -&gt; remake(prob; u0=perturbations[i]),\n    )\n\n    solution = solve(problem, Vern9(), trajectories=length(perturbations), reltol=1e-14, abstol=1e-14)\nend\n\nfig = CairoMakie.Figure(size=(800, 400), fontsize=20)\n\nax = CairoMakie.Axis(fig[1, 1];\n    xreversed = true,\n    xticks = LinearTicks(5),\n    yticks = LinearTicks(5),\n    aspect = DataAspect(),\n    xlabel = \"X (Earth-Moon Distance)\",\n    ylabel = \"Y (Earth-Moon Distance)\",\n    title = \"Unstable and Stable Invariant Manifolds\",\n    titlesize = 24,\n)\n\nidxs = (:x, :y)\n\n# TODO: replace this manual workaround when\n# https://github.com/SciML/SciMLBase.jl/issues/697#issuecomment-2135801331\n# is addressed\nfor (traj, color) in zip(unstable, resample_cmap(:blues, length(unstable)))\n    CairoMakie.plot!(ax, traj; idxs, color)\nend\n\nfor (traj, color) in zip(stable, resample_cmap(:blues, length(stable)))\n    CairoMakie.plot!(ax, traj; idxs, color)\nend\n\nCairoMakie.scatter!(ax, [1-μ], [0]; marker='⨯', color=:black, markersize=50, label=\"Moon\")\n\nfig\n\n\n┌ Warning: Found `resolution` in the theme when creating a `Scene`. The `resolution` keyword for `Scene`s and `Figure`s has been deprecated. Use `Figure(; size = ...` or `Scene(; size = ...)` instead, which better reflects that this is a unitless size and not a pixel resolution. The key could also come from `set_theme!` calls or related theming functions.\n\n└ @ Makie ~/.julia/packages/Makie/FUAHr/src/scenes.jl:238",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Examples</span>"
    ]
  },
  {
    "objectID": "api/index.html",
    "href": "api/index.html",
    "title": "Reference",
    "section": "",
    "text": "AstrodynamicalSolvers\nDocstrings for AstrodynamicalSolvers.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#astrodynamicalsolvers",
    "href": "api/index.html#astrodynamicalsolvers",
    "title": "Reference",
    "section": "",
    "text": "Provides astrodynamical solvers, including Lyapunov and halo orbit correctors.\n\nExtended help\n\nLicense\nMIT License\nCopyright (c) 2023 Joseph D Carpinelli\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nExports\n\nCR3BSolvers\nPropagation\nconvergent_manifold\ndivergent_manifold\nhalo\nlyapunov\nmonodromy\npropagate\npropagate!\n\n\n\nImports\n\nAstrodynamicalSolvers.CR3BSolvers\nAstrodynamicalSolvers.Propagation\nBase\nCore\nDocStringExtensions\nReexport",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#cr3bsolvers",
    "href": "api/index.html#cr3bsolvers",
    "title": "Reference",
    "section": "CR3BSolvers",
    "text": "CR3BSolvers\n\n\n\n\n\n\nSolvers specific to the Circular Restricted Three Body Problem.\n\nExtended Help\n\nExports\n\nhalo\nlyapunov\n\n\n\nImports\n\nAstrodynamicalCalculations\nAstrodynamicalModels\nBase\nCore\nDocStringExtensions\nLinearAlgebra\nModelingToolkit\nOrdinaryDiffEqVerner\nStaticArrays",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#propagation",
    "href": "api/index.html#propagation",
    "title": "Reference",
    "section": "Propagation",
    "text": "Propagation\n\n\n\n\n\n\nWrappers around SciML differential equation solvers for fast and convenient orbit propagation.\n\nExtended Help\n\nExports\n\nconvergent_manifold\ndivergent_manifold\nmonodromy\npropagate\npropagate!\n\n\n\nImports\n\nAstrodynamicalCalculations\nAstrodynamicalModels\nBase\nCore\nDocStringExtensions\nModelingToolkit\nOrdinaryDiffEqVerner\nSciMLBase\nStaticArrays",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#convergent_manifold",
    "href": "api/index.html#convergent_manifold",
    "title": "Reference",
    "section": "convergent_manifold",
    "text": "convergent_manifold\n\n\n\n\n\n\nconvergent_manifold(u, μ, Δt; eps, trajectories, kwargs...)\nReturn a vector of orbits along the manifold which converges to the provided halo orbit.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#divergent_manifold",
    "href": "api/index.html#divergent_manifold",
    "title": "Reference",
    "section": "divergent_manifold",
    "text": "divergent_manifold\n\n\n\n\n\n\ndivergent_manifold(u, μ, Δt; eps, trajectories, kwargs...)\nReturn a vector of orbits along the manifold which diverges from the provided halo orbit.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#halo",
    "href": "api/index.html#halo",
    "title": "Reference",
    "section": "halo",
    "text": "halo\n\n\n\n\n\n\nhalo(x, z, ẏ, μ, T; reltol, abstol, maxiters)\n\n\n\n\n\n\nCR3BP Dynamics\n\n\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n\nIterate on an initial guess for halo orbit conditions.\nhalo(μ, lagrange; amplitude, phase, hemisphere, kwargs...)\n\n\n\n\n\n\nCR3BP Dynamics\n\n\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n\nGiven a nondimensional mass parameter μ, and orbit characteristics, construct an initial guess using Richardson’s analytical solution, and iterate on that guess using a differential corrector.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#lyapunov",
    "href": "api/index.html#lyapunov",
    "title": "Reference",
    "section": "lyapunov",
    "text": "lyapunov\n\n\n\n\n\n\nlyapunov(x, ẏ, μ, T; reltol, abstol, maxiters)\n\n\n\n\n\n\nCR3BP Dynamics\n\n\n\nThis computation is valid for Circular Restricted Three Body Problem dynamics.\n\n\nIterate on an initial guess for Lyapunov orbit conditions.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#monodromy",
    "href": "api/index.html#monodromy",
    "title": "Reference",
    "section": "monodromy",
    "text": "monodromy\n\n\n\n\n\n\nmonodromy(orbit, Δt; algorithm, reltol, abstol, kwargs...)\nCompute the monodromy matrix for any periodic orbit.\nmonodromy(\n    u,\n    μ,\n    T,\n    f;\n    algorithm,\n    reltol,\n    abstol,\n    save_everystep,\n    kwargs...\n)\nSolve for the monodromy matrix of the periodic orbit.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#propagate",
    "href": "api/index.html#propagate",
    "title": "Reference",
    "section": "propagate",
    "text": "propagate\n\n\n\n\n\n\npropagate(\n    orbit,\n    Δt;\n    stm,\n    algorithm,\n    reltol,\n    abstol,\n    kwargs...\n)\nNumerically integrate the orbit forward (or backward) in time, and return a new AstrodynamicalOrbit instance with identical parameters to the provided orbit.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  },
  {
    "objectID": "api/index.html#propagate-1",
    "href": "api/index.html#propagate-1",
    "title": "Reference",
    "section": "propagate!",
    "text": "propagate!\n\n\n\n\n\n\npropagate!(\n    orbit,\n    Δt;\n    stm,\n    algorithm,\n    reltol,\n    abstol,\n    kwargs...\n)\nNumerically integrate the orbit forward (or backward) in time, modifying the state vector in-place within the AstrodynamicalOrbit instance.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Reference</span>"
    ]
  }
]