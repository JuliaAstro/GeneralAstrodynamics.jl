name: Documentation

on:
  push:
    branches:
      - main
    tags: "*"
  pull_request:
  workflow_dispatch:

jobs:
  deploy-subpackages:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        package:
          - AstrodynamicalCalculations
          - AstrodynamicalModels
          - AstrodynamicalSolvers
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@latest
      - uses: quarto-dev/quarto-actions/setup@v2
      - uses: actions/setup-python@v4
      - run: pip install jupyter

      - name: Install Documentation Dependencies for ${{ matrix.package }}
        run: julia --project=lib/${{ matrix.package }}/docs -e 'using Pkg; Pkg.develop(PackageSpec(path = joinpath("lib", "${{ matrix.package }}"))); Pkg.instantiate(); Pkg.build()'

      - name: Build and deploy ${{ matrix.package }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
        working-directory: lib/${{ matrix.package }}
        run: julia --project=docs/ docs/make.jl

  deploy-superpackage:
    runs-on: ubuntu-latest
    needs: [deploy-subpackages]
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
      - uses: quarto-dev/quarto-actions/setup@v2
      - uses: actions/setup-python@v4
      - run: pip install jupyter

      - name: Install Documentation Dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop([PackageSpec(path=pwd()), PackageSpec(path=joinpath("lib", "AstrodynamicalCalculations")), PackageSpec(path=joinpath("lib", "AstrodynamicalModels")), PackageSpec(path=joinpath("lib", "AstrodynamicalSolvers"))]); Pkg.instantiate(); Pkg.build()'

      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        run: julia --project=docs/ docs/make.jl
